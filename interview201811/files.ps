%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: Obed Tandadjaja
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Mon Apr  8 18:02:09 2019
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 794 def
/d_page_h 547 def
/d_header_x 0 def
/d_header_y 532 def
/d_header_w 794 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 794 def
/d_footer_h 0 def
/d_output_w 794 def
/d_output_h 532 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./maps/UncommonWordsFromTwoSentences.java) def
/fdir (./maps) def
/ftail (UncommonWordsFromTwoSentences.java) def
% User defined strings:
/fmodstr (Mon Dec 10 00:17:24 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UncommonWordsFromTwoSentences.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 5 ms, faster than 99.33% of Java online submissions for Uncommon Wo) s
5 498 M
(rds from Two Sentences.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        We are given two sentences A and B.  \(A sentence is a string of space separa) s
5 474 M
(ted words.  Each word consists only of lowercase letters.\)) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        A word is uncommon if it appears exactly once in one of the sentences, and d) s
5 450 M
(oes not appear in the other sentence.) s
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Return a list of all uncommon words.) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        You may return the list in any order.) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Input: A = "this apple is sweet", B = "this apple is sour") s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Output: ["sweet","sour"]) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Input: A = "apple apple", B = "banana") s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Output: ["banana"]) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(        0 <= A.length <= 200) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        0 <= B.length <= 200) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(        A and B both contain only spaces and lowercase letters.) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
18.6 274 M (29:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(import) s
/F-gs-font 7 7 SF
60.6 274 M
( java.util.*;) s
18.6 266 M (30:) s
18.6 258 M (31:) s
/Courier-Bold 7 7 SUF
35.4 258 M
(class) s
/F-gs-font 7 7 SF
56.4 258 M
( UncommonWordsFromTwoSentences {) s
18.6 250 M (32:) s
35.4 250 M
(        ) s
/Courier-Bold 7 7 SUF
69 250 M
(public) s
/F-gs-font 7 7 SF
94.2 250 M
( ) s
/Courier-Bold 7 7 SUF
98.4 250 M
(static) s
/F-gs-font 7 7 SF
123.6 250 M
( ) s
/Courier-Bold 7 7 SUF
127.8 250 M
(void) s
/F-gs-font 7 7 SF
144.6 250 M
( main\(String[] args\) {) s
18.6 242 M (33:) s
35.4 242 M
(                uncommonFromSentences\() s
/Courier-Bold 7 7 SUF
195 242 M
("apple apple") s
/F-gs-font 7 7 SF
249.6 242 M
(, ) s
/Courier-Bold 7 7 SUF
258 242 M
("banana") s
/F-gs-font 7 7 SF
291.6 242 M
(\);) s
18.6 234 M (34:) s
35.4 234 M
(        }) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(        ) s
/Courier-Bold 7 7 SUF
69 218 M
(public) s
/F-gs-font 7 7 SF
94.2 218 M
( ) s
/Courier-Bold 7 7 SUF
98.4 218 M
(static) s
/F-gs-font 7 7 SF
123.6 218 M
( String[] uncommonFromSentences\(String A, String B\) {) s
18.6 210 M (37:) s
35.4 210 M
(                Map<String, Integer> count = ) s
/Courier-Bold 7 7 SUF
224.4 210 M
(new) s
/F-gs-font 7 7 SF
237 210 M
( HashMap\(\);) s
18.6 202 M (38:) s
35.4 202 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 202 M
(for) s
/F-gs-font 7 7 SF
115.2 202 M
( \(String word: A.split\() s
/Courier-Bold 7 7 SUF
211.8 202 M
(" ") s
/F-gs-font 7 7 SF
224.4 202 M
(\)\)) s
18.6 194 M (39:) s
35.4 194 M
(                        count.put\(word, count.getOrDefault\(word, 0\) + 1\);) s
18.6 186 M (40:) s
35.4 186 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 186 M
(for) s
/F-gs-font 7 7 SF
115.2 186 M
( \(String word: B.split\() s
/Courier-Bold 7 7 SUF
211.8 186 M
(" ") s
/F-gs-font 7 7 SF
224.4 186 M
(\)\)) s
18.6 178 M (41:) s
35.4 178 M
(                        count.put\(word, count.getOrDefault\(word, 0\) + 1\);) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(                List<String> ans = ) s
/Courier-Bold 7 7 SUF
182.4 162 M
(new) s
/F-gs-font 7 7 SF
195 162 M
( LinkedList\(\);) s
18.6 154 M (44:) s
35.4 154 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 154 M
(for) s
/F-gs-font 7 7 SF
115.2 154 M
( \(String word: count.keySet\(\)\)) s
18.6 146 M (45:) s
35.4 146 M
(                        ) s
/Courier-Bold 7 7 SUF
136.2 146 M
(if) s
/F-gs-font 7 7 SF
144.6 146 M
( \(count.get\(word\) == 1\)) s
18.6 138 M (46:) s
35.4 138 M
(                                ans.add\(word\);) s
18.6 130 M (47:) s
18.6 122 M (48:) s
35.4 122 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 122 M
(return) s
/F-gs-font 7 7 SF
127.8 122 M
( ans.toArray\() s
/Courier-Bold 7 7 SUF
182.4 122 M
(new) s
/F-gs-font 7 7 SF
195 122 M
( String[ans.size\(\)]\);) s
18.6 114 M (49:) s
35.4 114 M
(        }) s
18.6 106 M (50:) s
35.4 106 M
(}) s
_R
S
%%Page: (1) 2
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./stacks/RemoveKDigits.java) def
/fdir (./stacks) def
/ftail (RemoveKDigits.java) def
% User defined strings:
/fmodstr (Tue Apr 02 00:12:38 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RemoveKDigits.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a non-negative integer num represented as a string, remove k digits from the) s
5 490 M
( number so that the new number is the smallest possible.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The length of num is less than 10002 and will be \342\\211\245 k.) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  The given num does not contain any leading zero.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: num = "1432219", k = 3) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: "1219") s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which) s
5 410 M
( is the smallest.) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: num = "10200", k = 1) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: "200") s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Explanation: Remove the leading 1 and the number is 200. Note that the output must) s
5 362 M
( not contain leading zeroes.) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Input: num = "10", k = 2) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Output: "0") s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Explanation: Remove all the digits from the number and it is left with nothing whi) s
5 314 M
(ch is 0.) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(*/) s
/F-gs-font 7 7 SF
18.6 298 M (25:) s
18.6 290 M (26:) s
/Courier-Bold 7 7 SUF
35.4 290 M
(class) s
/F-gs-font 7 7 SF
56.4 290 M
( Solution {) s
18.6 282 M (27:) s
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(public) s
/F-gs-font 7 7 SF
69 282 M
( String removeKdigits\(String num, ) s
/Courier-Bold 7 7 SUF
211.8 282 M
(int) s
/F-gs-font 7 7 SF
224.4 282 M
( k\) {) s
18.6 274 M (28:) s
35.4 274 M
(    Stack<Integer> stack = ) s
/Courier-Bold 7 7 SUF
148.8 274 M
(new) s
/F-gs-font 7 7 SF
161.4 274 M
( Stack<>\(\);) s
18.6 266 M (29:) s
18.6 258 M (30:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(for) s
/F-gs-font 7 7 SF
64.8 258 M
(\() s
/Courier-Bold 7 7 SUF
69 258 M
(char) s
/F-gs-font 7 7 SF
85.8 258 M
( c : num.toCharArray\(\)\) {) s
18.6 250 M (31:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(while) s
/F-gs-font 7 7 SF
81.6 250 M
(\(!stack.isEmpty\(\) && k > 0 && stack.peek\(\) > c - ) s
/Courier-Bold 7 7 SUF
287.4 250 M
('0') s
/F-gs-font 7 7 SF
300 250 M
(\) {) s
18.6 242 M (32:) s
35.4 242 M
(        stack.pop\(\);) s
18.6 234 M (33:) s
35.4 234 M
(        k--;) s
18.6 226 M (34:) s
35.4 226 M
(      }) s
18.6 218 M (35:) s
18.6 210 M (36:) s
35.4 210 M
(      stack.push\(c - ) s
/Courier-Bold 7 7 SUF
123.6 210 M
('0') s
/F-gs-font 7 7 SF
136.2 210 M
(\);) s
18.6 202 M (37:) s
35.4 202 M
(    }) s
18.6 194 M (38:) s
18.6 186 M (39:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
( firstNonZero = -1;) s
18.6 178 M (40:) s
35.4 178 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
132 178 M
(new) s
/F-gs-font 7 7 SF
144.6 178 M
( StringBuilder\(\);) s
18.6 170 M (41:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(while) s
/F-gs-font 7 7 SF
73.2 170 M
(\(!stack.isEmpty\(\)\) {) s
18.6 162 M (42:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(if) s
/F-gs-font 7 7 SF
69 162 M
(\(k > 0\) {) s
18.6 154 M (43:) s
35.4 154 M
(        stack.pop\(\);) s
18.6 146 M (44:) s
35.4 146 M
(        k--;) s
18.6 138 M (45:) s
35.4 138 M
(        ) s
/Courier-Bold 7 7 SUF
69 138 M
(continue) s
/F-gs-font 7 7 SF
102.6 138 M
(;) s
18.6 130 M (46:) s
35.4 130 M
(      }) s
18.6 122 M (47:) s
18.6 114 M (48:) s
35.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 114 M
(if) s
/F-gs-font 7 7 SF
69 114 M
(\(stack.peek\(\) != 0\) firstNonZero = sb.length\(\);) s
18.6 106 M (49:) s
35.4 106 M
(      sb.insert\(0, stack.pop\(\)\);) s
18.6 98 M (50:) s
35.4 98 M
(    }) s
18.6 90 M (51:) s
35.4 90 M
(    String result = sb.substring\(sb.length\(\) - firstNonZero - 1, sb.length\(\)\);) s
18.6 82 M (52:) s
18.6 74 M (53:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(return) s
/F-gs-font 7 7 SF
77.4 74 M
( result.length\(\) == 0 ? ) s
/Courier-Bold 7 7 SUF
178.2 74 M
("0") s
/F-gs-font 7 7 SF
190.8 74 M
( : result;) s
18.6 66 M (54:) s
35.4 66 M
(  }) s
18.6 58 M (55:) s
35.4 58 M
(}) s
_R
S
%%Page: (1) 3
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./stacks/RemoveDuplicateLetters.java) def
/fdir (./stacks) def
/ftail (RemoveDuplicateLetters.java) def
% User defined strings:
/fmodstr (Tue Apr 02 21:24:25 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RemoveDuplicateLetters.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Hard) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a string which contains only lowercase letters, remove duplicate letters so ) s
5 490 M
(that every letter appear once and only once. You must make sure your result is the smallest ) s
5 482 M
(in lexicographical order among all possible results.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Input: "bcabc") s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Output: "abc") s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: "cbacdcbc") s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: "acdb") s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( */) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
18.6 386 M (16:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(class) s
/F-gs-font 7 7 SF
56.4 386 M
( Solution {) s
18.6 378 M (17:) s
35.4 378 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 378 M
(public) s
/F-gs-font 7 7 SF
69 378 M
( String removeDuplicateLetters\(String s\) {) s
18.6 370 M (18:) s
35.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 370 M
(int) s
/F-gs-font 7 7 SF
64.8 370 M
([] counters = ) s
/Courier-Bold 7 7 SUF
123.6 370 M
(new) s
/F-gs-font 7 7 SF
136.2 370 M
( ) s
/Courier-Bold 7 7 SUF
140.4 370 M
(int) s
/F-gs-font 7 7 SF
153 370 M
([26];) s
18.6 362 M (19:) s
35.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 362 M
(boolean) s
/F-gs-font 7 7 SF
81.6 362 M
([] visited = ) s
/Courier-Bold 7 7 SUF
136.2 362 M
(new) s
/F-gs-font 7 7 SF
148.8 362 M
( ) s
/Courier-Bold 7 7 SUF
153 362 M
(boolean) s
/F-gs-font 7 7 SF
182.4 362 M
([26];) s
18.6 354 M (20:) s
35.4 354 M
(    Stack<Character> stack = ) s
/Courier-Bold 7 7 SUF
157.2 354 M
(new) s
/F-gs-font 7 7 SF
169.8 354 M
( Stack<>\(\);) s
18.6 346 M (21:) s
18.6 338 M (22:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(for) s
/F-gs-font 7 7 SF
64.8 338 M
(\() s
/Courier-Bold 7 7 SUF
69 338 M
(char) s
/F-gs-font 7 7 SF
85.8 338 M
( c : s.toCharArray\(\)\)) s
18.6 330 M (23:) s
35.4 330 M
(      counters[c - ) s
/Courier-Bold 7 7 SUF
115.2 330 M
('a') s
/F-gs-font 7 7 SF
127.8 330 M
(]++;) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 314 M
(// use combination of visited and monotonous increasing stack) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(for) s
/F-gs-font 7 7 SF
64.8 306 M
(\() s
/Courier-Bold 7 7 SUF
69 306 M
(char) s
/F-gs-font 7 7 SF
85.8 306 M
( c : s.toCharArray\(\)\) {) s
18.6 298 M (27:) s
35.4 298 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 298 M
(if) s
/F-gs-font 7 7 SF
69 298 M
(\(visited[c - ) s
/Courier-Bold 7 7 SUF
123.6 298 M
('a') s
/F-gs-font 7 7 SF
136.2 298 M
(]\) {) s
18.6 290 M (28:) s
35.4 290 M
(        counters[c - ) s
/Courier-Bold 7 7 SUF
123.6 290 M
('a') s
/F-gs-font 7 7 SF
136.2 290 M
(]--;) s
18.6 282 M (29:) s
35.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
69 282 M
(continue) s
/F-gs-font 7 7 SF
102.6 282 M
(;) s
18.6 274 M (30:) s
35.4 274 M
(      }) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 258 M
(while) s
/F-gs-font 7 7 SF
81.6 258 M
(\(!stack.isEmpty\(\) &&) s
18.6 250 M (33:) s
35.4 250 M
(            stack.peek\(\) > c &&) s
18.6 242 M (34:) s
35.4 242 M
(            counters[stack.peek\(\) - ) s
/Courier-Bold 7 7 SUF
186.6 242 M
('a') s
/F-gs-font 7 7 SF
199.2 242 M
(] > 1\) {) s
18.6 234 M (35:) s
35.4 234 M
(        counters[stack.peek\(\) - ) s
/Courier-Bold 7 7 SUF
169.8 234 M
('a') s
/F-gs-font 7 7 SF
182.4 234 M
(]--;) s
18.6 226 M (36:) s
35.4 226 M
(        visited[stack.peek\(\) - ) s
/Courier-Bold 7 7 SUF
165.6 226 M
('a') s
/F-gs-font 7 7 SF
178.2 226 M
(] = ) s
/Courier-Bold 7 7 SUF
195 226 M
(false) s
/F-gs-font 7 7 SF
216 226 M
(;) s
18.6 218 M (37:) s
35.4 218 M
(        stack.pop\(\);) s
18.6 210 M (38:) s
35.4 210 M
(      }) s
18.6 202 M (39:) s
18.6 194 M (40:) s
35.4 194 M
(      stack.push\(c\);) s
18.6 186 M (41:) s
35.4 186 M
(      visited[c - ) s
/Courier-Bold 7 7 SUF
111 186 M
('a') s
/F-gs-font 7 7 SF
123.6 186 M
(] = ) s
/Courier-Bold 7 7 SUF
140.4 186 M
(true) s
/F-gs-font 7 7 SF
157.2 186 M
(;) s
18.6 178 M (42:) s
35.4 178 M
(    }) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(char) s
/F-gs-font 7 7 SF
69 162 M
([] result = ) s
/Courier-Bold 7 7 SUF
119.4 162 M
(new) s
/F-gs-font 7 7 SF
132 162 M
( ) s
/Courier-Bold 7 7 SUF
136.2 162 M
(char) s
/F-gs-font 7 7 SF
153 162 M
([stack.size\(\)];) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(for) s
/F-gs-font 7 7 SF
64.8 154 M
(\() s
/Courier-Bold 7 7 SUF
69 154 M
(int) s
/F-gs-font 7 7 SF
81.6 154 M
( i = stack.size\(\) - 1; i >= 0; i--\)) s
18.6 146 M (46:) s
35.4 146 M
(      result[i] = stack.pop\(\);) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(return) s
/F-gs-font 7 7 SF
77.4 130 M
( ) s
/Courier-Bold 7 7 SUF
81.6 130 M
(new) s
/F-gs-font 7 7 SF
94.2 130 M
( String\(result\);) s
18.6 122 M (49:) s
35.4 122 M
(  }) s
18.6 114 M (50:) s
35.4 114 M
(}) s
_R
S
%%Page: (1) 4
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./stacks/AsteroidCollision.java) def
/fdir (./stacks) def
/ftail (AsteroidCollision.java) def
% User defined strings:
/fmodstr (Thu Mar 07 22:57:18 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (AsteroidCollision.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  We are given an array asteroids of integers representing asteroids in a row.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  For each asteroid, the absolute value represents its size, and the sign represents) s
5 474 M
( its direction \(positive meaning right, negative meaning left\). Each asteroid moves at the s) s
5 466 M
(ame speed.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Find out the state of the asteroids after all collisions. If two asteroids meet, t) s
5 442 M
(he smaller one will explode. If both are the same size, both will explode. Two asteroids mov) s
5 434 M
(ing in the same direction will never meet.) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  asteroids = [5, 10, -5]) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: [5, 10]) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  The 10 and -5 collide resulting in 10.  The 5 and 10 never collide.) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  asteroids = [8, -8]) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: []) s
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  The 8 and -8 collide exploding each other.) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 314 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  asteroids = [10, 2, -5]) s
/F-gs-font 7 7 SF
18.6 298 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output: [10]) s
/F-gs-font 7 7 SF
18.6 290 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 282 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  The 2 and -5 collide resulting in -5.  The 10 and -5 collide resulting in 10.) s
/F-gs-font 7 7 SF
18.6 274 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 266 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 258 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  asteroids = [-2, -1, 1, 2]) s
/F-gs-font 7 7 SF
18.6 250 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Output: [-2, -1, 1, 2]) s
/F-gs-font 7 7 SF
18.6 242 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 234 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  The -2 and -1 are moving left, while the 1 and 2 are moving right.) s
/F-gs-font 7 7 SF
18.6 226 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  Asteroids moving the same direction never meet, so no asteroids will meet each oth) s
5 218 M
(er.) s
/F-gs-font 7 7 SF
18.6 210 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 202 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 194 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  The length of asteroids will be at most 10000.) s
/F-gs-font 7 7 SF
18.6 186 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  Each asteroid will be a non-zero integer in the range [-1000, 1000]..) s
/F-gs-font 7 7 SF
18.6 178 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
( */) s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
18.6 162 M (41:) s
/Courier-Bold 7 7 SUF
35.4 162 M
(class) s
/F-gs-font 7 7 SF
56.4 162 M
( Solution {) s
18.6 154 M (42:) s
35.4 154 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 154 M
(public) s
/F-gs-font 7 7 SF
69 154 M
( ) s
/Courier-Bold 7 7 SUF
73.2 154 M
(int) s
/F-gs-font 7 7 SF
85.8 154 M
([] asteroidCollision\() s
/Courier-Bold 7 7 SUF
174 154 M
(int) s
/F-gs-font 7 7 SF
186.6 154 M
([] asteroids\) {) s
18.6 146 M (43:) s
35.4 146 M
(    Stack<Integer> s = ) s
/Courier-Bold 7 7 SUF
132 146 M
(new) s
/F-gs-font 7 7 SF
144.6 146 M
( Stack<>\(\);) s
18.6 138 M (44:) s
18.6 130 M (45:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(for) s
/F-gs-font 7 7 SF
64.8 130 M
(\() s
/Courier-Bold 7 7 SUF
69 130 M
(int) s
/F-gs-font 7 7 SF
81.6 130 M
( asteroid : asteroids\) {) s
18.6 122 M (46:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(boolean) s
/F-gs-font 7 7 SF
90 122 M
( addAsteroid = ) s
/Courier-Bold 7 7 SUF
153 122 M
(true) s
/F-gs-font 7 7 SF
169.8 122 M
(;) s
18.6 114 M (47:) s
18.6 106 M (48:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(while) s
/F-gs-font 7 7 SF
81.6 106 M
(\(!s.isEmpty\(\) && asteroid < 0 && s.peek\(\) > 0\) {) s
18.6 98 M (49:) s
35.4 98 M
(        ) s
/Courier-Bold 7 7 SUF
69 98 M
(if) s
/F-gs-font 7 7 SF
77.4 98 M
(\(s.peek\(\) < -asteroid\) {) s
18.6 90 M (50:) s
35.4 90 M
(          s.pop\(\);) s
18.6 82 M (51:) s
35.4 82 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 82 M
(else) s
/F-gs-font 7 7 SF
94.2 82 M
( ) s
/Courier-Bold 7 7 SUF
98.4 82 M
(if) s
/F-gs-font 7 7 SF
106.8 82 M
(\(s.peek\(\) == -asteroid\) {) s
18.6 74 M (52:) s
35.4 74 M
(          s.pop\(\);) s
18.6 66 M (53:) s
35.4 66 M
(          addAsteroid = ) s
/Courier-Bold 7 7 SUF
136.2 66 M
(false) s
/F-gs-font 7 7 SF
157.2 66 M
(;) s
18.6 58 M (54:) s
35.4 58 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 58 M
(break) s
/F-gs-font 7 7 SF
98.4 58 M
(;) s
18.6 50 M (55:) s
35.4 50 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 50 M
(else) s
/F-gs-font 7 7 SF
94.2 50 M
( {) s
18.6 42 M (56:) s
35.4 42 M
(          addAsteroid = ) s
/Courier-Bold 7 7 SUF
136.2 42 M
(false) s
/F-gs-font 7 7 SF
157.2 42 M
(;) s
18.6 34 M (57:) s
35.4 34 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 34 M
(break) s
/F-gs-font 7 7 SF
98.4 34 M
(;) s
18.6 26 M (58:) s
35.4 26 M
(        }) s
18.6 18 M (59:) s
35.4 18 M
(      }) s
18.6 10 M (60:) s
18.6 2 M (61:) s
35.4 2 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 2 M
(if) s
/F-gs-font 7 7 SF
69 2 M
(\(addAsteroid\) s.push\(asteroid\);) s
415.6 522 M (62:) s
432.4 522 M
(    }) s
415.6 514 M (63:) s
415.6 506 M (64:) s
432.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 506 M
(int) s
/F-gs-font 7 7 SF
461.8 506 M
([] result = ) s
/Courier-Bold 7 7 SUF
512.2 506 M
(new) s
/F-gs-font 7 7 SF
524.8 506 M
( ) s
/Courier-Bold 7 7 SUF
529 506 M
(int) s
/F-gs-font 7 7 SF
541.6 506 M
([s.size\(\)];) s
415.6 498 M (65:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(for) s
/F-gs-font 7 7 SF
461.8 498 M
(\() s
/Courier-Bold 7 7 SUF
466 498 M
(int) s
/F-gs-font 7 7 SF
478.6 498 M
( i = result.length - 1; i >= 0; i--\) {) s
415.6 490 M (66:) s
432.4 490 M
(      result[i] = s.pop\(\);) s
415.6 482 M (67:) s
432.4 482 M
(    }) s
415.6 474 M (68:) s
415.6 466 M (69:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(return) s
/F-gs-font 7 7 SF
474.4 466 M
( result;) s
415.6 458 M (70:) s
432.4 458 M
(  }) s
415.6 450 M (71:) s
432.4 450 M
(}) s
_R
S
%%Page: (1) 5
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/MaximumBinaryTree.java) def
/fdir (./trees) def
/ftail (MaximumBinaryTree.java) def
% User defined strings:
/fmodstr (Fri Mar 01 17:04:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaximumBinaryTree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an integer array with no duplicates. A maximum tree building on this array i) s
5 490 M
(s defined as follow:) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  The root is the maximum number in the array.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The left subtree is the maximum tree constructed from left part subarray divided b) s
5 458 M
(y the maximum number.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  The right subtree is the maximum tree constructed from right part subarray divided) s
5 442 M
( by the maximum number.) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Construct the maximum tree by the given array and output the root node of this tre) s
5 426 M
(e.) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: [3,2,1,6,0,5]) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: return the tree root node representing the following tree:) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  6) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  /   \\) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  3     5) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  \\    /) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  2  0) s
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  \\) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  1) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 314 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  The size of the given array will be in the range [1,1000].) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( */) s
/F-gs-font 7 7 SF
18.6 298 M (25:) s
18.6 290 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(/**) s
/F-gs-font 7 7 SF
18.6 282 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 274 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 266 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 258 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 250 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 242 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 234 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( * }) s
/F-gs-font 7 7 SF
18.6 226 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
( */) s
/F-gs-font 7 7 SF
18.6 218 M (35:) s
/Courier-Bold 7 7 SUF
35.4 218 M
(class) s
/F-gs-font 7 7 SF
56.4 218 M
( Solution {) s
18.6 210 M (36:) s
35.4 210 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 210 M
(public) s
/F-gs-font 7 7 SF
69 210 M
( TreeNode constructMaximumBinaryTree\() s
/Courier-Bold 7 7 SUF
224.4 210 M
(int) s
/F-gs-font 7 7 SF
237 210 M
([] nums\) {) s
18.6 202 M (37:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( construct\(nums, 0, nums.length - 1\);) s
18.6 194 M (38:) s
35.4 194 M
(  }) s
18.6 186 M (39:) s
18.6 178 M (40:) s
35.4 178 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 178 M
(public) s
/F-gs-font 7 7 SF
69 178 M
( TreeNode construct\() s
/Courier-Bold 7 7 SUF
153 178 M
(int) s
/F-gs-font 7 7 SF
165.6 178 M
([] nums, ) s
/Courier-Bold 7 7 SUF
203.4 178 M
(int) s
/F-gs-font 7 7 SF
216 178 M
( start, ) s
/Courier-Bold 7 7 SUF
249.6 178 M
(int) s
/F-gs-font 7 7 SF
262.2 178 M
( end\) {) s
18.6 170 M (41:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(if) s
/F-gs-font 7 7 SF
60.6 170 M
(\(start > end\) ) s
/Courier-Bold 7 7 SUF
119.4 170 M
(return) s
/F-gs-font 7 7 SF
144.6 170 M
( ) s
/Courier-Bold 7 7 SUF
148.8 170 M
(null) s
/F-gs-font 7 7 SF
165.6 170 M
(;) s
18.6 162 M (42:) s
18.6 154 M (43:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(int) s
/F-gs-font 7 7 SF
64.8 154 M
( max = start;) s
18.6 146 M (44:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(for) s
/F-gs-font 7 7 SF
64.8 146 M
(\() s
/Courier-Bold 7 7 SUF
69 146 M
(int) s
/F-gs-font 7 7 SF
81.6 146 M
( i = start + 1; i <= end; i++\)) s
18.6 138 M (45:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
(if) s
/F-gs-font 7 7 SF
69 138 M
(\(nums[i] > nums[max]\) max = i;) s
18.6 130 M (46:) s
18.6 122 M (47:) s
35.4 122 M
(    TreeNode root = ) s
/Courier-Bold 7 7 SUF
119.4 122 M
(new) s
/F-gs-font 7 7 SF
132 122 M
( TreeNode\(nums[max]\);) s
18.6 114 M (48:) s
35.4 114 M
(    root.left = construct\(nums, start, max - 1\);) s
18.6 106 M (49:) s
35.4 106 M
(    root.right = construct\(nums, max + 1, end\);) s
18.6 98 M (50:) s
18.6 90 M (51:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( root;) s
18.6 82 M (52:) s
35.4 82 M
(  }) s
18.6 74 M (53:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/MaximumDepthOfBST.java) def
/fdir (./trees) def
/ftail (MaximumDepthOfBST.java) def
% User defined strings:
/fmodstr (Thu Dec 13 18:21:24 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaximumDepthOfBST.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, find its maximum depth.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  The maximum depth is the number of nodes along the longest path from the root node) s
5 474 M
( down to the farthest leaf node.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Note: A leaf is a node with no children.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Given binary tree [3,9,20,null,null,15,7],) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  3) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  9  20) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  15   7) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  return its depth = 3.) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(/**) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( * }) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(class) s
/F-gs-font 7 7 SF
56.4 274 M
( MaximumDepthOfBST {) s
18.6 266 M (32:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( ) s
/Courier-Bold 7 7 SUF
73.2 266 M
(int) s
/F-gs-font 7 7 SF
85.8 266 M
( maxDepth\(TreeNode root\) {) s
18.6 258 M (33:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(return) s
/F-gs-font 7 7 SF
77.4 258 M
( getDepth\(root, 0\);) s
18.6 250 M (34:) s
35.4 250 M
(  }) s
18.6 242 M (35:) s
18.6 234 M (36:) s
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(int) s
/F-gs-font 7 7 SF
85.8 234 M
( getDepth\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
190.8 234 M
(int) s
/F-gs-font 7 7 SF
203.4 234 M
( depth\) {) s
18.6 226 M (37:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 226 M
(null) s
/F-gs-font 7 7 SF
115.2 226 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 226 M
(return) s
/F-gs-font 7 7 SF
148.8 226 M
( 0;) s
18.6 218 M (38:) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( 1 + Math.max\(getDepth\(root.left, depth\), getDepth\(root.right, depth\)\);) s
18.6 202 M (40:) s
35.4 202 M
(  }) s
18.6 194 M (41:) s
35.4 194 M
(}) s
_R
S
%%Page: (1) 7
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/KthSmallestElementInBST.java) def
/fdir (./trees) def
/ftail (KthSmallestElementInBST.java) def
% User defined strings:
/fmodstr (Fri Mar 08 00:23:23 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (KthSmallestElementInBST.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary search tree, write a function kthSmallest to find the kth smallest ) s
5 490 M
(element in it.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  You may assume k is always valid, 1 \342\\211\244 k \342\\211\244 BST's total elements.) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: root = [3,1,4,null,2], k = 1) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  3) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  1   4) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  \\) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  2) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: root = [5,3,6,2,4,null,null,1], k = 3) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  5) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  3   6) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  2   4) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  /) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  1) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  What if the BST is modified \(insert/delete operations\) often and you need to find ) s
5 274 M
(the kth smallest frequently? How would you optimize the kthSmallest routine?) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( */) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(/**) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 234 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 226 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 218 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 210 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 202 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 194 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
( * }) s
/F-gs-font 7 7 SF
18.6 186 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
( */) s
/F-gs-font 7 7 SF
18.6 178 M (42:) s
/Courier-Bold 7 7 SUF
35.4 178 M
(class) s
/F-gs-font 7 7 SF
56.4 178 M
( Solution {) s
18.6 170 M (43:) s
35.4 170 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 170 M
(int) s
/F-gs-font 7 7 SF
56.4 170 M
( counter;) s
18.6 162 M (44:) s
18.6 154 M (45:) s
35.4 154 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 154 M
(public) s
/F-gs-font 7 7 SF
69 154 M
( ) s
/Courier-Bold 7 7 SUF
73.2 154 M
(int) s
/F-gs-font 7 7 SF
85.8 154 M
( kthSmallest\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
203.4 154 M
(int) s
/F-gs-font 7 7 SF
216 154 M
( k\) {) s
18.6 146 M (46:) s
35.4 146 M
(    counter = 0;) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(return) s
/F-gs-font 7 7 SF
77.4 130 M
( inorder\(root, k\);) s
18.6 122 M (49:) s
35.4 122 M
(  }) s
18.6 114 M (50:) s
18.6 106 M (51:) s
35.4 106 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 106 M
(public) s
/F-gs-font 7 7 SF
69 106 M
( ) s
/Courier-Bold 7 7 SUF
73.2 106 M
(int) s
/F-gs-font 7 7 SF
85.8 106 M
( inorder\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
186.6 106 M
(int) s
/F-gs-font 7 7 SF
199.2 106 M
( k\) {) s
18.6 98 M (52:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(if) s
/F-gs-font 7 7 SF
60.6 98 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 98 M
(null) s
/F-gs-font 7 7 SF
115.2 98 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 98 M
(return) s
/F-gs-font 7 7 SF
148.8 98 M
( -1;) s
18.6 90 M (53:) s
18.6 82 M (54:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(int) s
/F-gs-font 7 7 SF
64.8 82 M
( left = inorder\(root.left, k\);) s
18.6 74 M (55:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(if) s
/F-gs-font 7 7 SF
60.6 74 M
(\(left != -1\) ) s
/Courier-Bold 7 7 SUF
115.2 74 M
(return) s
/F-gs-font 7 7 SF
140.4 74 M
( left;) s
18.6 66 M (56:) s
18.6 58 M (57:) s
35.4 58 M
(    counter++;) s
18.6 50 M (58:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(if) s
/F-gs-font 7 7 SF
60.6 50 M
(\(counter == k\) ) s
/Courier-Bold 7 7 SUF
123.6 50 M
(return) s
/F-gs-font 7 7 SF
148.8 50 M
( root.val;) s
18.6 42 M (59:) s
18.6 34 M (60:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(int) s
/F-gs-font 7 7 SF
64.8 34 M
( right = inorder\(root.right, k\);) s
18.6 26 M (61:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(if) s
/F-gs-font 7 7 SF
60.6 26 M
(\(right != -1\) ) s
/Courier-Bold 7 7 SUF
119.4 26 M
(return) s
/F-gs-font 7 7 SF
144.6 26 M
( right;) s
18.6 18 M (62:) s
18.6 10 M (63:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(return) s
/F-gs-font 7 7 SF
77.4 10 M
( -1;) s
18.6 2 M (64:) s
35.4 2 M
(  }) s
415.6 522 M (65:) s
432.4 522 M
(}) s
_R
S
%%Page: (1) 8
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/BinaryTreeLevelOrderTraversalZigZag.java) def
/fdir (./trees) def
/ftail (BinaryTreeLevelOrderTraversalZigZag.java) def
% User defined strings:
/fmodstr (Sun Apr 07 03:22:20 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BinaryTreeLevelOrderTraversalZigZag.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, return the zigzag level order traversal of its nodes' values.) s
5 490 M
( \(ie, from left to right, then right to left for the next level and alternate between\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Given binary tree [3,9,20,null,null,15,7],) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  3) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  9  20) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  15   7) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  return its zigzag level order traversal as:) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [3],) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [20,9],) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [15,7]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  ]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(/**) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * }) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Bold 7 7 SUF
35.4 282 M
(class) s
/F-gs-font 7 7 SF
56.4 282 M
( Solution {) s
18.6 274 M (31:) s
35.4 274 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 274 M
(public) s
/F-gs-font 7 7 SF
69 274 M
( List<List<Integer>> zigzagLevelOrder\(TreeNode root\) {) s
18.6 266 M (32:) s
35.4 266 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 266 M
(new) s
/F-gs-font 7 7 SF
186.6 266 M
( ArrayList<>\(\);) s
18.6 258 M (33:) s
35.4 258 M
(    LinkedList<Integer> levelList = ) s
/Courier-Bold 7 7 SUF
186.6 258 M
(new) s
/F-gs-font 7 7 SF
199.2 258 M
( LinkedList<>\(\);) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(int) s
/F-gs-font 7 7 SF
64.8 250 M
( count = 0;) s
18.6 242 M (35:) s
18.6 234 M (36:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(if) s
/F-gs-font 7 7 SF
60.6 234 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 234 M
(null) s
/F-gs-font 7 7 SF
115.2 234 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 234 M
(return) s
/F-gs-font 7 7 SF
148.8 234 M
( result;) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(    Queue<TreeNode> q = ) s
/Courier-Bold 7 7 SUF
136.2 218 M
(new) s
/F-gs-font 7 7 SF
148.8 218 M
( LinkedList<>\(\);) s
18.6 210 M (39:) s
35.4 210 M
(    q.add\(root\);) s
18.6 202 M (40:) s
18.6 194 M (41:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(while) s
/F-gs-font 7 7 SF
73.2 194 M
(\(!q.isEmpty\(\)\) {) s
18.6 186 M (42:) s
35.4 186 M
(      levelList.clear\(\);) s
18.6 178 M (43:) s
18.6 170 M (44:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(int) s
/F-gs-font 7 7 SF
73.2 170 M
( size = q.size\(\);) s
18.6 162 M (45:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(for) s
/F-gs-font 7 7 SF
73.2 162 M
(\() s
/Courier-Bold 7 7 SUF
77.4 162 M
(int) s
/F-gs-font 7 7 SF
90 162 M
( i = 0; i < size; i++\) {) s
18.6 154 M (46:) s
35.4 154 M
(        TreeNode currNode = q.poll\(\);) s
18.6 146 M (47:) s
18.6 138 M (48:) s
35.4 138 M
(        ) s
/Courier-Bold 7 7 SUF
69 138 M
(if) s
/F-gs-font 7 7 SF
77.4 138 M
(\(count % 2 == 0\)) s
18.6 130 M (49:) s
35.4 130 M
(          levelList.addLast\(currNode.val\);) s
18.6 122 M (50:) s
35.4 122 M
(        ) s
/Courier-Bold 7 7 SUF
69 122 M
(else) s
/F-gs-font 7 7 SF
18.6 114 M (51:) s
35.4 114 M
(          levelList.addFirst\(currNode.val\);) s
18.6 106 M (52:) s
18.6 98 M (53:) s
35.4 98 M
(        ) s
/Courier-Bold 7 7 SUF
69 98 M
(if) s
/F-gs-font 7 7 SF
77.4 98 M
(\(currNode.left != ) s
/Courier-Bold 7 7 SUF
153 98 M
(null) s
/F-gs-font 7 7 SF
169.8 98 M
(\) q.offer\(currNode.left\);) s
18.6 90 M (54:) s
35.4 90 M
(        ) s
/Courier-Bold 7 7 SUF
69 90 M
(if) s
/F-gs-font 7 7 SF
77.4 90 M
(\(currNode.right != ) s
/Courier-Bold 7 7 SUF
157.2 90 M
(null) s
/F-gs-font 7 7 SF
174 90 M
(\) q.offer\(currNode.right\);) s
18.6 82 M (55:) s
35.4 82 M
(      }) s
18.6 74 M (56:) s
18.6 66 M (57:) s
35.4 66 M
(      result.add\() s
/Courier-Bold 7 7 SUF
106.8 66 M
(new) s
/F-gs-font 7 7 SF
119.4 66 M
( ArrayList<>\(levelList\)\);) s
18.6 58 M (58:) s
35.4 58 M
(      count++;) s
18.6 50 M (59:) s
35.4 50 M
(    }) s
18.6 42 M (60:) s
18.6 34 M (61:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(return) s
/F-gs-font 7 7 SF
77.4 34 M
( result;) s
18.6 26 M (62:) s
35.4 26 M
(  }) s
18.6 18 M (63:) s
35.4 18 M
(}) s
_R
S
%%Page: (1) 9
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/BinaryTreeLevelOrderTraversal2.java) def
/fdir (./trees) def
/ftail (BinaryTreeLevelOrderTraversal2.java) def
% User defined strings:
/fmodstr (Sun Feb 24 13:28:26 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BinaryTreeLevelOrderTraversal2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, return the bottom-up level order traversal of its nodes' valu) s
5 490 M
(es. \(ie, from left to right, level by level from leaf to root\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Given binary tree [3,9,20,null,null,15,7],) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  3) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  9  20) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  15   7) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  return its bottom-up level order traversal as:) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [15,7],) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [9,20],) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [3]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  ]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(/**) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * }) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Bold 7 7 SUF
35.4 282 M
(class) s
/F-gs-font 7 7 SF
56.4 282 M
( Solution {) s
18.6 274 M (31:) s
35.4 274 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 274 M
(public) s
/F-gs-font 7 7 SF
69 274 M
( List<List<Integer>> levelOrderBottom\(TreeNode root\) {) s
18.6 266 M (32:) s
35.4 266 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 266 M
(new) s
/F-gs-font 7 7 SF
186.6 266 M
( ArrayList<>\(\);) s
18.6 258 M (33:) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(if) s
/F-gs-font 7 7 SF
60.6 250 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 250 M
(null) s
/F-gs-font 7 7 SF
115.2 250 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 250 M
(return) s
/F-gs-font 7 7 SF
148.8 250 M
( result;) s
18.6 242 M (35:) s
18.6 234 M (36:) s
35.4 234 M
(    Queue<TreeNode> q = ) s
/Courier-Bold 7 7 SUF
136.2 234 M
(new) s
/F-gs-font 7 7 SF
148.8 234 M
( LinkedList<>\(\);) s
18.6 226 M (37:) s
35.4 226 M
(    q.add\(root\);) s
18.6 218 M (38:) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(while) s
/F-gs-font 7 7 SF
73.2 210 M
(\(!q.isEmpty\(\)\) {) s
18.6 202 M (40:) s
35.4 202 M
(      List<Integer> currTraversal = ) s
/Courier-Bold 7 7 SUF
186.6 202 M
(new) s
/F-gs-font 7 7 SF
199.2 202 M
( ArrayList<>\(\);) s
18.6 194 M (41:) s
35.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 194 M
(int) s
/F-gs-font 7 7 SF
73.2 194 M
( count = q.size\(\);) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(for) s
/F-gs-font 7 7 SF
73.2 178 M
(\() s
/Courier-Bold 7 7 SUF
77.4 178 M
(int) s
/F-gs-font 7 7 SF
90 178 M
( i = 0; i < count; i++\) {) s
18.6 170 M (44:) s
35.4 170 M
(        TreeNode curr = q.poll\(\);) s
18.6 162 M (45:) s
35.4 162 M
(        currTraversal.add\(curr.val\);) s
18.6 154 M (46:) s
18.6 146 M (47:) s
35.4 146 M
(        ) s
/Courier-Bold 7 7 SUF
69 146 M
(if) s
/F-gs-font 7 7 SF
77.4 146 M
(\(curr.left != ) s
/Courier-Bold 7 7 SUF
136.2 146 M
(null) s
/F-gs-font 7 7 SF
153 146 M
(\) q.add\(curr.left\);) s
18.6 138 M (48:) s
35.4 138 M
(        ) s
/Courier-Bold 7 7 SUF
69 138 M
(if) s
/F-gs-font 7 7 SF
77.4 138 M
(\(curr.right != ) s
/Courier-Bold 7 7 SUF
140.4 138 M
(null) s
/F-gs-font 7 7 SF
157.2 138 M
(\) q.add\(curr.right\);) s
18.6 130 M (49:) s
35.4 130 M
(      }) s
18.6 122 M (50:) s
18.6 114 M (51:) s
35.4 114 M
(      result.add\(0, currTraversal\);) s
18.6 106 M (52:) s
35.4 106 M
(    }) s
18.6 98 M (53:) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( result;) s
18.6 82 M (55:) s
35.4 82 M
(  }) s
18.6 74 M (56:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 10
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/AverageOfLevelsInBinaryTree.java) def
/fdir (./trees) def
/ftail (AverageOfLevelsInBinaryTree.java) def
% User defined strings:
/fmodstr (Sun Feb 24 13:18:01 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (AverageOfLevelsInBinaryTree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a non-empty binary tree, return the average value of the nodes on each level) s
5 490 M
( in the form of an array.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Input:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  3) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  / \\) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  9  20) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  15   7) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: [3, 14.5, 11]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is) s
5 402 M
( 11. Hence return [3, 14.5, 11].) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(/**) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( * }) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (27:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( List<Double> averageOfLevels\(TreeNode root\) {) s
18.6 290 M (28:) s
35.4 290 M
(    List<Double> result = ) s
/Courier-Bold 7 7 SUF
144.6 290 M
(new) s
/F-gs-font 7 7 SF
157.2 290 M
( ArrayList<>\(\);) s
18.6 282 M (29:) s
18.6 274 M (30:) s
35.4 274 M
(    Queue<TreeNode> q = ) s
/Courier-Bold 7 7 SUF
136.2 274 M
(new) s
/F-gs-font 7 7 SF
148.8 274 M
( LinkedList<>\(\);) s
18.6 266 M (31:) s
35.4 266 M
(    q.add\(root\);) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(while) s
/F-gs-font 7 7 SF
73.2 258 M
(\(!q.isEmpty\(\)\) {) s
18.6 250 M (33:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(double) s
/F-gs-font 7 7 SF
85.8 250 M
( sum = 0.0;) s
18.6 242 M (34:) s
35.4 242 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 242 M
(int) s
/F-gs-font 7 7 SF
73.2 242 M
( count = q.size\(\);) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(for) s
/F-gs-font 7 7 SF
73.2 226 M
(\() s
/Courier-Bold 7 7 SUF
77.4 226 M
(int) s
/F-gs-font 7 7 SF
90 226 M
( i = 0; i < count; i++\) {) s
18.6 218 M (37:) s
35.4 218 M
(        TreeNode curr = q.poll\(\);) s
18.6 210 M (38:) s
35.4 210 M
(        sum += curr.val;) s
18.6 202 M (39:) s
35.4 202 M
(        ) s
/Courier-Bold 7 7 SUF
69 202 M
(if) s
/F-gs-font 7 7 SF
77.4 202 M
(\(curr.left != ) s
/Courier-Bold 7 7 SUF
136.2 202 M
(null) s
/F-gs-font 7 7 SF
153 202 M
(\) q.add\(curr.left\);) s
18.6 194 M (40:) s
35.4 194 M
(        ) s
/Courier-Bold 7 7 SUF
69 194 M
(if) s
/F-gs-font 7 7 SF
77.4 194 M
(\(curr.right != ) s
/Courier-Bold 7 7 SUF
140.4 194 M
(null) s
/F-gs-font 7 7 SF
157.2 194 M
(\) q.add\(curr.right\);) s
18.6 186 M (41:) s
35.4 186 M
(      }) s
18.6 178 M (42:) s
18.6 170 M (43:) s
35.4 170 M
(      result.add\(sum / count\);) s
18.6 162 M (44:) s
35.4 162 M
(    }) s
18.6 154 M (45:) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(return) s
/F-gs-font 7 7 SF
77.4 146 M
( result;) s
18.6 138 M (47:) s
35.4 138 M
(  }) s
18.6 130 M (48:) s
35.4 130 M
(}) s
_R
S
%%Page: (1) 11
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/FlattenBinaryTreeToLinkedList.java) def
/fdir (./trees) def
/ftail (FlattenBinaryTreeToLinkedList.java) def
% User defined strings:
/fmodstr (Mon Apr 08 01:10:57 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FlattenBinaryTreeToLinkedList.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, flatten it to a linked list in-place.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  For example, given the following tree:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  1) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  2   5) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  / \\   \\) s
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  3   4   6) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  The flattened tree should look like:) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  1) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  \\) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  2) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  \\) s
/F-gs-font 7 7 SF
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  3) s
/F-gs-font 7 7 SF
18.6 370 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  \\) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  4) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  \\) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  5) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  \\) s
/F-gs-font 7 7 SF
18.6 330 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  6) s
/F-gs-font 7 7 SF
18.6 322 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (27:) s
18.6 306 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(/**) s
/F-gs-font 7 7 SF
18.6 298 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 290 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 282 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 274 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 266 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 258 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 250 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( * }) s
/F-gs-font 7 7 SF
18.6 242 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (37:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (38:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(void) s
/F-gs-font 7 7 SF
90 226 M
( flatten\(TreeNode root\) {) s
18.6 218 M (39:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(if) s
/F-gs-font 7 7 SF
60.6 218 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 218 M
(null) s
/F-gs-font 7 7 SF
115.2 218 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 218 M
(return) s
/F-gs-font 7 7 SF
148.8 218 M
(;) s
18.6 210 M (40:) s
18.6 202 M (41:) s
35.4 202 M
(    flatten\(root.left\);) s
18.6 194 M (42:) s
35.4 194 M
(    flatten\(root.right\);) s
18.6 186 M (43:) s
18.6 178 M (44:) s
35.4 178 M
(    TreeNode left = root.left;) s
18.6 170 M (45:) s
35.4 170 M
(    TreeNode right = root.right;) s
18.6 162 M (46:) s
18.6 154 M (47:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(if) s
/F-gs-font 7 7 SF
60.6 154 M
(\(left != ) s
/Courier-Bold 7 7 SUF
98.4 154 M
(null) s
/F-gs-font 7 7 SF
115.2 154 M
(\) {) s
18.6 146 M (48:) s
35.4 146 M
(      root.right = left;) s
18.6 138 M (49:) s
35.4 138 M
(      root.left = ) s
/Courier-Bold 7 7 SUF
111 138 M
(null) s
/F-gs-font 7 7 SF
127.8 138 M
(;) s
18.6 130 M (50:) s
18.6 122 M (51:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(while) s
/F-gs-font 7 7 SF
81.6 122 M
(\(left.right != ) s
/Courier-Bold 7 7 SUF
144.6 122 M
(null) s
/F-gs-font 7 7 SF
161.4 122 M
(\) {) s
18.6 114 M (52:) s
35.4 114 M
(        left = left.right;) s
18.6 106 M (53:) s
35.4 106 M
(      }) s
18.6 98 M (54:) s
18.6 90 M (55:) s
35.4 90 M
(      left.right = right;) s
18.6 82 M (56:) s
35.4 82 M
(    }) s
18.6 74 M (57:) s
35.4 74 M
(  }) s
18.6 66 M (58:) s
35.4 66 M
(}) s
_R
S
%%Page: (1) 12
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/UniqueBinarySearchTrees.java) def
/fdir (./trees) def
/ftail (UniqueBinarySearchTrees.java) def
% User defined strings:
/fmodstr (Sun Apr 07 15:07:42 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniqueBinarySearchTrees.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given n, how many structurally unique BST's \(binary search trees\) that store value) s
5 490 M
(s 1 ... n?) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input: 3) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Output: 5) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Given n = 3, there are a total of 5 unique BST's:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  1         3     3      2      1) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  \\       /     /      / \\      \\) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  3     2     1      1   3      2) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  /     /       \\                 \\) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  2     1         2                 3) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
18.6 362 M (20:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( Solution {) s
18.6 354 M (21:) s
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// 1: dp - idea is to choose a root and multiply the left and right nodes) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 346 M
(// e.g. when n = 3) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 338 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 338 M
(//      1. chose root = 1, with 2 right nodes = 2) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 330 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 330 M
(//      2. choose root = 2, with 1 left and 1 right node = 1) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 322 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 322 M
(//      3. choose root = 3, with 2 left nodes = 2) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 314 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 314 M
(//      total = 2 + 1 + 2 = 5) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( ) s
/Courier-Bold 7 7 SUF
73.2 306 M
(int) s
/F-gs-font 7 7 SF
85.8 306 M
( numTrees\() s
/Courier-Bold 7 7 SUF
127.8 306 M
(int) s
/F-gs-font 7 7 SF
140.4 306 M
( n\) {) s
18.6 298 M (28:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(int) s
/F-gs-font 7 7 SF
64.8 298 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 298 M
(new) s
/F-gs-font 7 7 SF
111 298 M
( ) s
/Courier-Bold 7 7 SUF
115.2 298 M
(int) s
/F-gs-font 7 7 SF
127.8 298 M
([n + 1];) s
18.6 290 M (29:) s
35.4 290 M
(    dp[0] = 1;) s
18.6 282 M (30:) s
35.4 282 M
(    dp[1] = 1;) s
18.6 274 M (31:) s
18.6 266 M (32:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(for) s
/F-gs-font 7 7 SF
64.8 266 M
(\() s
/Courier-Bold 7 7 SUF
69 266 M
(int) s
/F-gs-font 7 7 SF
81.6 266 M
( i = 2; i <= n; ++i\) {) s
18.6 258 M (33:) s
35.4 258 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 258 M
(for) s
/F-gs-font 7 7 SF
73.2 258 M
(\() s
/Courier-Bold 7 7 SUF
77.4 258 M
(int) s
/F-gs-font 7 7 SF
90 258 M
( j = 1; j <= i; ++j\) {) s
18.6 250 M (34:) s
35.4 250 M
(        dp[i] += dp[j - 1] * dp[i - j];) s
18.6 242 M (35:) s
35.4 242 M
(      }) s
18.6 234 M (36:) s
35.4 234 M
(    }) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(return) s
/F-gs-font 7 7 SF
77.4 218 M
( dp[n];) s
18.6 210 M (39:) s
35.4 210 M
(  }) s
18.6 202 M (40:) s
18.6 194 M (41:) s
35.4 194 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 194 M
(// 2: recursion with memoization, same idea but more explicit) s
/F-gs-font 7 7 SF
18.6 186 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(int) s
/F-gs-font 7 7 SF
85.8 186 M
( numTrees\() s
/Courier-Bold 7 7 SUF
127.8 186 M
(int) s
/F-gs-font 7 7 SF
140.4 186 M
( n\) {) s
18.6 178 M (43:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(n <= 1\) ) s
/Courier-Bold 7 7 SUF
98.4 178 M
(return) s
/F-gs-font 7 7 SF
123.6 178 M
( n;) s
18.6 170 M (44:) s
18.6 162 M (45:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
([][] memo = ) s
/Courier-Bold 7 7 SUF
115.2 162 M
(new) s
/F-gs-font 7 7 SF
127.8 162 M
( ) s
/Courier-Bold 7 7 SUF
132 162 M
(int) s
/F-gs-font 7 7 SF
144.6 162 M
([n + 1][n + 1];) s
18.6 154 M (46:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(return) s
/F-gs-font 7 7 SF
77.4 154 M
( helper\(memo, 1, n\);) s
18.6 146 M (47:) s
35.4 146 M
(  }) s
18.6 138 M (48:) s
18.6 130 M (49:) s
35.4 130 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 130 M
(public) s
/F-gs-font 7 7 SF
69 130 M
( ) s
/Courier-Bold 7 7 SUF
73.2 130 M
(int) s
/F-gs-font 7 7 SF
85.8 130 M
( helper\() s
/Courier-Bold 7 7 SUF
119.4 130 M
(int) s
/F-gs-font 7 7 SF
132 130 M
([][] memo, ) s
/Courier-Bold 7 7 SUF
178.2 130 M
(int) s
/F-gs-font 7 7 SF
190.8 130 M
( start, ) s
/Courier-Bold 7 7 SUF
224.4 130 M
(int) s
/F-gs-font 7 7 SF
237 130 M
( end\) {) s
18.6 122 M (50:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(if) s
/F-gs-font 7 7 SF
60.6 122 M
(\(start > end\) ) s
/Courier-Bold 7 7 SUF
119.4 122 M
(return) s
/F-gs-font 7 7 SF
144.6 122 M
( 1;) s
18.6 114 M (51:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(if) s
/F-gs-font 7 7 SF
60.6 114 M
(\(memo[start][end] > 0\) ) s
/Courier-Bold 7 7 SUF
157.2 114 M
(return) s
/F-gs-font 7 7 SF
182.4 114 M
( memo[start][end];) s
18.6 106 M (52:) s
18.6 98 M (53:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(int) s
/F-gs-font 7 7 SF
64.8 98 M
( count = 0;) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(for) s
/F-gs-font 7 7 SF
64.8 90 M
(\() s
/Courier-Bold 7 7 SUF
69 90 M
(int) s
/F-gs-font 7 7 SF
81.6 90 M
( i = start; i <= end; i++\) {) s
18.6 82 M (55:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(int) s
/F-gs-font 7 7 SF
73.2 82 M
( left = helper\(memo, start, i - 1\);) s
18.6 74 M (56:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(int) s
/F-gs-font 7 7 SF
73.2 74 M
( right = helper\(memo, i + 1, end\);) s
18.6 66 M (57:) s
18.6 58 M (58:) s
35.4 58 M
(      count += left * right;) s
18.6 50 M (59:) s
35.4 50 M
(    }) s
18.6 42 M (60:) s
18.6 34 M (61:) s
35.4 34 M
(    memo[start][end] = count;) s
18.6 26 M (62:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(return) s
/F-gs-font 7 7 SF
77.4 26 M
( count;) s
18.6 18 M (63:) s
35.4 18 M
(  }) s
18.6 10 M (64:) s
35.4 10 M
(}) s
_R
S
%%Page: (1) 13
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/BinaryTreePaths.java) def
/fdir (./trees) def
/ftail (BinaryTreePaths.java) def
% User defined strings:
/fmodstr (Sun Feb 24 13:48:52 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BinaryTreePaths.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, return all root-to-leaf paths.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Note: A leaf is a node with no children.) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  1) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  /   \\) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  2     3) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  \\) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  5) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: ["1->2->5", "1->3"]) s
/F-gs-font 7 7 SF
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Explanation: All root-to-leaf paths are: 1->2->5, 1->3) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(/**) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 330 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 322 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 314 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 306 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 298 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 290 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( * }) s
/F-gs-font 7 7 SF
18.6 282 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (32:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(class) s
/F-gs-font 7 7 SF
56.4 274 M
( Solution {) s
18.6 266 M (33:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( List<String> binaryTreePaths\(TreeNode root\) {) s
18.6 258 M (34:) s
35.4 258 M
(    List<String> result = ) s
/Courier-Bold 7 7 SUF
144.6 258 M
(new) s
/F-gs-font 7 7 SF
157.2 258 M
( ArrayList<>\(\);) s
18.6 250 M (35:) s
18.6 242 M (36:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 242 M
(null) s
/F-gs-font 7 7 SF
115.2 242 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 242 M
(return) s
/F-gs-font 7 7 SF
148.8 242 M
( result;) s
18.6 234 M (37:) s
18.6 226 M (38:) s
35.4 226 M
(    DFS\(result, root, ) s
/Courier-Bold 7 7 SUF
127.8 226 M
("") s
/F-gs-font 7 7 SF
136.2 226 M
(\);) s
18.6 218 M (39:) s
18.6 210 M (40:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( result;) s
18.6 202 M (41:) s
35.4 202 M
(  }) s
18.6 194 M (42:) s
18.6 186 M (43:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(void) s
/F-gs-font 7 7 SF
90 186 M
( DFS\(List<String> result, TreeNode root, String curr\) {) s
18.6 178 M (44:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(root.left == ) s
/Courier-Bold 7 7 SUF
119.4 178 M
(null) s
/F-gs-font 7 7 SF
136.2 178 M
( && root.right == ) s
/Courier-Bold 7 7 SUF
211.8 178 M
(null) s
/F-gs-font 7 7 SF
228.6 178 M
(\) {) s
18.6 170 M (45:) s
35.4 170 M
(      result.add\(curr + root.val\);) s
18.6 162 M (46:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(return) s
/F-gs-font 7 7 SF
85.8 162 M
(;) s
18.6 154 M (47:) s
35.4 154 M
(    }) s
18.6 146 M (48:) s
18.6 138 M (49:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(if) s
/F-gs-font 7 7 SF
60.6 138 M
(\(root.left != ) s
/Courier-Bold 7 7 SUF
119.4 138 M
(null) s
/F-gs-font 7 7 SF
136.2 138 M
(\) DFS\(result, root.left, curr + root.val + ) s
/Courier-Bold 7 7 SUF
316.8 138 M
("->") s
/F-gs-font 7 7 SF
333.6 138 M
(\);) s
18.6 130 M (50:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(if) s
/F-gs-font 7 7 SF
60.6 130 M
(\(root.right != ) s
/Courier-Bold 7 7 SUF
123.6 130 M
(null) s
/F-gs-font 7 7 SF
140.4 130 M
(\) DFS\(result, root.right, curr+ root.val + ) s
/Courier-Bold 7 7 SUF
321 130 M
("->") s
/F-gs-font 7 7 SF
337.8 130 M
(\);) s
18.6 122 M (51:) s
35.4 122 M
(  }) s
18.6 114 M (52:) s
35.4 114 M
(}) s
_R
S
%%Page: (1) 14
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/SymmetricTree.java) def
/fdir (./trees) def
/ftail (SymmetricTree.java) def
% User defined strings:
/fmodstr (Mon Dec 10 01:20:44 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SymmetricTree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 9 ms, faster than 46.58% of Java online submissions for Symmetric T) s
5 498 M
(ree.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a binary tree, check whether it is a mirror of itself \(ie, symmetric a) s
5 474 M
(round its center\).) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        For example, this binary tree [1,2,2,3,4,4,3] is symmetric:) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(             1) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(           /  \\) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(    2   2) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(         / \\ / \\) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        3  4 4  3) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        But the following [1,2,2,null,3,null,3] is not:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(            1) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(           / \\) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(    2   2) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(          \\   \\) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(          3    3) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Bonus points if you could solve it both recursively and iteratively.) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(/**) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( * }) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( */) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
18.6 242 M (34:) s
/Courier-Bold 7 7 SUF
35.4 242 M
(class) s
/F-gs-font 7 7 SF
56.4 242 M
( SymmetricTree {) s
18.6 234 M (35:) s
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(boolean) s
/F-gs-font 7 7 SF
102.6 234 M
( isSymmetric\(TreeNode root\) {) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 226 M
(null) s
/F-gs-font 7 7 SF
115.2 226 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 226 M
(return) s
/F-gs-font 7 7 SF
148.8 226 M
( ) s
/Courier-Bold 7 7 SUF
153 226 M
(true) s
/F-gs-font 7 7 SF
169.8 226 M
(;) s
18.6 218 M (37:) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( areRootsSymmetric\(root.left, root.right\);) s
18.6 202 M (39:) s
35.4 202 M
(  }) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(boolean) s
/F-gs-font 7 7 SF
102.6 186 M
( areRootsSymmetric\(TreeNode root1, TreeNode root2\) {) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(root1 == ) s
/Courier-Bold 7 7 SUF
102.6 178 M
(null) s
/F-gs-font 7 7 SF
119.4 178 M
( && root2 == ) s
/Courier-Bold 7 7 SUF
174 178 M
(null) s
/F-gs-font 7 7 SF
190.8 178 M
(\) ) s
/Courier-Bold 7 7 SUF
199.2 178 M
(return) s
/F-gs-font 7 7 SF
224.4 178 M
( ) s
/Courier-Bold 7 7 SUF
228.6 178 M
(true) s
/F-gs-font 7 7 SF
245.4 178 M
(;) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(if) s
/F-gs-font 7 7 SF
60.6 170 M
(\(root1 == ) s
/Courier-Bold 7 7 SUF
102.6 170 M
(null) s
/F-gs-font 7 7 SF
119.4 170 M
( || root2 == ) s
/Courier-Bold 7 7 SUF
174 170 M
(null) s
/F-gs-font 7 7 SF
190.8 170 M
(\) ) s
/Courier-Bold 7 7 SUF
199.2 170 M
(return) s
/F-gs-font 7 7 SF
224.4 170 M
( ) s
/Courier-Bold 7 7 SUF
228.6 170 M
(false) s
/F-gs-font 7 7 SF
249.6 170 M
(;) s
18.6 162 M (44:) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(return) s
/F-gs-font 7 7 SF
77.4 154 M
( root1.val == root2.val &&) s
18.6 146 M (46:) s
35.4 146 M
(      areRootsSymmetric\(root1.left, root2.right\) &&) s
18.6 138 M (47:) s
35.4 138 M
(      areRootsSymmetric\(root1.right, root2.left\);) s
18.6 130 M (48:) s
35.4 130 M
(  }) s
18.6 122 M (49:) s
18.6 114 M (50:) s
35.4 114 M
(        ) s
/Courier-Oblique 7 7 SUF
69 114 M
(// iterative solution) s
/F-gs-font 7 7 SF
18.6 106 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 106 M
(        ) s
/Courier-Bold 7 7 SUF
69 106 M
(public) s
/F-gs-font 7 7 SF
94.2 106 M
( ) s
/Courier-Bold 7 7 SUF
98.4 106 M
(boolean) s
/F-gs-font 7 7 SF
127.8 106 M
( isSymmetric2\(TreeNode root\) {) s
18.6 98 M (52:) s
35.4 98 M
(    Queue<TreeNode> q = ) s
/Courier-Bold 7 7 SUF
136.2 98 M
(new) s
/F-gs-font 7 7 SF
148.8 98 M
( LinkedList<>\(\);) s
18.6 90 M (53:) s
35.4 90 M
(    q.add\(root\);) s
18.6 82 M (54:) s
35.4 82 M
(    q.add\(root\);) s
18.6 74 M (55:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(while) s
/F-gs-font 7 7 SF
73.2 74 M
( \(!q.isEmpty\(\)\) {) s
18.6 66 M (56:) s
35.4 66 M
(                        TreeNode t1 = q.poll\(\);) s
18.6 58 M (57:) s
35.4 58 M
(                        TreeNode t2 = q.poll\(\);) s
18.6 50 M (58:) s
35.4 50 M
(                        ) s
/Courier-Bold 7 7 SUF
136.2 50 M
(if) s
/F-gs-font 7 7 SF
144.6 50 M
( \(t1 == ) s
/Courier-Bold 7 7 SUF
178.2 50 M
(null) s
/F-gs-font 7 7 SF
195 50 M
( && t2 == ) s
/Courier-Bold 7 7 SUF
237 50 M
(null) s
/F-gs-font 7 7 SF
253.8 50 M
(\) ) s
/Courier-Bold 7 7 SUF
262.2 50 M
(continue) s
/F-gs-font 7 7 SF
295.8 50 M
(;) s
18.6 42 M (59:) s
35.4 42 M
(                        ) s
/Courier-Bold 7 7 SUF
136.2 42 M
(if) s
/F-gs-font 7 7 SF
144.6 42 M
( \(t1 == ) s
/Courier-Bold 7 7 SUF
178.2 42 M
(null) s
/F-gs-font 7 7 SF
195 42 M
( || t2 == ) s
/Courier-Bold 7 7 SUF
237 42 M
(null) s
/F-gs-font 7 7 SF
253.8 42 M
(\) ) s
/Courier-Bold 7 7 SUF
262.2 42 M
(return) s
/F-gs-font 7 7 SF
287.4 42 M
( ) s
/Courier-Bold 7 7 SUF
291.6 42 M
(false) s
/F-gs-font 7 7 SF
312.6 42 M
(;) s
18.6 34 M (60:) s
35.4 34 M
(                        ) s
/Courier-Bold 7 7 SUF
136.2 34 M
(if) s
/F-gs-font 7 7 SF
144.6 34 M
( \(t1.val != t2.val\) ) s
/Courier-Bold 7 7 SUF
228.6 34 M
(return) s
/F-gs-font 7 7 SF
253.8 34 M
( ) s
/Courier-Bold 7 7 SUF
258 34 M
(false) s
/F-gs-font 7 7 SF
279 34 M
(;) s
18.6 26 M (61:) s
35.4 26 M
(                        q.add\(t1.left\);) s
18.6 18 M (62:) s
35.4 18 M
(                        q.add\(t2.right\);) s
18.6 10 M (63:) s
35.4 10 M
(                        q.add\(t1.right\);) s
18.6 2 M (64:) s
35.4 2 M
(                        q.add\(t2.left\);) s
415.6 522 M (65:) s
432.4 522 M
(    }) s
415.6 514 M (66:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(return) s
/F-gs-font 7 7 SF
474.4 514 M
( ) s
/Courier-Bold 7 7 SUF
478.6 514 M
(true) s
/F-gs-font 7 7 SF
495.4 514 M
(;) s
415.6 506 M (67:) s
432.4 506 M
(        }) s
415.6 498 M (68:) s
432.4 498 M
(}) s
_R
S
%%Page: (1) 15
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/SerializeDeserializeBST.java) def
/fdir (./trees) def
/ftail (SerializeDeserializeBST.java) def
% User defined strings:
/fmodstr (Mon Mar 04 22:57:27 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SerializeDeserializeBST.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Serialization is the process of converting a data structure or object into a seque) s
5 490 M
(nce of bits so that it can be stored in a file or memory buffer, or transmitted across a net) s
5 482 M
(work connection link to be reconstructed later in the same or another computer environment.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Design an algorithm to serialize and deserialize a binary search tree. There is no) s
5 458 M
( restriction on how your serialization/deserialization algorithm should work. You just need ) s
5 450 M
(to ensure that a binary search tree can be serialized to a string and this string can be des) s
5 442 M
(erialized to the original tree structure.) s
/F-gs-font 7 7 SF
22.8 434 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  The encoded string should be as compact as possible.) s
/F-gs-font 7 7 SF
22.8 418 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Note: Do not use class member/global/static variables to store states. Your serial) s
5 402 M
(ize and deserialize algorithms should be stateless.) s
/F-gs-font 7 7 SF
18.6 394 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (12:) s
18.6 378 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(// approach 1: do preorder serialization with "n" to mark as null) s
/F-gs-font 7 7 SF
18.6 370 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 370 M
(//             iterate through the values recursively) s
/F-gs-font 7 7 SF
18.6 362 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
35.4 362 M
(public) s
/F-gs-font 7 7 SF
60.6 362 M
( ) s
/Courier-Bold 7 7 SUF
64.8 362 M
(class) s
/F-gs-font 7 7 SF
85.8 362 M
( Codec {) s
18.6 354 M (16:) s
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// Encodes a tree to a single string.) s
/F-gs-font 7 7 SF
18.6 346 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( String serialize\(TreeNode root\) {) s
18.6 338 M (18:) s
35.4 338 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
132 338 M
(new) s
/F-gs-font 7 7 SF
144.6 338 M
( StringBuilder\(\);) s
18.6 330 M (19:) s
35.4 330 M
(    preorder\(root, sb\);) s
18.6 322 M (20:) s
18.6 314 M (21:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(return) s
/F-gs-font 7 7 SF
77.4 314 M
( sb.toString\(\);) s
18.6 306 M (22:) s
35.4 306 M
(  }) s
18.6 298 M (23:) s
18.6 290 M (24:) s
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( ) s
/Courier-Bold 7 7 SUF
73.2 290 M
(void) s
/F-gs-font 7 7 SF
90 290 M
( preorder\(TreeNode root, StringBuilder sb\) {) s
18.6 282 M (25:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(if) s
/F-gs-font 7 7 SF
60.6 282 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 282 M
(null) s
/F-gs-font 7 7 SF
115.2 282 M
(\) {) s
18.6 274 M (26:) s
35.4 274 M
(      sb.append\() s
/Courier-Bold 7 7 SUF
102.6 274 M
("n") s
/F-gs-font 7 7 SF
115.2 274 M
( + ) s
/Courier-Bold 7 7 SUF
127.8 274 M
(" ") s
/F-gs-font 7 7 SF
140.4 274 M
(\); ) s
/Courier-Oblique 7 7 SUF
153 274 M
(// represent null) s
/F-gs-font 7 7 SF
18.6 266 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(return) s
/F-gs-font 7 7 SF
85.8 266 M
(;) s
18.6 258 M (28:) s
35.4 258 M
(    }) s
18.6 250 M (29:) s
18.6 242 M (30:) s
35.4 242 M
(    sb.append\(root.val + ) s
/Courier-Bold 7 7 SUF
140.4 242 M
(" ") s
/F-gs-font 7 7 SF
153 242 M
(\);) s
18.6 234 M (31:) s
35.4 234 M
(    preorder\(root.left, sb\);) s
18.6 226 M (32:) s
35.4 226 M
(    preorder\(root.right, sb\);) s
18.6 218 M (33:) s
35.4 218 M
(  }) s
18.6 210 M (34:) s
18.6 202 M (35:) s
35.4 202 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 202 M
(// Decodes your encoded data to tree.) s
/F-gs-font 7 7 SF
18.6 194 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 194 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 194 M
(public) s
/F-gs-font 7 7 SF
69 194 M
( TreeNode deserialize\(String data\) {) s
18.6 186 M (37:) s
35.4 186 M
(    String[] valuesDelimited = data.split\() s
/Courier-Bold 7 7 SUF
211.8 186 M
(" ") s
/F-gs-font 7 7 SF
224.4 186 M
(\);) s
18.6 178 M (38:) s
18.6 170 M (39:) s
35.4 170 M
(    LinkedList<String> values = ) s
/Courier-Bold 7 7 SUF
169.8 170 M
(new) s
/F-gs-font 7 7 SF
182.4 170 M
( LinkedList<>\(\);) s
18.6 162 M (40:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(for) s
/F-gs-font 7 7 SF
64.8 162 M
(\(String s : valuesDelimited\) values.add\(s\);) s
18.6 154 M (41:) s
18.6 146 M (42:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(return) s
/F-gs-font 7 7 SF
77.4 146 M
( deserializeUtil\(values\);) s
18.6 138 M (43:) s
35.4 138 M
(  }) s
18.6 130 M (44:) s
18.6 122 M (45:) s
35.4 122 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 122 M
(public) s
/F-gs-font 7 7 SF
69 122 M
( TreeNode deserializeUtil\(LinkedList<String> values\) {) s
18.6 114 M (46:) s
35.4 114 M
(    TreeNode root = createTreeNode\(values.removeFirst\(\)\);) s
18.6 106 M (47:) s
18.6 98 M (48:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(if) s
/F-gs-font 7 7 SF
60.6 98 M
(\(root != ) s
/Courier-Bold 7 7 SUF
98.4 98 M
(null) s
/F-gs-font 7 7 SF
115.2 98 M
(\) {) s
18.6 90 M (49:) s
35.4 90 M
(      root.left = deserializeUtil\(values\);) s
18.6 82 M (50:) s
35.4 82 M
(      root.right = deserializeUtil\(values\);) s
18.6 74 M (51:) s
35.4 74 M
(    }) s
18.6 66 M (52:) s
18.6 58 M (53:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(return) s
/F-gs-font 7 7 SF
77.4 58 M
( root;) s
18.6 50 M (54:) s
35.4 50 M
(  }) s
18.6 42 M (55:) s
18.6 34 M (56:) s
35.4 34 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 34 M
(public) s
/F-gs-font 7 7 SF
69 34 M
( TreeNode createTreeNode\(String value\) {) s
18.6 26 M (57:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(if) s
/F-gs-font 7 7 SF
60.6 26 M
(\(value.equals\() s
/Courier-Bold 7 7 SUF
119.4 26 M
("n") s
/F-gs-font 7 7 SF
132 26 M
(\)\) ) s
/Courier-Bold 7 7 SUF
144.6 26 M
(return) s
/F-gs-font 7 7 SF
169.8 26 M
( ) s
/Courier-Bold 7 7 SUF
174 26 M
(null) s
/F-gs-font 7 7 SF
190.8 26 M
(;) s
18.6 18 M (58:) s
18.6 10 M (59:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(return) s
/F-gs-font 7 7 SF
77.4 10 M
( ) s
/Courier-Bold 7 7 SUF
81.6 10 M
(new) s
/F-gs-font 7 7 SF
94.2 10 M
( TreeNode\(Integer.parseInt\(value\)\);) s
18.6 2 M (60:) s
35.4 2 M
(  }) s
415.6 522 M (61:) s
432.4 522 M
(}) s
415.6 514 M (62:) s
415.6 506 M (63:) s
/Courier-Oblique 7 7 SUF
432.4 506 M
(// approach 2: do postorder traversal \(preorder works too\)) s
/F-gs-font 7 7 SF
415.6 498 M (64:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
432.4 498 M
(//             iterate through the values and keep adding it to the tree) s
/F-gs-font 7 7 SF
415.6 490 M (65:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
432.4 490 M
(//             from the root. What matters is the order of the addition) s
/F-gs-font 7 7 SF
415.6 482 M (66:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
432.4 482 M
(public) s
/F-gs-font 7 7 SF
457.6 482 M
( ) s
/Courier-Bold 7 7 SUF
461.8 482 M
(class) s
/F-gs-font 7 7 SF
482.8 482 M
( Codec {) s
415.6 474 M (67:) s
432.4 474 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 474 M
(// Encodes a tree to a single string.) s
/F-gs-font 7 7 SF
415.6 466 M (68:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 466 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 466 M
(public) s
/F-gs-font 7 7 SF
466 466 M
( String serialize\(TreeNode root\) {) s
415.6 458 M (69:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(if) s
/F-gs-font 7 7 SF
457.6 458 M
(\(root == ) s
/Courier-Bold 7 7 SUF
495.4 458 M
(null) s
/F-gs-font 7 7 SF
512.2 458 M
(\) ) s
/Courier-Bold 7 7 SUF
520.6 458 M
(return) s
/F-gs-font 7 7 SF
545.8 458 M
( ) s
/Courier-Bold 7 7 SUF
550 458 M
(null) s
/F-gs-font 7 7 SF
566.8 458 M
(;) s
415.6 450 M (70:) s
415.6 442 M (71:) s
432.4 442 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
529 442 M
(new) s
/F-gs-font 7 7 SF
541.6 442 M
( StringBuilder\(\);) s
415.6 434 M (72:) s
432.4 434 M
(    postorder\(root, sb\);) s
415.6 426 M (73:) s
415.6 418 M (74:) s
432.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 418 M
(return) s
/F-gs-font 7 7 SF
474.4 418 M
( sb.toString\(\);) s
415.6 410 M (75:) s
432.4 410 M
(  }) s
415.6 402 M (76:) s
415.6 394 M (77:) s
432.4 394 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 394 M
(public) s
/F-gs-font 7 7 SF
466 394 M
( ) s
/Courier-Bold 7 7 SUF
470.2 394 M
(void) s
/F-gs-font 7 7 SF
487 394 M
( postorder\(TreeNode root, StringBuilder sb\) {) s
415.6 386 M (78:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(if) s
/F-gs-font 7 7 SF
457.6 386 M
(\(root == ) s
/Courier-Bold 7 7 SUF
495.4 386 M
(null) s
/F-gs-font 7 7 SF
512.2 386 M
(\) ) s
/Courier-Bold 7 7 SUF
520.6 386 M
(return) s
/F-gs-font 7 7 SF
545.8 386 M
(;) s
415.6 378 M (79:) s
415.6 370 M (80:) s
432.4 370 M
(    postorder\(root.left, sb\);) s
415.6 362 M (81:) s
432.4 362 M
(    postorder\(root.right, sb\);) s
415.6 354 M (82:) s
432.4 354 M
(    sb.append\(root.val + ) s
/Courier-Bold 7 7 SUF
537.4 354 M
(" ") s
/F-gs-font 7 7 SF
550 354 M
(\);) s
415.6 346 M (83:) s
432.4 346 M
(  }) s
415.6 338 M (84:) s
415.6 330 M (85:) s
432.4 330 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 330 M
(// Decodes your encoded data to tree.) s
/F-gs-font 7 7 SF
415.6 322 M (86:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 322 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 322 M
(public) s
/F-gs-font 7 7 SF
466 322 M
( TreeNode deserialize\(String data\) {) s
415.6 314 M (87:) s
432.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 314 M
(if) s
/F-gs-font 7 7 SF
457.6 314 M
(\(data == ) s
/Courier-Bold 7 7 SUF
495.4 314 M
(null) s
/F-gs-font 7 7 SF
512.2 314 M
( || data.length\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
613 314 M
(return) s
/F-gs-font 7 7 SF
638.2 314 M
( ) s
/Courier-Bold 7 7 SUF
642.4 314 M
(null) s
/F-gs-font 7 7 SF
659.2 314 M
(;) s
415.6 306 M (88:) s
415.6 298 M (89:) s
432.4 298 M
(    String[] values = data.split\() s
/Courier-Bold 7 7 SUF
571 298 M
(" ") s
/F-gs-font 7 7 SF
583.6 298 M
(\);) s
415.6 290 M (90:) s
415.6 282 M (91:) s
432.4 282 M
(    TreeNode root = ) s
/Courier-Bold 7 7 SUF
516.4 282 M
(new) s
/F-gs-font 7 7 SF
529 282 M
( TreeNode\(Integer.parseInt\(values[values.length - 1]\)\);) s
415.6 274 M (92:) s
415.6 266 M (93:) s
432.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 266 M
(for) s
/F-gs-font 7 7 SF
461.8 266 M
(\() s
/Courier-Bold 7 7 SUF
466 266 M
(int) s
/F-gs-font 7 7 SF
478.6 266 M
( i = values.length - 2; i >= 0; i--\) {) s
415.6 258 M (94:) s
432.4 258 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 258 M
(int) s
/F-gs-font 7 7 SF
470.2 258 M
( value = Integer.parseInt\(values[i]\);) s
415.6 250 M (95:) s
415.6 242 M (96:) s
432.4 242 M
(      TreeNode curr = root;) s
415.6 234 M (97:) s
432.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 234 M
(while) s
/F-gs-font 7 7 SF
478.6 234 M
(\(curr != ) s
/Courier-Bold 7 7 SUF
516.4 234 M
(null) s
/F-gs-font 7 7 SF
533.2 234 M
(\) {) s
415.6 226 M (98:) s
432.4 226 M
(        ) s
/Courier-Bold 7 7 SUF
466 226 M
(if) s
/F-gs-font 7 7 SF
474.4 226 M
(\(value > curr.val\) {) s
415.6 218 M (99:) s
432.4 218 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 218 M
(if) s
/F-gs-font 7 7 SF
482.8 218 M
(\(curr.right == ) s
/Courier-Bold 7 7 SUF
545.8 218 M
(null) s
/F-gs-font 7 7 SF
562.6 218 M
(\) {) s
411.4 210 M (100:) s
432.4 210 M
(            curr.right = ) s
/Courier-Bold 7 7 SUF
537.4 210 M
(new) s
/F-gs-font 7 7 SF
550 210 M
( TreeNode\(value\);) s
411.4 202 M (101:) s
432.4 202 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 202 M
(break) s
/F-gs-font 7 7 SF
503.8 202 M
(;) s
411.4 194 M (102:) s
432.4 194 M
(          }) s
411.4 186 M (103:) s
432.4 186 M
(          curr = curr.right;) s
411.4 178 M (104:) s
432.4 178 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 178 M
(else) s
/F-gs-font 7 7 SF
491.2 178 M
( {) s
411.4 170 M (105:) s
432.4 170 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 170 M
(if) s
/F-gs-font 7 7 SF
482.8 170 M
(\(curr.left == ) s
/Courier-Bold 7 7 SUF
541.6 170 M
(null) s
/F-gs-font 7 7 SF
558.4 170 M
(\) {) s
411.4 162 M (106:) s
432.4 162 M
(            curr.left = ) s
/Courier-Bold 7 7 SUF
533.2 162 M
(new) s
/F-gs-font 7 7 SF
545.8 162 M
( TreeNode\(value\);) s
411.4 154 M (107:) s
432.4 154 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 154 M
(break) s
/F-gs-font 7 7 SF
503.8 154 M
(;) s
411.4 146 M (108:) s
432.4 146 M
(          }) s
411.4 138 M (109:) s
432.4 138 M
(          curr = curr.left;) s
411.4 130 M (110:) s
432.4 130 M
(        }) s
411.4 122 M (111:) s
432.4 122 M
(      }) s
411.4 114 M (112:) s
432.4 114 M
(    }) s
411.4 106 M (113:) s
411.4 98 M (114:) s
432.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 98 M
(return) s
/F-gs-font 7 7 SF
474.4 98 M
( root;) s
411.4 90 M (115:) s
432.4 90 M
(  }) s
411.4 82 M (116:) s
432.4 82 M
(}) s
411.4 74 M (117:) s
411.4 66 M (118:) s
/Courier-Oblique 7 7 SUF
432.4 66 M
(// Your Codec object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
411.4 58 M (119:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
432.4 58 M
(// Codec codec = new Codec\(\);) s
/F-gs-font 7 7 SF
411.4 50 M (120:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
432.4 50 M
(// codec.deserialize\(codec.serialize\(root\)\);) s
/F-gs-font 7 7 SF
411.4 42 M (121:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 16
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/PopulatingNextRightPointers.java) def
/fdir (./trees) def
/ftail (PopulatingNextRightPointers.java) def
% User defined strings:
/fmodstr (Thu Mar 07 23:35:37 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PopulatingNextRightPointers.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given a perfect binary tree where all leaves are on the same level, and ev) s
5 490 M
(ery parent has two children. The binary tree has the following definition:) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  struct Node {) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  int val;) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Node *left;) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Node *right;) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Node *next;) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  }) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Populate each next pointer to point to its next right node. If there is no next ri) s
5 418 M
(ght node, the next pointer should be set to NULL.) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Initially, all next pointers are set to NULL.) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: {"$id":"1","left":{"$id":"2","left":{"$id":"3","left":null,"next":null,"rig) s
5 354 M
(ht":null,"val":4},"next":null,"right":{"$id":"4","left":null,"next":null,"right":null,"val":) s
5 346 M
(5},"val":2},"next":null,"right":{"$id":"5","left":{"$id":"6","left":null,"next":null,"right") s
5 338 M
(:null,"val":6},"next":null,"right":{"$id":"7","left":null,"next":null,"right":null,"val":7},) s
5 330 M
("val":3},"val":1}) s
/F-gs-font 7 7 SF
18.6 322 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Output: {"$id":"1","left":{"$id":"2","left":{"$id":"3","left":null,"next":{"$id":") s
5 306 M
(4","left":null,"next":{"$id":"5","left":null,"next":{"$id":"6","left":null,"next":null,"righ) s
5 298 M
(t":null,"val":7},"right":null,"val":6},"right":null,"val":5},"right":null,"val":4},"next":{") s
5 290 M
($id":"7","left":{"$ref":"5"},"next":null,"right":{"$ref":"6"},"val":3},"right":{"$ref":"4"},) s
5 282 M
("val":2},"next":null,"right":{"$ref":"7"},"val":1}) s
/F-gs-font 7 7 SF
18.6 274 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Explanation: Given the above perfect binary tree \(Figure A\), your function should ) s
5 258 M
(populate each next pointer to point to its next right node, just like in Figure B.) s
/F-gs-font 7 7 SF
18.6 250 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 242 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 234 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 226 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  You may only use constant extra space.) s
/F-gs-font 7 7 SF
18.6 218 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Recursive approach is fine, implicit stack space does not count as extra space for) s
5 210 M
( this problem.) s
/F-gs-font 7 7 SF
18.6 202 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( */) s
/F-gs-font 7 7 SF
18.6 194 M (30:) s
18.6 186 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(/*) s
/F-gs-font 7 7 SF
18.6 178 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(// Definition for a Node.) s
/F-gs-font 7 7 SF
18.6 170 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(class Node {) s
/F-gs-font 7 7 SF
18.6 162 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
(public int val;) s
/F-gs-font 7 7 SF
18.6 154 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
(public Node left;) s
/F-gs-font 7 7 SF
18.6 146 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
(public Node right;) s
/F-gs-font 7 7 SF
18.6 138 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
(public Node next;) s
/F-gs-font 7 7 SF
18.6 130 M (38:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 122 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(public Node\(\) {}) s
/F-gs-font 7 7 SF
18.6 114 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 106 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 106 M
(public Node\(int _val,Node _left,Node _right,Node _next\) {) s
/F-gs-font 7 7 SF
18.6 98 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 98 M
(val = _val;) s
/F-gs-font 7 7 SF
18.6 90 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 90 M
(left = _left;) s
/F-gs-font 7 7 SF
18.6 82 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 82 M
(right = _right;) s
/F-gs-font 7 7 SF
18.6 74 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 74 M
(next = _next;) s
/F-gs-font 7 7 SF
18.6 66 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 66 M
(}) s
/F-gs-font 7 7 SF
18.6 58 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 58 M
(};) s
/F-gs-font 7 7 SF
18.6 50 M (48:) s
/Courier-Oblique 7 7 SUF
35.4 50 M
(*/) s
/F-gs-font 7 7 SF
18.6 42 M (49:) s
/Courier-Bold 7 7 SUF
35.4 42 M
(class) s
/F-gs-font 7 7 SF
56.4 42 M
( Solution {) s
18.6 34 M (50:) s
35.4 34 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 34 M
(public) s
/F-gs-font 7 7 SF
69 34 M
( Node connect\(Node root\) {) s
18.6 26 M (51:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(if) s
/F-gs-font 7 7 SF
60.6 26 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 26 M
(null) s
/F-gs-font 7 7 SF
115.2 26 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 26 M
(return) s
/F-gs-font 7 7 SF
148.8 26 M
( root;) s
18.6 18 M (52:) s
18.6 10 M (53:) s
35.4 10 M
(    Queue<Node> q = ) s
/Courier-Bold 7 7 SUF
119.4 10 M
(new) s
/F-gs-font 7 7 SF
132 10 M
( LinkedList<>\(\);) s
18.6 2 M (54:) s
35.4 2 M
(    q.add\(root\);) s
415.6 522 M (55:) s
415.6 514 M (56:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(while) s
/F-gs-font 7 7 SF
470.2 514 M
(\(!q.isEmpty\(\)\) {) s
415.6 506 M (57:) s
432.4 506 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 506 M
(int) s
/F-gs-font 7 7 SF
470.2 506 M
( count = q.size\(\);) s
415.6 498 M (58:) s
432.4 498 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 498 M
(for) s
/F-gs-font 7 7 SF
470.2 498 M
(\() s
/Courier-Bold 7 7 SUF
474.4 498 M
(int) s
/F-gs-font 7 7 SF
487 498 M
( i = 0; i < count; i++\) {) s
415.6 490 M (59:) s
432.4 490 M
(        Node curr = q.poll\(\);) s
415.6 482 M (60:) s
432.4 482 M
(        ) s
/Courier-Bold 7 7 SUF
466 482 M
(if) s
/F-gs-font 7 7 SF
474.4 482 M
(\(curr.left != ) s
/Courier-Bold 7 7 SUF
533.2 482 M
(null) s
/F-gs-font 7 7 SF
550 482 M
(\) q.add\(curr.left\);) s
415.6 474 M (61:) s
432.4 474 M
(        ) s
/Courier-Bold 7 7 SUF
466 474 M
(if) s
/F-gs-font 7 7 SF
474.4 474 M
(\(curr.right != ) s
/Courier-Bold 7 7 SUF
537.4 474 M
(null) s
/F-gs-font 7 7 SF
554.2 474 M
(\) q.add\(curr.right\);) s
415.6 466 M (62:) s
415.6 458 M (63:) s
432.4 458 M
(        ) s
/Courier-Bold 7 7 SUF
466 458 M
(if) s
/F-gs-font 7 7 SF
474.4 458 M
(\(i < count - 1\) curr.next = q.peek\(\);) s
415.6 450 M (64:) s
432.4 450 M
(      }) s
415.6 442 M (65:) s
432.4 442 M
(    }) s
415.6 434 M (66:) s
415.6 426 M (67:) s
432.4 426 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 426 M
(return) s
/F-gs-font 7 7 SF
474.4 426 M
( root;) s
415.6 418 M (68:) s
432.4 418 M
(  }) s
415.6 410 M (69:) s
415.6 402 M (70:) s
432.4 402 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 402 M
(// approach 2: O\(1\) space) s
/F-gs-font 7 7 SF
415.6 394 M (71:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 394 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 394 M
(public) s
/F-gs-font 7 7 SF
466 394 M
( Node connect\(Node root\) {) s
415.6 386 M (72:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(if) s
/F-gs-font 7 7 SF
457.6 386 M
(\(root == ) s
/Courier-Bold 7 7 SUF
495.4 386 M
(null) s
/F-gs-font 7 7 SF
512.2 386 M
(\) ) s
/Courier-Bold 7 7 SUF
520.6 386 M
(return) s
/F-gs-font 7 7 SF
545.8 386 M
( ) s
/Courier-Bold 7 7 SUF
550 386 M
(null) s
/F-gs-font 7 7 SF
566.8 386 M
(;) s
415.6 378 M (73:) s
415.6 370 M (74:) s
432.4 370 M
(    connectUtil\(root\);) s
415.6 362 M (75:) s
432.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 362 M
(return) s
/F-gs-font 7 7 SF
474.4 362 M
( root;) s
415.6 354 M (76:) s
432.4 354 M
(  }) s
415.6 346 M (77:) s
415.6 338 M (78:) s
432.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 338 M
(public) s
/F-gs-font 7 7 SF
466 338 M
( ) s
/Courier-Bold 7 7 SUF
470.2 338 M
(void) s
/F-gs-font 7 7 SF
487 338 M
( connectUtil\(Node root\) {) s
415.6 330 M (79:) s
432.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 330 M
(if) s
/F-gs-font 7 7 SF
457.6 330 M
(\(root.left == ) s
/Courier-Bold 7 7 SUF
516.4 330 M
(null) s
/F-gs-font 7 7 SF
533.2 330 M
( && root.right == ) s
/Courier-Bold 7 7 SUF
608.8 330 M
(null) s
/F-gs-font 7 7 SF
625.6 330 M
(\) ) s
/Courier-Bold 7 7 SUF
634 330 M
(return) s
/F-gs-font 7 7 SF
659.2 330 M
(;) s
415.6 322 M (80:) s
415.6 314 M (81:) s
432.4 314 M
(    Node curr = root;) s
415.6 306 M (82:) s
432.4 306 M
(    Node prev = ) s
/Courier-Bold 7 7 SUF
499.6 306 M
(null) s
/F-gs-font 7 7 SF
516.4 306 M
(;) s
415.6 298 M (83:) s
415.6 290 M (84:) s
432.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 290 M
(while) s
/F-gs-font 7 7 SF
470.2 290 M
(\(curr != ) s
/Courier-Bold 7 7 SUF
508 290 M
(null) s
/F-gs-font 7 7 SF
524.8 290 M
(\) {) s
415.6 282 M (85:) s
432.4 282 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 282 M
(if) s
/F-gs-font 7 7 SF
466 282 M
(\(prev != ) s
/Courier-Bold 7 7 SUF
503.8 282 M
(null) s
/F-gs-font 7 7 SF
520.6 282 M
(\) prev.next = curr.left;) s
415.6 274 M (86:) s
415.6 266 M (87:) s
432.4 266 M
(      curr.left.next = curr.right;) s
415.6 258 M (88:) s
432.4 258 M
(      prev = curr.right;) s
415.6 250 M (89:) s
432.4 250 M
(      curr = curr.next;) s
415.6 242 M (90:) s
432.4 242 M
(    }) s
415.6 234 M (91:) s
415.6 226 M (92:) s
432.4 226 M
(    connectUtil\(root.left\);) s
415.6 218 M (93:) s
432.4 218 M
(  }) s
415.6 210 M (94:) s
432.4 210 M
(}) s
_R
S
%%Page: (1) 17
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/PathSum2.java) def
/fdir (./trees) def
/ftail (PathSum2.java) def
% User defined strings:
/fmodstr (Sun Feb 24 14:04:43 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PathSum2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree and a sum, find all root-to-leaf paths where each path's sum e) s
5 490 M
(quals the given sum.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note: A leaf is a node with no children.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Given the below binary tree and sum = 22,) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  5) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  4   8) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  /   / \\) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  11  13  4) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  /  \\    / \\) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  7    2  5   1) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Return:) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  [) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  [5,4,11,2],) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [5,8,4,5]) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  ]) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(/**) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( * }) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (37:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( List<List<Integer>> pathSum\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
253.8 226 M
(int) s
/F-gs-font 7 7 SF
266.4 226 M
( sum\) {) s
18.6 218 M (38:) s
35.4 218 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 218 M
(new) s
/F-gs-font 7 7 SF
186.6 218 M
( ArrayList<>\(\);) s
18.6 210 M (39:) s
18.6 202 M (40:) s
35.4 202 M
(    LinkedList<Integer> currList = ) s
/Courier-Bold 7 7 SUF
182.4 202 M
(new) s
/F-gs-font 7 7 SF
195 202 M
( LinkedList<>\(\);) s
18.6 194 M (41:) s
35.4 194 M
(    DFS\(result, sum, root, currList\);) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(return) s
/F-gs-font 7 7 SF
77.4 178 M
( result;) s
18.6 170 M (44:) s
35.4 170 M
(  }) s
18.6 162 M (45:) s
18.6 154 M (46:) s
35.4 154 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 154 M
(public) s
/F-gs-font 7 7 SF
69 154 M
( ) s
/Courier-Bold 7 7 SUF
73.2 154 M
(void) s
/F-gs-font 7 7 SF
90 154 M
( DFS\(List<List<Integer>> result, ) s
/Courier-Bold 7 7 SUF
228.6 154 M
(int) s
/F-gs-font 7 7 SF
241.2 154 M
( target, TreeNode root, LinkedList<) s
5 146 M
(Integer> currList\) {) s
18.6 138 M (47:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(if) s
/F-gs-font 7 7 SF
60.6 138 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 138 M
(null) s
/F-gs-font 7 7 SF
115.2 138 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 138 M
(return) s
/F-gs-font 7 7 SF
148.8 138 M
(;) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(if) s
/F-gs-font 7 7 SF
60.6 130 M
(\(root.left == ) s
/Courier-Bold 7 7 SUF
119.4 130 M
(null) s
/F-gs-font 7 7 SF
136.2 130 M
( && root.right == ) s
/Courier-Bold 7 7 SUF
211.8 130 M
(null) s
/F-gs-font 7 7 SF
228.6 130 M
( && target == root.val\) {) s
18.6 122 M (49:) s
35.4 122 M
(      currList.addLast\(root.val\);) s
18.6 114 M (50:) s
35.4 114 M
(      result.add\() s
/Courier-Bold 7 7 SUF
106.8 114 M
(new) s
/F-gs-font 7 7 SF
119.4 114 M
( ArrayList<Integer>\(currList\)\);) s
18.6 106 M (51:) s
35.4 106 M
(      currList.removeLast\(\);) s
18.6 98 M (52:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(return) s
/F-gs-font 7 7 SF
85.8 98 M
(;) s
18.6 90 M (53:) s
35.4 90 M
(    }) s
18.6 82 M (54:) s
18.6 74 M (55:) s
35.4 74 M
(    currList.addLast\(root.val\);) s
18.6 66 M (56:) s
35.4 66 M
(    DFS\(result, target - root.val, root.left, currList\);) s
18.6 58 M (57:) s
35.4 58 M
(    DFS\(result, target - root.val, root.right, currList\);) s
18.6 50 M (58:) s
35.4 50 M
(    currList.removeLast\(\);) s
18.6 42 M (59:) s
35.4 42 M
(  }) s
18.6 34 M (60:) s
35.4 34 M
(}) s
_R
S
%%Page: (1) 18
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/PathSum3.java) def
/fdir (./trees) def
/ftail (PathSum3.java) def
% User defined strings:
/fmodstr (Sun Feb 24 14:56:58 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PathSum3.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given a binary tree in which each node contains an integer value.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Find the number of paths that sum to a given value.) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The path does not need to start or end at the root or a leaf, but it must go downw) s
5 458 M
(ards \(traveling only from parent nodes to child nodes\).) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  The tree has no more than 1,000 nodes and the values are in the range -1,000,000 t) s
5 434 M
(o 1,000,000.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  10) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  5   -3) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  / \\    \\) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  3   2   11) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  / \\   \\) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  3  -2   1) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Return 3. The paths that sum to 8 are:) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  1.  5 -> 3) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  2.  5 -> 2 -> 1) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  3. -3 -> 11) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(/**) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 234 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 226 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 218 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 210 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( * }) s
/F-gs-font 7 7 SF
18.6 202 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( */) s
/F-gs-font 7 7 SF
18.6 194 M (40:) s
/Courier-Bold 7 7 SUF
35.4 194 M
(class) s
/F-gs-font 7 7 SF
56.4 194 M
( Solution {) s
18.6 186 M (41:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(int) s
/F-gs-font 7 7 SF
85.8 186 M
( pathSum\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
186.6 186 M
(int) s
/F-gs-font 7 7 SF
199.2 186 M
( sum\) {) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 178 M
(null) s
/F-gs-font 7 7 SF
115.2 178 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 178 M
(return) s
/F-gs-font 7 7 SF
148.8 178 M
( 0;) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
( result = 0;) s
18.6 154 M (45:) s
35.4 154 M
(    result += DFS\(root, sum\);) s
18.6 146 M (46:) s
35.4 146 M
(    result += pathSum\(root.left, sum\);) s
18.6 138 M (47:) s
35.4 138 M
(    result += pathSum\(root.right, sum\);) s
18.6 130 M (48:) s
18.6 122 M (49:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( result;) s
18.6 114 M (50:) s
35.4 114 M
(  }) s
18.6 106 M (51:) s
18.6 98 M (52:) s
35.4 98 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 98 M
(public) s
/F-gs-font 7 7 SF
69 98 M
( ) s
/Courier-Bold 7 7 SUF
73.2 98 M
(int) s
/F-gs-font 7 7 SF
85.8 98 M
( DFS\(TreeNode root, ) s
/Courier-Bold 7 7 SUF
169.8 98 M
(int) s
/F-gs-font 7 7 SF
182.4 98 M
( target\) {) s
18.6 90 M (53:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(if) s
/F-gs-font 7 7 SF
60.6 90 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 90 M
(null) s
/F-gs-font 7 7 SF
115.2 90 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 90 M
(return) s
/F-gs-font 7 7 SF
148.8 90 M
( 0;) s
18.6 82 M (54:) s
18.6 74 M (55:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(int) s
/F-gs-font 7 7 SF
64.8 74 M
( result = root.val == target ? 1 : 0;) s
18.6 66 M (56:) s
35.4 66 M
(    result += DFS\(root.left, target - root.val\);) s
18.6 58 M (57:) s
35.4 58 M
(    result += DFS\(root.right, target - root.val\);) s
18.6 50 M (58:) s
18.6 42 M (59:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(return) s
/F-gs-font 7 7 SF
77.4 42 M
( result;) s
18.6 34 M (60:) s
35.4 34 M
(  }) s
18.6 26 M (61:) s
35.4 26 M
(}) s
_R
S
%%Page: (1) 19
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/IncreasingOrderSearchTree.java) def
/fdir (./trees) def
/ftail (IncreasingOrderSearchTree.java) def
% User defined strings:
/fmodstr (Wed Jan 02 22:38:15 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (IncreasingOrderSearchTree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a tree, rearrange the tree in in-order so that the leftmost node in the tree) s
5 490 M
( is now the root of the tree, and every node has no left child and only 1 right child.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input: [5,3,6,2,4,null,8,1,null,null,null,7,9]) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  5) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  3    6) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  / \\    \\) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  2   4    8) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  /        / \\) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  1        7   9) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  1) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  \\) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  2) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  \\) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  3) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  \\) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  4) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  \\) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  5) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  \\) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  6) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  \\) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  7) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  \\) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  8) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  \\) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  9) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 226 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 218 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  The number of nodes in the given tree will be between 1 and 100.) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  Each node will have a unique integer value from 0 to 1000.) s
/F-gs-font 7 7 SF
18.6 202 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( */) s
/F-gs-font 7 7 SF
18.6 194 M (41:) s
18.6 186 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(/**) s
/F-gs-font 7 7 SF
18.6 178 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 170 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 162 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 154 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 146 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 138 M (48:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 130 M (49:) s
/Courier-Oblique 7 7 SUF
35.4 130 M
( * }) s
/F-gs-font 7 7 SF
18.6 122 M (50:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
( */) s
/F-gs-font 7 7 SF
18.6 114 M (51:) s
/Courier-Bold 7 7 SUF
35.4 114 M
(class) s
/F-gs-font 7 7 SF
56.4 114 M
( Solution {) s
18.6 106 M (52:) s
35.4 106 M
(  TreeNode cur;) s
18.6 98 M (53:) s
18.6 90 M (54:) s
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(public) s
/F-gs-font 7 7 SF
69 90 M
( TreeNode increasingBST\(TreeNode root\) {) s
18.6 82 M (55:) s
35.4 82 M
(    TreeNode ans = ) s
/Courier-Bold 7 7 SUF
115.2 82 M
(new) s
/F-gs-font 7 7 SF
127.8 82 M
( TreeNode\(0\);) s
18.6 74 M (56:) s
35.4 74 M
(    cur = ans;) s
18.6 66 M (57:) s
18.6 58 M (58:) s
35.4 58 M
(    inorder\(root\);) s
18.6 50 M (59:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(return) s
/F-gs-font 7 7 SF
77.4 50 M
( ans.right;) s
18.6 42 M (60:) s
35.4 42 M
(  }) s
18.6 34 M (61:) s
18.6 26 M (62:) s
35.4 26 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 26 M
(public) s
/F-gs-font 7 7 SF
69 26 M
( ) s
/Courier-Bold 7 7 SUF
73.2 26 M
(void) s
/F-gs-font 7 7 SF
90 26 M
( inorder\(TreeNode node\) {) s
18.6 18 M (63:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(if) s
/F-gs-font 7 7 SF
60.6 18 M
( \(node == ) s
/Courier-Bold 7 7 SUF
102.6 18 M
(null) s
/F-gs-font 7 7 SF
119.4 18 M
(\) ) s
/Courier-Bold 7 7 SUF
127.8 18 M
(return) s
/F-gs-font 7 7 SF
153 18 M
(;) s
18.6 10 M (64:) s
18.6 2 M (65:) s
35.4 2 M
(    inorder\(node.left\);) s
415.6 522 M (66:) s
432.4 522 M
(    node.left = ) s
/Courier-Bold 7 7 SUF
499.6 522 M
(null) s
/F-gs-font 7 7 SF
516.4 522 M
(;) s
415.6 514 M (67:) s
432.4 514 M
(    cur.right = node;) s
415.6 506 M (68:) s
432.4 506 M
(    cur = node;) s
415.6 498 M (69:) s
432.4 498 M
(    inorder\(node.right\);) s
415.6 490 M (70:) s
432.4 490 M
(  }) s
415.6 482 M (71:) s
432.4 482 M
(}) s
_R
S
%%Page: (1) 20
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/BinaryTreeLevelOrderTraversal.java) def
/fdir (./trees) def
/ftail (BinaryTreeLevelOrderTraversal.java) def
% User defined strings:
/fmodstr (Sun Feb 24 13:24:17 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BinaryTreeLevelOrderTraversal.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, return the level order traversal of its nodes' values. \(ie, f) s
5 490 M
(rom left to right, level by level\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Given binary tree [3,9,20,null,null,15,7],) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  3) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  9  20) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  /  \\) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  15   7) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  return its level order traversal as:) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [3],) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [9,20],) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [15,7]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  ]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(/**) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * }) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Bold 7 7 SUF
35.4 282 M
(class) s
/F-gs-font 7 7 SF
56.4 282 M
( Solution {) s
18.6 274 M (31:) s
35.4 274 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 274 M
(public) s
/F-gs-font 7 7 SF
69 274 M
( List<List<Integer>> levelOrder\(TreeNode root\) {) s
18.6 266 M (32:) s
35.4 266 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 266 M
(new) s
/F-gs-font 7 7 SF
186.6 266 M
( ArrayList<>\(\);) s
18.6 258 M (33:) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(if) s
/F-gs-font 7 7 SF
60.6 250 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 250 M
(null) s
/F-gs-font 7 7 SF
115.2 250 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 250 M
(return) s
/F-gs-font 7 7 SF
148.8 250 M
( result;) s
18.6 242 M (35:) s
18.6 234 M (36:) s
35.4 234 M
(    Queue<TreeNode> q = ) s
/Courier-Bold 7 7 SUF
136.2 234 M
(new) s
/F-gs-font 7 7 SF
148.8 234 M
( LinkedList<>\(\);) s
18.6 226 M (37:) s
35.4 226 M
(    q.add\(root\);) s
18.6 218 M (38:) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(while) s
/F-gs-font 7 7 SF
73.2 210 M
(\(!q.isEmpty\(\)\) {) s
18.6 202 M (40:) s
35.4 202 M
(      List<Integer> currTraversal = ) s
/Courier-Bold 7 7 SUF
186.6 202 M
(new) s
/F-gs-font 7 7 SF
199.2 202 M
( ArrayList<>\(\);) s
18.6 194 M (41:) s
35.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 194 M
(int) s
/F-gs-font 7 7 SF
73.2 194 M
( count = q.size\(\);) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(for) s
/F-gs-font 7 7 SF
73.2 178 M
(\() s
/Courier-Bold 7 7 SUF
77.4 178 M
(int) s
/F-gs-font 7 7 SF
90 178 M
( i = 0; i < count; i++\) {) s
18.6 170 M (44:) s
35.4 170 M
(        TreeNode curr = q.poll\(\);) s
18.6 162 M (45:) s
35.4 162 M
(        currTraversal.add\(curr.val\);) s
18.6 154 M (46:) s
18.6 146 M (47:) s
35.4 146 M
(        ) s
/Courier-Bold 7 7 SUF
69 146 M
(if) s
/F-gs-font 7 7 SF
77.4 146 M
(\(curr.left != ) s
/Courier-Bold 7 7 SUF
136.2 146 M
(null) s
/F-gs-font 7 7 SF
153 146 M
(\) q.add\(curr.left\);) s
18.6 138 M (48:) s
35.4 138 M
(        ) s
/Courier-Bold 7 7 SUF
69 138 M
(if) s
/F-gs-font 7 7 SF
77.4 138 M
(\(curr.right != ) s
/Courier-Bold 7 7 SUF
140.4 138 M
(null) s
/F-gs-font 7 7 SF
157.2 138 M
(\) q.add\(curr.right\);) s
18.6 130 M (49:) s
35.4 130 M
(      }) s
18.6 122 M (50:) s
18.6 114 M (51:) s
35.4 114 M
(      result.add\(currTraversal\);) s
18.6 106 M (52:) s
35.4 106 M
(    }) s
18.6 98 M (53:) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( result;) s
18.6 82 M (55:) s
35.4 82 M
(  }) s
18.6 74 M (56:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 21
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/SortedArrayToBST.java) def
/fdir (./trees) def
/ftail (SortedArrayToBST.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:50:50 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SortedArrayToBST.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array where elements are sorted in ascending order, convert it to a heigh) s
5 490 M
(t balanced BST.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For this problem, a height-balanced binary tree is defined as a binary tree in whi) s
5 466 M
(ch the depth of the two subtrees of every node never differ by more than 1.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Given the sorted array: [-10,-3,0,5,9],) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  One possible answer is: [0,-3,9,-10,null,5], which represents the following height) s
5 410 M
( balanced BST:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  0) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  -3   9) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  /   /) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  -10  5) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( */) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(/**) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( * }) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( */) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Bold 7 7 SUF
35.4 266 M
(class) s
/F-gs-font 7 7 SF
56.4 266 M
( SortedArrayToBST {) s
18.6 258 M (31:) s
35.4 258 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 258 M
(public) s
/F-gs-font 7 7 SF
69 258 M
( TreeNode sortedArrayToBST\() s
/Courier-Bold 7 7 SUF
182.4 258 M
(int) s
/F-gs-font 7 7 SF
195 258 M
([] nums\) {) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(return) s
/F-gs-font 7 7 SF
77.4 250 M
( generateBST\(nums, 0, nums.length - 1\);) s
18.6 242 M (33:) s
35.4 242 M
(  }) s
18.6 234 M (34:) s
18.6 226 M (35:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( TreeNode generateBST\() s
/Courier-Bold 7 7 SUF
161.4 226 M
(int) s
/F-gs-font 7 7 SF
174 226 M
([] nums, ) s
/Courier-Bold 7 7 SUF
211.8 226 M
(int) s
/F-gs-font 7 7 SF
224.4 226 M
( start, ) s
/Courier-Bold 7 7 SUF
258 226 M
(int) s
/F-gs-font 7 7 SF
270.6 226 M
( end\) {) s
18.6 218 M (36:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(if) s
/F-gs-font 7 7 SF
60.6 218 M
(\(start > end\) ) s
/Courier-Bold 7 7 SUF
119.4 218 M
(return) s
/F-gs-font 7 7 SF
144.6 218 M
( ) s
/Courier-Bold 7 7 SUF
148.8 218 M
(null) s
/F-gs-font 7 7 SF
165.6 218 M
(;) s
18.6 210 M (37:) s
18.6 202 M (38:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
( mid = \(start + end\) / 2;) s
18.6 194 M (39:) s
35.4 194 M
(    TreeNode root = ) s
/Courier-Bold 7 7 SUF
119.4 194 M
(new) s
/F-gs-font 7 7 SF
132 194 M
( TreeNode\(nums[mid]\);) s
18.6 186 M (40:) s
35.4 186 M
(    root.left = generateBST\(nums, start, mid - 1\);) s
18.6 178 M (41:) s
35.4 178 M
(    root.right = generateBST\(nums, mid + 1, end\);) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(return) s
/F-gs-font 7 7 SF
77.4 162 M
( root;) s
18.6 154 M (44:) s
35.4 154 M
(  }) s
18.6 146 M (45:) s
35.4 146 M
(}) s
_R
S
%%Page: (1) 22
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/UniqueBinarySearchTrees2.java) def
/fdir (./trees) def
/ftail (UniqueBinarySearchTrees2.java) def
% User defined strings:
/fmodstr (Tue Jan 15 23:56:36 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniqueBinarySearchTrees2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an integer n, generate all structurally unique BST's \(binary search trees\) t) s
5 490 M
(hat store values 1 ... n.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input: 3) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  [) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  [1,null,3,2],) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [3,2,null,1],) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [3,1,null,null,2],) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [2,1,3],) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [1,null,2,null,3]) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  ]) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  The above output corresponds to the 5 unique BST's shown below:) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  1         3     3      2      1) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  \\       /     /      / \\      \\) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  3     2     1      1   3      2) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  /     /       \\                 \\) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  2     1         2                 3) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(/**) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( * }) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (37:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( List<TreeNode> generateTrees\() s
/Courier-Bold 7 7 SUF
195 226 M
(int) s
/F-gs-font 7 7 SF
207.6 226 M
( n\) {) s
18.6 218 M (38:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(if) s
/F-gs-font 7 7 SF
60.6 218 M
(\(n == 0\) ) s
/Courier-Bold 7 7 SUF
98.4 218 M
(return) s
/F-gs-font 7 7 SF
123.6 218 M
( ) s
/Courier-Bold 7 7 SUF
127.8 218 M
(new) s
/F-gs-font 7 7 SF
140.4 218 M
( ArrayList<TreeNode>\(\);) s
18.6 210 M (39:) s
18.6 202 M (40:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( generateSubtrees\(1, n\);) s
18.6 194 M (41:) s
35.4 194 M
(  }) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 178 M
(// idea here is to pick a root,) s
/F-gs-font 7 7 SF
18.6 170 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 170 M
(// and have the numbers lower than it to be in the left tree) s
/F-gs-font 7 7 SF
18.6 162 M (45:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 162 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 162 M
(// and numbers higher than it to be in the right tree.) s
/F-gs-font 7 7 SF
18.6 154 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 154 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 154 M
(// Create the children first and construct the parent afterwards) s
/F-gs-font 7 7 SF
18.6 146 M (47:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( List<TreeNode> generateSubtrees\() s
/Courier-Bold 7 7 SUF
207.6 146 M
(int) s
/F-gs-font 7 7 SF
220.2 146 M
( start, ) s
/Courier-Bold 7 7 SUF
253.8 146 M
(int) s
/F-gs-font 7 7 SF
266.4 146 M
( end\) {) s
18.6 138 M (48:) s
35.4 138 M
(    List<TreeNode> all_trees = ) s
/Courier-Bold 7 7 SUF
165.6 138 M
(new) s
/F-gs-font 7 7 SF
178.2 138 M
( ArrayList<TreeNode>\(\);) s
18.6 130 M (49:) s
18.6 122 M (50:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(if) s
/F-gs-font 7 7 SF
60.6 122 M
(\(start > end\) {) s
18.6 114 M (51:) s
35.4 114 M
(      all_trees.add\() s
/Courier-Bold 7 7 SUF
119.4 114 M
(null) s
/F-gs-font 7 7 SF
136.2 114 M
(\);) s
18.6 106 M (52:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(return) s
/F-gs-font 7 7 SF
85.8 106 M
( all_trees;) s
18.6 98 M (53:) s
35.4 98 M
(    }) s
18.6 90 M (54:) s
18.6 82 M (55:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(for) s
/F-gs-font 7 7 SF
64.8 82 M
(\() s
/Courier-Bold 7 7 SUF
69 82 M
(int) s
/F-gs-font 7 7 SF
81.6 82 M
( i = start; i <= end; i++\) {) s
18.6 74 M (56:) s
35.4 74 M
(      List<TreeNode> left_trees = generateSubtrees\(start, i - 1\);) s
18.6 66 M (57:) s
35.4 66 M
(      List<TreeNode> right_trees = generateSubtrees\(i + 1, end\);) s
18.6 58 M (58:) s
18.6 50 M (59:) s
35.4 50 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 50 M
(for) s
/F-gs-font 7 7 SF
73.2 50 M
(\(TreeNode l : left_trees\) {) s
18.6 42 M (60:) s
35.4 42 M
(        ) s
/Courier-Bold 7 7 SUF
69 42 M
(for) s
/F-gs-font 7 7 SF
81.6 42 M
(\(TreeNode r : right_trees\) {) s
18.6 34 M (61:) s
35.4 34 M
(          TreeNode current = ) s
/Courier-Bold 7 7 SUF
157.2 34 M
(new) s
/F-gs-font 7 7 SF
169.8 34 M
( TreeNode\(i\);) s
18.6 26 M (62:) s
35.4 26 M
(          current.left = l;) s
18.6 18 M (63:) s
35.4 18 M
(          current.right = r;) s
18.6 10 M (64:) s
35.4 10 M
(          all_trees.add\(current\);) s
18.6 2 M (65:) s
35.4 2 M
(        }) s
415.6 522 M (66:) s
432.4 522 M
(      }) s
415.6 514 M (67:) s
432.4 514 M
(    }) s
415.6 506 M (68:) s
415.6 498 M (69:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(return) s
/F-gs-font 7 7 SF
474.4 498 M
( all_trees;) s
415.6 490 M (70:) s
432.4 490 M
(  }) s
415.6 482 M (71:) s
432.4 482 M
(}) s
_R
S
%%Page: (1) 23
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/ConvertBSTToGreaterTree.java) def
/fdir (./trees) def
/ftail (ConvertBSTToGreaterTree.java) def
% User defined strings:
/fmodstr (Tue Dec 11 15:05:33 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ConvertBSTToGreaterTree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Given a Binary Search Tree \(BST\), convert it to a Greater Tree such that eve) s
5 490 M
(ry key of the original BST is changed to the original key plus sum of all keys greater than ) s
5 482 M
(the original key in BST.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Example:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Input: The root of a Binary Search Tree like this:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(          5) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        /   \\) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        2     13) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output: The root of a Greater Tree like this:) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(         18) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        /   \\) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        20     13) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(/**) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( * }) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( */) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Bold 7 7 SUF
35.4 290 M
(class) s
/F-gs-font 7 7 SF
56.4 290 M
( ConvertBSTToGreaterTree {) s
18.6 282 M (29:) s
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(int) s
/F-gs-font 7 7 SF
56.4 282 M
( sum = 0;) s
18.6 274 M (30:) s
18.6 266 M (31:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( TreeNode convertBST\(TreeNode root\) {) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(if) s
/F-gs-font 7 7 SF
60.6 258 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 258 M
(null) s
/F-gs-font 7 7 SF
115.2 258 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 258 M
(return) s
/F-gs-font 7 7 SF
148.8 258 M
( root;) s
18.6 250 M (33:) s
18.6 242 M (34:) s
35.4 242 M
(    convertBST\(root.right\);) s
18.6 234 M (35:) s
35.4 234 M
(    sum += root.val;) s
18.6 226 M (36:) s
35.4 226 M
(    root.val = sum;) s
18.6 218 M (37:) s
35.4 218 M
(    convertBST\(root.left\);) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( root;) s
18.6 194 M (40:) s
35.4 194 M
(  }) s
18.6 186 M (41:) s
35.4 186 M
(}) s
_R
S
%%Page: (1) 24
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/BinaryTreeInorderTraversal.java) def
/fdir (./trees) def
/ftail (BinaryTreeInorderTraversal.java) def
% User defined strings:
/fmodstr (Sun Apr 07 13:25:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BinaryTreeInorderTraversal.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, return the inorder traversal of its nodes' values.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input: [1,null,2,3]) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  1) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  \\) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  2) s
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  /) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  3) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: [1,3,2]) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Follow up: Recursive solution is trivial, could you do it iteratively?) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(/**) s
/F-gs-font 7 7 SF
18.6 370 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 330 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 322 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( * }) s
/F-gs-font 7 7 SF
18.6 314 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (28:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (29:) s
35.4 298 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 298 M
(// 1: use stack and another loop to iterate to left most tree always) s
/F-gs-font 7 7 SF
18.6 290 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( List<Integer> inorderTraversal\(TreeNode root\) {) s
18.6 282 M (31:) s
35.4 282 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 282 M
(new) s
/F-gs-font 7 7 SF
161.4 282 M
( ArrayList<>\(\);) s
18.6 274 M (32:) s
18.6 266 M (33:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(if) s
/F-gs-font 7 7 SF
60.6 266 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 266 M
(null) s
/F-gs-font 7 7 SF
115.2 266 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 266 M
(return) s
/F-gs-font 7 7 SF
148.8 266 M
( result;) s
18.6 258 M (34:) s
18.6 250 M (35:) s
35.4 250 M
(    Stack<TreeNode> stack = ) s
/Courier-Bold 7 7 SUF
153 250 M
(new) s
/F-gs-font 7 7 SF
165.6 250 M
( Stack<>\(\);) s
18.6 242 M (36:) s
18.6 234 M (37:) s
35.4 234 M
(    TreeNode curr = root;) s
18.6 226 M (38:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(while) s
/F-gs-font 7 7 SF
73.2 226 M
(\(curr != ) s
/Courier-Bold 7 7 SUF
111 226 M
(null) s
/F-gs-font 7 7 SF
127.8 226 M
( || !stack.isEmpty\(\)\) {) s
18.6 218 M (39:) s
35.4 218 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 218 M
(// iterate to left most tree node) s
/F-gs-font 7 7 SF
18.6 210 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 210 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 210 M
(while) s
/F-gs-font 7 7 SF
81.6 210 M
(\(curr != ) s
/Courier-Bold 7 7 SUF
119.4 210 M
(null) s
/F-gs-font 7 7 SF
136.2 210 M
(\) {) s
18.6 202 M (41:) s
35.4 202 M
(        stack.push\(curr\);) s
18.6 194 M (42:) s
35.4 194 M
(        curr = curr.left;) s
18.6 186 M (43:) s
35.4 186 M
(      }) s
18.6 178 M (44:) s
18.6 170 M (45:) s
35.4 170 M
(      curr = stack.pop\(\);) s
18.6 162 M (46:) s
35.4 162 M
(      result.add\(curr.val\);) s
18.6 154 M (47:) s
18.6 146 M (48:) s
35.4 146 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 146 M
(// iterate to the right afterwards) s
/F-gs-font 7 7 SF
18.6 138 M (49:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 138 M
(      curr = curr.right;) s
18.6 130 M (50:) s
35.4 130 M
(    }) s
18.6 122 M (51:) s
18.6 114 M (52:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( result;) s
18.6 106 M (53:) s
35.4 106 M
(  }) s
18.6 98 M (54:) s
18.6 90 M (55:) s
35.4 90 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 90 M
(// 2: use stack and hashset) s
/F-gs-font 7 7 SF
18.6 82 M (56:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 82 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 82 M
(public) s
/F-gs-font 7 7 SF
69 82 M
( List<Integer> inorderTraversal2\(TreeNode root\) {) s
18.6 74 M (57:) s
35.4 74 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 74 M
(new) s
/F-gs-font 7 7 SF
161.4 74 M
( ArrayList<>\(\);) s
18.6 66 M (58:) s
18.6 58 M (59:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(if) s
/F-gs-font 7 7 SF
60.6 58 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 58 M
(null) s
/F-gs-font 7 7 SF
115.2 58 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 58 M
(return) s
/F-gs-font 7 7 SF
148.8 58 M
( result;) s
18.6 50 M (60:) s
18.6 42 M (61:) s
35.4 42 M
(    Set<TreeNode> visited = ) s
/Courier-Bold 7 7 SUF
153 42 M
(new) s
/F-gs-font 7 7 SF
165.6 42 M
( HashSet<>\(\);) s
18.6 34 M (62:) s
35.4 34 M
(    Stack<TreeNode> stack = ) s
/Courier-Bold 7 7 SUF
153 34 M
(new) s
/F-gs-font 7 7 SF
165.6 34 M
( Stack<>\(\);) s
18.6 26 M (63:) s
35.4 26 M
(    stack.push\(root\);) s
18.6 18 M (64:) s
18.6 10 M (65:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(while) s
/F-gs-font 7 7 SF
73.2 10 M
(\(!stack.isEmpty\(\)\) {) s
18.6 2 M (66:) s
35.4 2 M
(      TreeNode curr = stack.pop\(\);) s
415.6 522 M (67:) s
415.6 514 M (68:) s
432.4 514 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 514 M
(if) s
/F-gs-font 7 7 SF
466 514 M
(\(curr.left != ) s
/Courier-Bold 7 7 SUF
524.8 514 M
(null) s
/F-gs-font 7 7 SF
541.6 514 M
( && !visited.contains\(curr.left\)\) {) s
415.6 506 M (69:) s
432.4 506 M
(        ) s
/Courier-Oblique 7 7 SUF
466 506 M
(// put curr back to the stack before left to get evaluated later) s
/F-gs-font 7 7 SF
415.6 498 M (70:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 498 M
(        stack.push\(curr\);) s
415.6 490 M (71:) s
415.6 482 M (72:) s
432.4 482 M
(        stack.push\(curr.left\);) s
415.6 474 M (73:) s
432.4 474 M
(        visited.add\(curr.left\);) s
415.6 466 M (74:) s
415.6 458 M (75:) s
432.4 458 M
(        ) s
/Courier-Bold 7 7 SUF
466 458 M
(continue) s
/F-gs-font 7 7 SF
499.6 458 M
(;) s
415.6 450 M (76:) s
432.4 450 M
(      }) s
415.6 442 M (77:) s
415.6 434 M (78:) s
432.4 434 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 434 M
(// will only add the value once left has been visited) s
/F-gs-font 7 7 SF
415.6 426 M (79:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 426 M
(      result.add\(curr.val\);) s
415.6 418 M (80:) s
415.6 410 M (81:) s
432.4 410 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 410 M
(if) s
/F-gs-font 7 7 SF
466 410 M
(\(curr.right != ) s
/Courier-Bold 7 7 SUF
529 410 M
(null) s
/F-gs-font 7 7 SF
545.8 410 M
( && !visited.contains\(curr.right\)\) {) s
415.6 402 M (82:) s
432.4 402 M
(        stack.push\(curr.right\);) s
415.6 394 M (83:) s
432.4 394 M
(        visited.add\(curr.right\);) s
415.6 386 M (84:) s
432.4 386 M
(      }) s
415.6 378 M (85:) s
432.4 378 M
(    }) s
415.6 370 M (86:) s
415.6 362 M (87:) s
432.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 362 M
(return) s
/F-gs-font 7 7 SF
474.4 362 M
( result;) s
415.6 354 M (88:) s
432.4 354 M
(  }) s
415.6 346 M (89:) s
432.4 346 M
(}) s
_R
S
%%Page: (1) 25
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./trees/DiameterOfBST.java) def
/fdir (./trees) def
/ftail (DiameterOfBST.java) def
% User defined strings:
/fmodstr (Tue Dec 18 15:58:32 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (DiameterOfBST.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a binary tree, you need to compute the length of the diameter of the tree. T) s
5 490 M
(he diameter of a binary tree is the length of the longest path between any two nodes in a tr) s
5 482 M
(ee. This path may or may not pass through the root.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Given a binary tree) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  1) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  2   3) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  4   5) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Note: The length of path between two nodes is represented by the number of edges b) s
5 386 M
(etween them.) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(/**) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( * }) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( */) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Bold 7 7 SUF
35.4 290 M
(class) s
/F-gs-font 7 7 SF
56.4 290 M
( DiameterOfBST {) s
18.6 282 M (28:) s
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(public) s
/F-gs-font 7 7 SF
69 282 M
( ) s
/Courier-Bold 7 7 SUF
73.2 282 M
(int) s
/F-gs-font 7 7 SF
85.8 282 M
( diameterOfBinaryTree\(TreeNode root\) {) s
18.6 274 M (29:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(if) s
/F-gs-font 7 7 SF
60.6 274 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 274 M
(null) s
/F-gs-font 7 7 SF
115.2 274 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 274 M
(return) s
/F-gs-font 7 7 SF
148.8 274 M
( 0;) s
18.6 266 M (30:) s
18.6 258 M (31:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(return) s
/F-gs-font 7 7 SF
77.4 258 M
( getChildPaths\(root\)[1];) s
18.6 250 M (32:) s
35.4 250 M
(  }) s
18.6 242 M (33:) s
18.6 234 M (34:) s
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(int) s
/F-gs-font 7 7 SF
85.8 234 M
([] getChildPaths\(TreeNode root\) {) s
18.6 226 M (35:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 226 M
(null) s
/F-gs-font 7 7 SF
115.2 226 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 226 M
(return) s
/F-gs-font 7 7 SF
148.8 226 M
( ) s
/Courier-Bold 7 7 SUF
153 226 M
(new) s
/F-gs-font 7 7 SF
165.6 226 M
( ) s
/Courier-Bold 7 7 SUF
169.8 226 M
(int) s
/F-gs-font 7 7 SF
182.4 226 M
([] { 0, 0 };) s
18.6 218 M (36:) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
([] left = getChildPaths\(root.left\);) s
18.6 202 M (38:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
([] right = getChildPaths\(root.right\);) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( max_path = Math.max\(Math.max\(left[1], left[0] + right[0]\), right[1]\);) s
18.6 186 M (40:) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(return) s
/F-gs-font 7 7 SF
77.4 178 M
( ) s
/Courier-Bold 7 7 SUF
81.6 178 M
(new) s
/F-gs-font 7 7 SF
94.2 178 M
( ) s
/Courier-Bold 7 7 SUF
98.4 178 M
(int) s
/F-gs-font 7 7 SF
111 178 M
([] { 1 + Math.max\(left[0], right[0]\), max_path  };) s
18.6 170 M (42:) s
35.4 170 M
(  }) s
18.6 162 M (43:) s
35.4 162 M
(}) s
_R
S
%%Page: (1) 26
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/SquaresOfASortedArray.java) def
/fdir (./binary_searches) def
/ftail (SquaresOfASortedArray.java) def
% User defined strings:
/fmodstr (Fri Mar 08 16:39:46 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SquaresOfASortedArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of integers A sorted in non-decreasing order, return an array of th) s
5 490 M
(e squares of each number, also in sorted non-decreasing order.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input: [-4,-1,0,3,10]) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Output: [0,1,9,16,100]) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: [-7,-3,2,3,11]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: [4,9,9,49,121]) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  1 <= A.length <= 10000) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  -10000 <= A[i] <= 10000) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  A is sorted in non-decreasing order.) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Bold 7 7 SUF
35.4 346 M
(class) s
/F-gs-font 7 7 SF
56.4 346 M
( Solution {) s
18.6 338 M (23:) s
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( ) s
/Courier-Bold 7 7 SUF
73.2 338 M
(int) s
/F-gs-font 7 7 SF
85.8 338 M
([] sortedSquares\() s
/Courier-Bold 7 7 SUF
157.2 338 M
(int) s
/F-gs-font 7 7 SF
169.8 338 M
([] A\) {) s
18.6 330 M (24:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(int) s
/F-gs-font 7 7 SF
64.8 330 M
([] result = ) s
/Courier-Bold 7 7 SUF
115.2 330 M
(new) s
/F-gs-font 7 7 SF
127.8 330 M
( ) s
/Courier-Bold 7 7 SUF
132 330 M
(int) s
/F-gs-font 7 7 SF
144.6 330 M
([A.length];) s
18.6 322 M (25:) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 314 M
(// search for zero / start of positive number) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(boolean) s
/F-gs-font 7 7 SF
81.6 306 M
( found = ) s
/Courier-Bold 7 7 SUF
119.4 306 M
(false) s
/F-gs-font 7 7 SF
140.4 306 M
(;) s
18.6 298 M (28:) s
18.6 290 M (29:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(int) s
/F-gs-font 7 7 SF
64.8 290 M
( left = 0;) s
18.6 282 M (30:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( right = A.length - 1;) s
18.6 274 M (31:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
( mid = 0;) s
18.6 266 M (32:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(while) s
/F-gs-font 7 7 SF
73.2 266 M
(\(left <= right\) {) s
18.6 258 M (33:) s
35.4 258 M
(      mid = \(left + right\) / 2;) s
18.6 250 M (34:) s
18.6 242 M (35:) s
35.4 242 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 242 M
(if) s
/F-gs-font 7 7 SF
69 242 M
(\(A[mid] < 0\) left = mid + 1;) s
18.6 234 M (36:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(else) s
/F-gs-font 7 7 SF
77.4 234 M
( ) s
/Courier-Bold 7 7 SUF
81.6 234 M
(if) s
/F-gs-font 7 7 SF
90 234 M
(\(A[mid] > 0\) right = mid - 1;) s
18.6 226 M (37:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(else) s
/F-gs-font 7 7 SF
77.4 226 M
( {) s
18.6 218 M (38:) s
35.4 218 M
(        found = ) s
/Courier-Bold 7 7 SUF
102.6 218 M
(true) s
/F-gs-font 7 7 SF
119.4 218 M
(;) s
18.6 210 M (39:) s
35.4 210 M
(        ) s
/Courier-Bold 7 7 SUF
69 210 M
(break) s
/F-gs-font 7 7 SF
90 210 M
(;) s
18.6 202 M (40:) s
35.4 202 M
(      }) s
18.6 194 M (41:) s
35.4 194 M
(    }) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 178 M
(// if found use mid, if not then use left or right) s
/F-gs-font 7 7 SF
18.6 170 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(if) s
/F-gs-font 7 7 SF
60.6 170 M
(\(found\) {) s
18.6 162 M (45:) s
35.4 162 M
(      left = mid;) s
18.6 154 M (46:) s
35.4 154 M
(      right = mid + 1;) s
18.6 146 M (47:) s
35.4 146 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(else) s
/F-gs-font 7 7 SF
77.4 146 M
( {) s
18.6 138 M (48:) s
35.4 138 M
(      left = right;) s
18.6 130 M (49:) s
35.4 130 M
(      right++;) s
18.6 122 M (50:) s
35.4 122 M
(    }) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 106 M
(// sort the array) s
/F-gs-font 7 7 SF
18.6 98 M (53:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(int) s
/F-gs-font 7 7 SF
64.8 98 M
( resultIndex = 0;) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(while) s
/F-gs-font 7 7 SF
73.2 90 M
(\(left >= 0 || right < A.length\) {) s
18.6 82 M (55:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(if) s
/F-gs-font 7 7 SF
69 82 M
(\(left == -1\) {) s
18.6 74 M (56:) s
35.4 74 M
(        result[resultIndex++] = A[right] * A[right];) s
18.6 66 M (57:) s
35.4 66 M
(        right++;) s
18.6 58 M (58:) s
35.4 58 M
(      } ) s
/Courier-Bold 7 7 SUF
69 58 M
(else) s
/F-gs-font 7 7 SF
85.8 58 M
( ) s
/Courier-Bold 7 7 SUF
90 58 M
(if) s
/F-gs-font 7 7 SF
98.4 58 M
(\(right == A.length\) {) s
18.6 50 M (59:) s
35.4 50 M
(        result[resultIndex++] = A[left] * A[left];) s
18.6 42 M (60:) s
35.4 42 M
(        left--;) s
18.6 34 M (61:) s
35.4 34 M
(      } ) s
/Courier-Bold 7 7 SUF
69 34 M
(else) s
/F-gs-font 7 7 SF
85.8 34 M
( ) s
/Courier-Bold 7 7 SUF
90 34 M
(if) s
/F-gs-font 7 7 SF
98.4 34 M
(\(-A[left] < A[right]\) {) s
18.6 26 M (62:) s
35.4 26 M
(        result[resultIndex++] = A[left] * A[left];) s
18.6 18 M (63:) s
35.4 18 M
(        left--;) s
18.6 10 M (64:) s
35.4 10 M
(      } ) s
/Courier-Bold 7 7 SUF
69 10 M
(else) s
/F-gs-font 7 7 SF
85.8 10 M
( {) s
18.6 2 M (65:) s
35.4 2 M
(        result[resultIndex++] = A[right] * A[right];) s
415.6 522 M (66:) s
432.4 522 M
(        right++;) s
415.6 514 M (67:) s
432.4 514 M
(      }) s
415.6 506 M (68:) s
432.4 506 M
(    }) s
415.6 498 M (69:) s
415.6 490 M (70:) s
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(return) s
/F-gs-font 7 7 SF
474.4 490 M
( result;) s
415.6 482 M (71:) s
432.4 482 M
(  }) s
415.6 474 M (72:) s
432.4 474 M
(}) s
_R
S
%%Page: (1) 27
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/SearchInRotatedSortedArray.java) def
/fdir (./binary_searches) def
/ftail (SearchInRotatedSortedArray.java) def
% User defined strings:
/fmodstr (Sun Feb 10 22:56:32 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SearchInRotatedSortedArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Suppose an array sorted in ascending order is rotated at some pivot unknown to you) s
5 490 M
( beforehand.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  \(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]\).) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  You are given a target value to search. If found in the array return its index, ot) s
5 450 M
(herwise return -1.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  You may assume no duplicate exists in the array.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Your algorithm's runtime complexity must be in the order of O\(log n\).) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: nums = [4,5,6,7,0,1,2], target = 0) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: nums = [4,5,6,7,0,1,2], target = 3) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: -1) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
18.6 322 M (24:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( Solution {) s
18.6 314 M (25:) s
35.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 314 M
(public) s
/F-gs-font 7 7 SF
69 314 M
( ) s
/Courier-Bold 7 7 SUF
73.2 314 M
(int) s
/F-gs-font 7 7 SF
85.8 314 M
( search\() s
/Courier-Bold 7 7 SUF
119.4 314 M
(int) s
/F-gs-font 7 7 SF
132 314 M
([] nums, ) s
/Courier-Bold 7 7 SUF
169.8 314 M
(int) s
/F-gs-font 7 7 SF
182.4 314 M
( target\) {) s
18.6 306 M (26:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(int) s
/F-gs-font 7 7 SF
64.8 306 M
( starting_index = 0;) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 1; i < nums.length; i++\) {) s
18.6 290 M (28:) s
35.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 290 M
(if) s
/F-gs-font 7 7 SF
69 290 M
(\(nums[i] < nums[i-1]\) {) s
18.6 282 M (29:) s
35.4 282 M
(        starting_index = i;) s
18.6 274 M (30:) s
35.4 274 M
(        ) s
/Courier-Bold 7 7 SUF
69 274 M
(break) s
/F-gs-font 7 7 SF
90 274 M
(;) s
18.6 266 M (31:) s
35.4 266 M
(      }) s
18.6 258 M (32:) s
35.4 258 M
(    }) s
18.6 250 M (33:) s
18.6 242 M (34:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(int) s
/F-gs-font 7 7 SF
64.8 242 M
( start = 0;) s
18.6 234 M (35:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
( end = nums.length - 1;) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(int) s
/F-gs-font 7 7 SF
64.8 226 M
( middle = 0;) s
18.6 218 M (37:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
( curr = 0;) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(while) s
/F-gs-font 7 7 SF
73.2 202 M
(\(start <= end\) {) s
18.6 194 M (40:) s
35.4 194 M
(      middle = \(start + end\) / 2;) s
18.6 186 M (41:) s
35.4 186 M
(      curr = \(middle + starting_index\) % nums.length;) s
18.6 178 M (42:) s
18.6 170 M (43:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(if) s
/F-gs-font 7 7 SF
69 170 M
(\(nums[curr] < target\) {) s
18.6 162 M (44:) s
35.4 162 M
(        start = middle + 1;) s
18.6 154 M (45:) s
35.4 154 M
(      } ) s
/Courier-Bold 7 7 SUF
69 154 M
(else) s
/F-gs-font 7 7 SF
85.8 154 M
( ) s
/Courier-Bold 7 7 SUF
90 154 M
(if) s
/F-gs-font 7 7 SF
98.4 154 M
(\(nums[curr] > target\) {) s
18.6 146 M (46:) s
35.4 146 M
(        end = middle -1;) s
18.6 138 M (47:) s
35.4 138 M
(      } ) s
/Courier-Bold 7 7 SUF
69 138 M
(else) s
/F-gs-font 7 7 SF
85.8 138 M
( {) s
18.6 130 M (48:) s
35.4 130 M
(        ) s
/Courier-Bold 7 7 SUF
69 130 M
(return) s
/F-gs-font 7 7 SF
94.2 130 M
( curr;) s
18.6 122 M (49:) s
35.4 122 M
(      }) s
18.6 114 M (50:) s
35.4 114 M
(    }) s
18.6 106 M (51:) s
18.6 98 M (52:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(return) s
/F-gs-font 7 7 SF
77.4 98 M
( -1;) s
18.6 90 M (53:) s
35.4 90 M
(  }) s
18.6 82 M (54:) s
35.4 82 M
(}) s
_R
S
%%Page: (1) 28
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/Search2DMatrix.java) def
/fdir (./binary_searches) def
/ftail (Search2DMatrix.java) def
% User defined strings:
/fmodstr (Mon Jan 14 16:27:17 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (Search2DMatrix.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Write an efficient algorithm that searches for a value in an m x n matrix. This ma) s
5 490 M
(trix has the following properties:) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Integers in each row are sorted from left to right.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The first integer of each row is greater than the last integer of the previous row) s
5 458 M
(.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  matrix = [) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [1,   3,  5,  7],) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [10, 11, 16, 20],) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [23, 30, 34, 50]) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  ]) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  target = 3) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  matrix = [) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [1,   3,  5,  7],) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [10, 11, 16, 20],) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [23, 30, 34, 50]) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  ]) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  target = 13) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
18.6 274 M (30:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(class) s
/F-gs-font 7 7 SF
56.4 274 M
( Solution {) s
18.6 266 M (31:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( ) s
/Courier-Bold 7 7 SUF
73.2 266 M
(boolean) s
/F-gs-font 7 7 SF
102.6 266 M
( searchMatrix\() s
/Courier-Bold 7 7 SUF
161.4 266 M
(int) s
/F-gs-font 7 7 SF
174 266 M
([][] matrix, ) s
/Courier-Bold 7 7 SUF
228.6 266 M
(int) s
/F-gs-font 7 7 SF
241.2 266 M
( target\) {) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(if) s
/F-gs-font 7 7 SF
60.6 258 M
(\(matrix.length == 0 || matrix[0].length == 0\) ) s
/Courier-Bold 7 7 SUF
253.8 258 M
(return) s
/F-gs-font 7 7 SF
279 258 M
( ) s
/Courier-Bold 7 7 SUF
283.2 258 M
(false) s
/F-gs-font 7 7 SF
304.2 258 M
(;) s
18.6 250 M (33:) s
18.6 242 M (34:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(int) s
/F-gs-font 7 7 SF
64.8 242 M
( rows = matrix.length;) s
18.6 234 M (35:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
( cols = matrix[0].length;) s
18.6 226 M (36:) s
18.6 218 M (37:) s
35.4 218 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 218 M
(// first binary search - find row) s
/F-gs-font 7 7 SF
18.6 210 M (38:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
( start = 0;) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
( end = rows - 1;) s
18.6 194 M (40:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(while) s
/F-gs-font 7 7 SF
73.2 194 M
(\(start <= end\) {) s
18.6 186 M (41:) s
35.4 186 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 186 M
(int) s
/F-gs-font 7 7 SF
73.2 186 M
( mid = \(start + end\)/2;) s
18.6 178 M (42:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(if) s
/F-gs-font 7 7 SF
69 178 M
(\(matrix[mid][0] == target\) ) s
/Courier-Bold 7 7 SUF
182.4 178 M
(return) s
/F-gs-font 7 7 SF
207.6 178 M
( ) s
/Courier-Bold 7 7 SUF
211.8 178 M
(true) s
/F-gs-font 7 7 SF
228.6 178 M
(;) s
18.6 170 M (43:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(else) s
/F-gs-font 7 7 SF
77.4 170 M
( ) s
/Courier-Bold 7 7 SUF
81.6 170 M
(if) s
/F-gs-font 7 7 SF
90 170 M
(\(matrix[mid][0] > target\) end = mid - 1;) s
18.6 162 M (44:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(else) s
/F-gs-font 7 7 SF
77.4 162 M
( start = mid + 1;) s
18.6 154 M (45:) s
35.4 154 M
(    }) s
18.6 146 M (46:) s
18.6 138 M (47:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(if) s
/F-gs-font 7 7 SF
60.6 138 M
(\(end < 0\) ) s
/Courier-Bold 7 7 SUF
102.6 138 M
(return) s
/F-gs-font 7 7 SF
127.8 138 M
( ) s
/Courier-Bold 7 7 SUF
132 138 M
(false) s
/F-gs-font 7 7 SF
153 138 M
(;) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(int) s
/F-gs-font 7 7 SF
64.8 130 M
( row = end;) s
18.6 122 M (49:) s
18.6 114 M (50:) s
35.4 114 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 114 M
(// second binary search - find col) s
/F-gs-font 7 7 SF
18.6 106 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 106 M
(    start = 1;) s
18.6 98 M (52:) s
35.4 98 M
(    end = cols - 1;) s
18.6 90 M (53:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(while) s
/F-gs-font 7 7 SF
73.2 90 M
(\(start <= end\) {) s
18.6 82 M (54:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(int) s
/F-gs-font 7 7 SF
73.2 82 M
( mid = \(start + end\)/2;) s
18.6 74 M (55:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(if) s
/F-gs-font 7 7 SF
69 74 M
(\(matrix[row][mid] == target\) ) s
/Courier-Bold 7 7 SUF
190.8 74 M
(return) s
/F-gs-font 7 7 SF
216 74 M
( ) s
/Courier-Bold 7 7 SUF
220.2 74 M
(true) s
/F-gs-font 7 7 SF
237 74 M
(;) s
18.6 66 M (56:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(else) s
/F-gs-font 7 7 SF
77.4 66 M
( ) s
/Courier-Bold 7 7 SUF
81.6 66 M
(if) s
/F-gs-font 7 7 SF
90 66 M
(\(matrix[row][mid] > target\) end = mid - 1;) s
18.6 58 M (57:) s
35.4 58 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 58 M
(else) s
/F-gs-font 7 7 SF
77.4 58 M
( start = mid + 1;) s
18.6 50 M (58:) s
35.4 50 M
(    }) s
18.6 42 M (59:) s
18.6 34 M (60:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(return) s
/F-gs-font 7 7 SF
77.4 34 M
( ) s
/Courier-Bold 7 7 SUF
81.6 34 M
(false) s
/F-gs-font 7 7 SF
102.6 34 M
(;) s
18.6 26 M (61:) s
35.4 26 M
(  }) s
18.6 18 M (62:) s
35.4 18 M
(}) s
_R
S
%%Page: (1) 29
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/SearchInRotatedSortedArray2.java) def
/fdir (./binary_searches) def
/ftail (SearchInRotatedSortedArray2.java) def
% User defined strings:
/fmodstr (Tue Feb 12 15:13:48 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SearchInRotatedSortedArray2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Suppose an array sorted in ascending order is rotated at some pivot unknown to you) s
5 490 M
( beforehand.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  \(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]\).) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  You are given a target value to search. If found in the array return true, otherwi) s
5 450 M
(se return false.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: nums = [2,5,6,0,0,1,2], target = 0) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: nums = [2,5,6,0,0,1,2], target = 3) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  This is a follow up problem to Search in Rotated Sorted Array, where nums may cont) s
5 346 M
(ain duplicates.) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Would this affect the run-time complexity? How and why?) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( */) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
18.6 314 M (24:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( Solution {) s
18.6 306 M (25:) s
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( ) s
/Courier-Bold 7 7 SUF
73.2 306 M
(boolean) s
/F-gs-font 7 7 SF
102.6 306 M
( search\() s
/Courier-Bold 7 7 SUF
136.2 306 M
(int) s
/F-gs-font 7 7 SF
148.8 306 M
([] nums, ) s
/Courier-Bold 7 7 SUF
186.6 306 M
(int) s
/F-gs-font 7 7 SF
199.2 306 M
( target\) {) s
18.6 298 M (26:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(int) s
/F-gs-font 7 7 SF
64.8 298 M
( start = 0;) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(for) s
/F-gs-font 7 7 SF
64.8 290 M
(\() s
/Courier-Bold 7 7 SUF
69 290 M
(int) s
/F-gs-font 7 7 SF
81.6 290 M
( i = 1; i < nums.length; i++\) {) s
18.6 282 M (28:) s
35.4 282 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 282 M
(// why not try to find the target while finding the pivot) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(if) s
/F-gs-font 7 7 SF
69 274 M
(\(nums[i] == target\) ) s
/Courier-Bold 7 7 SUF
153 274 M
(return) s
/F-gs-font 7 7 SF
178.2 274 M
( ) s
/Courier-Bold 7 7 SUF
182.4 274 M
(true) s
/F-gs-font 7 7 SF
199.2 274 M
(;) s
18.6 266 M (30:) s
18.6 258 M (31:) s
35.4 258 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 258 M
(if) s
/F-gs-font 7 7 SF
69 258 M
(\(nums[i-1] > nums[i]\) {) s
18.6 250 M (32:) s
35.4 250 M
(        start = i;) s
18.6 242 M (33:) s
35.4 242 M
(        ) s
/Courier-Bold 7 7 SUF
69 242 M
(break) s
/F-gs-font 7 7 SF
90 242 M
(;) s
18.6 234 M (34:) s
35.4 234 M
(      }) s
18.6 226 M (35:) s
35.4 226 M
(    }) s
18.6 218 M (36:) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
( end = start + nums.length - 1;) s
18.6 202 M (38:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
( mid = 0;) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( curr = 0;) s
18.6 186 M (40:) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(while) s
/F-gs-font 7 7 SF
73.2 178 M
(\(start <= end\) {) s
18.6 170 M (42:) s
35.4 170 M
(      mid = \(start + end\) / 2;) s
18.6 162 M (43:) s
35.4 162 M
(      curr = mid % nums.length;) s
18.6 154 M (44:) s
18.6 146 M (45:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(if) s
/F-gs-font 7 7 SF
69 146 M
(\(nums[curr] < target\) {) s
18.6 138 M (46:) s
35.4 138 M
(        start = mid + 1;) s
18.6 130 M (47:) s
35.4 130 M
(      } ) s
/Courier-Bold 7 7 SUF
69 130 M
(else) s
/F-gs-font 7 7 SF
85.8 130 M
( ) s
/Courier-Bold 7 7 SUF
90 130 M
(if) s
/F-gs-font 7 7 SF
98.4 130 M
(\(nums[curr] > target\) {) s
18.6 122 M (48:) s
35.4 122 M
(        end = mid - 1;) s
18.6 114 M (49:) s
35.4 114 M
(      } ) s
/Courier-Bold 7 7 SUF
69 114 M
(else) s
/F-gs-font 7 7 SF
85.8 114 M
( {) s
18.6 106 M (50:) s
35.4 106 M
(        ) s
/Courier-Bold 7 7 SUF
69 106 M
(return) s
/F-gs-font 7 7 SF
94.2 106 M
( ) s
/Courier-Bold 7 7 SUF
98.4 106 M
(true) s
/F-gs-font 7 7 SF
115.2 106 M
(;) s
18.6 98 M (51:) s
35.4 98 M
(      }) s
18.6 90 M (52:) s
35.4 90 M
(    }) s
18.6 82 M (53:) s
18.6 74 M (54:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(return) s
/F-gs-font 7 7 SF
77.4 74 M
( ) s
/Courier-Bold 7 7 SUF
81.6 74 M
(false) s
/F-gs-font 7 7 SF
102.6 74 M
(;) s
18.6 66 M (55:) s
35.4 66 M
(  }) s
18.6 58 M (56:) s
35.4 58 M
(}) s
_R
S
%%Page: (1) 30
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/CombinationSum.java) def
/fdir (./binary_searches) def
/ftail (CombinationSum.java) def
% User defined strings:
/fmodstr (Mon Feb 18 17:19:44 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (CombinationSum.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a set of candidate numbers \(candidates\) \(without duplicates\) and a target nu) s
5 490 M
(mber \(target\), find all unique combinations in candidates where the candidate numbers sums t) s
5 482 M
(o target.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The same repeated number may be chosen from candidates unlimited number of times.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  All numbers \(including target\) will be positive integers.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  The solution set must not contain duplicate combinations.) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: candidates = [2,3,6,7], target = 7,) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  A solution set is:) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  [7],) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  [2,2,3]) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  ]) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Input: candidates = [2,3,5], target = 8,) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  A solution set is:) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  [2,2,2,2],) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  [2,3,3],) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  [3,5]) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  ]) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
18.6 266 M (31:) s
/Courier-Bold 7 7 SUF
35.4 266 M
(class) s
/F-gs-font 7 7 SF
56.4 266 M
( Solution {) s
18.6 258 M (32:) s
35.4 258 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 258 M
(// approach 1: no sorting, just avoid duplication by passing start index) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( List<List<Integer>> combinationSum\() s
/Courier-Bold 7 7 SUF
220.2 250 M
(int) s
/F-gs-font 7 7 SF
232.8 250 M
([] candidates, ) s
/Courier-Bold 7 7 SUF
295.8 250 M
(int) s
/F-gs-font 7 7 SF
308.4 250 M
( target\) {) s
18.6 242 M (34:) s
35.4 242 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 242 M
(new) s
/F-gs-font 7 7 SF
186.6 242 M
( ArrayList<>\(\);) s
18.6 234 M (35:) s
35.4 234 M
(    LinkedList<Integer> curr = ) s
/Courier-Bold 7 7 SUF
165.6 234 M
(new) s
/F-gs-font 7 7 SF
178.2 234 M
( LinkedList<>\(\);) s
18.6 226 M (36:) s
18.6 218 M (37:) s
35.4 218 M
(    findCombinations\(result, candidates, 0, target, curr\);) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( result;) s
18.6 194 M (40:) s
35.4 194 M
(  }) s
18.6 186 M (41:) s
18.6 178 M (42:) s
35.4 178 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 178 M
(public) s
/F-gs-font 7 7 SF
69 178 M
( ) s
/Courier-Bold 7 7 SUF
73.2 178 M
(void) s
/F-gs-font 7 7 SF
90 178 M
( findCombinations\() s
18.6 170 M (43:) s
35.4 170 M
(    List<List<Integer>> result,) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
([] candidates,) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(int) s
/F-gs-font 7 7 SF
64.8 154 M
( index,) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(int) s
/F-gs-font 7 7 SF
64.8 146 M
( target,) s
18.6 138 M (47:) s
35.4 138 M
(    LinkedList<Integer> curr) s
18.6 130 M (48:) s
35.4 130 M
(  \) {) s
18.6 122 M (49:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(if) s
/F-gs-font 7 7 SF
60.6 122 M
(\(target < 0\) ) s
/Courier-Bold 7 7 SUF
115.2 122 M
(return) s
/F-gs-font 7 7 SF
140.4 122 M
(;) s
18.6 114 M (50:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(if) s
/F-gs-font 7 7 SF
60.6 114 M
(\(target == 0\) result.add\(\(LinkedList\) curr.clone\(\)\);) s
18.6 106 M (51:) s
18.6 98 M (52:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(for) s
/F-gs-font 7 7 SF
64.8 98 M
(\() s
/Courier-Bold 7 7 SUF
69 98 M
(int) s
/F-gs-font 7 7 SF
81.6 98 M
( i = index; i < candidates.length; i++\) {) s
18.6 90 M (53:) s
35.4 90 M
(      curr.add\(candidates[i]\);) s
18.6 82 M (54:) s
35.4 82 M
(      findCombinations\(result, candidates, i, target - candidates[i], curr\);) s
18.6 74 M (55:) s
35.4 74 M
(      curr.removeLast\(\);) s
18.6 66 M (56:) s
35.4 66 M
(    }) s
18.6 58 M (57:) s
35.4 58 M
(  }) s
18.6 50 M (58:) s
18.6 42 M (59:) s
35.4 42 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 42 M
(// approach 2: sort and do binary search and iterate backwards) s
/F-gs-font 7 7 SF
18.6 34 M (60:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 34 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 34 M
(public) s
/F-gs-font 7 7 SF
69 34 M
( List<List<Integer>> combinationSum\() s
/Courier-Bold 7 7 SUF
220.2 34 M
(int) s
/F-gs-font 7 7 SF
232.8 34 M
([] candidates, ) s
/Courier-Bold 7 7 SUF
295.8 34 M
(int) s
/F-gs-font 7 7 SF
308.4 34 M
( target\) {) s
18.6 26 M (61:) s
35.4 26 M
(    List<List<Integer>> result = ) s
/Courier-Bold 7 7 SUF
174 26 M
(new) s
/F-gs-font 7 7 SF
186.6 26 M
( ArrayList<>\(\);) s
18.6 18 M (62:) s
35.4 18 M
(    LinkedList<Integer> curr = ) s
/Courier-Bold 7 7 SUF
165.6 18 M
(new) s
/F-gs-font 7 7 SF
178.2 18 M
( LinkedList<>\(\);) s
18.6 10 M (63:) s
18.6 2 M (64:) s
35.4 2 M
(    Arrays.sort\(candidates\);) s
415.6 522 M (65:) s
432.4 522 M
(    findCombinations\(result, candidates, candidates.length - 1, target, curr\);) s
415.6 514 M (66:) s
415.6 506 M (67:) s
432.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 506 M
(return) s
/F-gs-font 7 7 SF
474.4 506 M
( result;) s
415.6 498 M (68:) s
432.4 498 M
(  }) s
415.6 490 M (69:) s
415.6 482 M (70:) s
432.4 482 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 482 M
(public) s
/F-gs-font 7 7 SF
466 482 M
( ) s
/Courier-Bold 7 7 SUF
470.2 482 M
(void) s
/F-gs-font 7 7 SF
487 482 M
( findCombinations\() s
415.6 474 M (71:) s
432.4 474 M
(    List<List<Integer>> result,) s
415.6 466 M (72:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(int) s
/F-gs-font 7 7 SF
461.8 466 M
([] candidates,) s
415.6 458 M (73:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(int) s
/F-gs-font 7 7 SF
461.8 458 M
( max_index,) s
415.6 450 M (74:) s
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(int) s
/F-gs-font 7 7 SF
461.8 450 M
( target,) s
415.6 442 M (75:) s
432.4 442 M
(    LinkedList<Integer> curr) s
415.6 434 M (76:) s
432.4 434 M
(  \) {) s
415.6 426 M (77:) s
432.4 426 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 426 M
(if) s
/F-gs-font 7 7 SF
457.6 426 M
(\(target == 0\) {) s
415.6 418 M (78:) s
432.4 418 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 418 M
(// result.add\(\(LinkedList\) curr.clone\(\)\);) s
/F-gs-font 7 7 SF
415.6 410 M (79:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 410 M
(      result.add\() s
/Courier-Bold 7 7 SUF
503.8 410 M
(new) s
/F-gs-font 7 7 SF
516.4 410 M
( ArrayList<>\(curr\)\);) s
415.6 402 M (80:) s
432.4 402 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 402 M
(return) s
/F-gs-font 7 7 SF
482.8 402 M
(;) s
415.6 394 M (81:) s
432.4 394 M
(    }) s
415.6 386 M (82:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(if) s
/F-gs-font 7 7 SF
457.6 386 M
(\(target < 0 || target < candidates[0]\) ) s
/Courier-Bold 7 7 SUF
621.4 386 M
(return) s
/F-gs-font 7 7 SF
646.6 386 M
(;) s
415.6 378 M (83:) s
415.6 370 M (84:) s
432.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 370 M
(for) s
/F-gs-font 7 7 SF
461.8 370 M
(\() s
/Courier-Bold 7 7 SUF
466 370 M
(int) s
/F-gs-font 7 7 SF
478.6 370 M
( i = binarySearch\(candidates, target, max_index\); i >= 0; i--\) {) s
415.6 362 M (85:) s
432.4 362 M
(      curr.add\(candidates[i]\);) s
415.6 354 M (86:) s
432.4 354 M
(      findCombinations\(result, candidates, i, target - candidates[i], curr\);) s
415.6 346 M (87:) s
432.4 346 M
(      curr.removeLast\(\);) s
415.6 338 M (88:) s
432.4 338 M
(    }) s
415.6 330 M (89:) s
432.4 330 M
(  }) s
415.6 322 M (90:) s
415.6 314 M (91:) s
432.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 314 M
(public) s
/F-gs-font 7 7 SF
466 314 M
( ) s
/Courier-Bold 7 7 SUF
470.2 314 M
(int) s
/F-gs-font 7 7 SF
482.8 314 M
( binarySearch\() s
/Courier-Bold 7 7 SUF
541.6 314 M
(int) s
/F-gs-font 7 7 SF
554.2 314 M
([] candidates, ) s
/Courier-Bold 7 7 SUF
617.2 314 M
(int) s
/F-gs-font 7 7 SF
629.8 314 M
( target, ) s
/Courier-Bold 7 7 SUF
667.6 314 M
(int) s
/F-gs-font 7 7 SF
680.2 314 M
( max_index\) {) s
415.6 306 M (92:) s
432.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 306 M
(if) s
/F-gs-font 7 7 SF
457.6 306 M
(\(target < candidates[0]\) ) s
/Courier-Bold 7 7 SUF
562.6 306 M
(return) s
/F-gs-font 7 7 SF
587.8 306 M
( -1;) s
415.6 298 M (93:) s
432.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 298 M
(if) s
/F-gs-font 7 7 SF
457.6 298 M
(\(max_index == 0\) ) s
/Courier-Bold 7 7 SUF
529 298 M
(return) s
/F-gs-font 7 7 SF
554.2 298 M
( max_index;) s
415.6 290 M (94:) s
415.6 282 M (95:) s
432.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 282 M
(int) s
/F-gs-font 7 7 SF
461.8 282 M
( start = 0;) s
415.6 274 M (96:) s
432.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 274 M
(int) s
/F-gs-font 7 7 SF
461.8 274 M
( end = max_index;) s
415.6 266 M (97:) s
432.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 266 M
(int) s
/F-gs-font 7 7 SF
461.8 266 M
( mid;) s
415.6 258 M (98:) s
432.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 258 M
(while) s
/F-gs-font 7 7 SF
470.2 258 M
(\(start <= end\) {) s
415.6 250 M (99:) s
432.4 250 M
(      mid = \(start + end\) / 2;) s
411.4 242 M (100:) s
411.4 234 M (101:) s
432.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 234 M
(if) s
/F-gs-font 7 7 SF
466 234 M
(\(candidates[mid] < target\) {) s
411.4 226 M (102:) s
432.4 226 M
(        start = mid + 1;) s
411.4 218 M (103:) s
432.4 218 M
(      } ) s
/Courier-Bold 7 7 SUF
466 218 M
(else) s
/F-gs-font 7 7 SF
482.8 218 M
( ) s
/Courier-Bold 7 7 SUF
487 218 M
(if) s
/F-gs-font 7 7 SF
495.4 218 M
(\(candidates[mid] > target\) {) s
411.4 210 M (104:) s
432.4 210 M
(        end = mid - 1;) s
411.4 202 M (105:) s
432.4 202 M
(      } ) s
/Courier-Bold 7 7 SUF
466 202 M
(else) s
/F-gs-font 7 7 SF
482.8 202 M
( {) s
411.4 194 M (106:) s
432.4 194 M
(        ) s
/Courier-Bold 7 7 SUF
466 194 M
(return) s
/F-gs-font 7 7 SF
491.2 194 M
( mid;) s
411.4 186 M (107:) s
432.4 186 M
(      }) s
411.4 178 M (108:) s
432.4 178 M
(    }) s
411.4 170 M (109:) s
411.4 162 M (110:) s
432.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 162 M
(return) s
/F-gs-font 7 7 SF
474.4 162 M
( end;) s
411.4 154 M (111:) s
432.4 154 M
(  }) s
411.4 146 M (112:) s
432.4 146 M
(}) s
_R
S
%%Page: (1) 31
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/FindPeakElement.java) def
/fdir (./binary_searches) def
/ftail (FindPeakElement.java) def
% User defined strings:
/fmodstr (Tue Feb 12 15:28:08 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindPeakElement.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  A peak element is an element that is greater than its neighbors.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Given an input array nums, where nums[i] \342\\211\240 nums[i+1], find a peak element and) s
5 474 M
( return its index.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  The array may contain multiple peaks, in that case return the index to any one of ) s
5 450 M
(the peaks is fine.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  You may imagine that nums[-1] = nums[n] = -\342\\210\\236.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: nums = [1,2,3,1]) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation: 3 is a peak element and your function should return the index number ) s
5 378 M
(2.) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: nums = [1,2,1,3,5,6,4]) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: 1 or 5 ) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation: Your function can return either index number 1 where the peak element) s
5 330 M
( is 2, ) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  or index number 5 where the peak element is 6.) s
/F-gs-font 7 7 SF
18.6 314 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
18.6 298 M (25:) s
/Courier-Bold 7 7 SUF
35.4 298 M
(class) s
/F-gs-font 7 7 SF
56.4 298 M
( Solution {) s
18.6 290 M (26:) s
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( ) s
/Courier-Bold 7 7 SUF
73.2 290 M
(int) s
/F-gs-font 7 7 SF
85.8 290 M
( findPeakElement\() s
/Courier-Bold 7 7 SUF
157.2 290 M
(int) s
/F-gs-font 7 7 SF
169.8 290 M
([] nums\) {) s
18.6 282 M (27:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( start = 0;) s
18.6 274 M (28:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
( end = nums.length - 1;) s
18.6 266 M (29:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( mid = 0;) s
18.6 258 M (30:) s
18.6 250 M (31:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(while) s
/F-gs-font 7 7 SF
73.2 250 M
(\(start < end\) {) s
18.6 242 M (32:) s
35.4 242 M
(      mid = \(start + end\) / 2;) s
18.6 234 M (33:) s
18.6 226 M (34:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(if) s
/F-gs-font 7 7 SF
69 226 M
(\(nums[mid] < nums[mid + 1]\) {) s
18.6 218 M (35:) s
35.4 218 M
(        start = mid + 1;) s
18.6 210 M (36:) s
35.4 210 M
(      } ) s
/Courier-Bold 7 7 SUF
69 210 M
(else) s
/F-gs-font 7 7 SF
85.8 210 M
( {) s
18.6 202 M (37:) s
35.4 202 M
(        end = mid;) s
18.6 194 M (38:) s
35.4 194 M
(      }) s
18.6 186 M (39:) s
35.4 186 M
(    }) s
18.6 178 M (40:) s
18.6 170 M (41:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(return) s
/F-gs-font 7 7 SF
77.4 170 M
( start;) s
18.6 162 M (42:) s
35.4 162 M
(  }) s
18.6 154 M (43:) s
35.4 154 M
(}) s
_R
S
%%Page: (1) 32
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./binary_searches/FindMinimumInRotatedSortedArray.java) def
/fdir (./binary_searches) def
/ftail (FindMinimumInRotatedSortedArray.java) def
% User defined strings:
/fmodstr (Tue Feb 12 14:49:06 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindMinimumInRotatedSortedArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Suppose an array sorted in ascending order is rotated at some pivot unknown to you) s
5 490 M
( beforehand.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  \(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]\).) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Find the minimum element.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  You may assume no duplicate exists in the array.) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [3,4,5,1,2]) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: [4,5,6,7,0,1,2]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: 0) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Bold 7 7 SUF
35.4 346 M
(class) s
/F-gs-font 7 7 SF
56.4 346 M
( Solution {) s
18.6 338 M (23:) s
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( ) s
/Courier-Bold 7 7 SUF
73.2 338 M
(int) s
/F-gs-font 7 7 SF
85.8 338 M
( findMin\() s
/Courier-Bold 7 7 SUF
123.6 338 M
(int) s
/F-gs-font 7 7 SF
136.2 338 M
([] nums\) {) s
18.6 330 M (24:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(int) s
/F-gs-font 7 7 SF
64.8 330 M
( start = 0;) s
18.6 322 M (25:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
( end = nums.length - 1;) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(int) s
/F-gs-font 7 7 SF
64.8 314 M
( mid = 0;) s
18.6 306 M (27:) s
18.6 298 M (28:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(while) s
/F-gs-font 7 7 SF
73.2 298 M
(\(start <= end\) {) s
18.6 290 M (29:) s
35.4 290 M
(      mid = \(start + end\) / 2;) s
18.6 282 M (30:) s
18.6 274 M (31:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(if) s
/F-gs-font 7 7 SF
69 274 M
(\(nums[start] > nums[mid]\) {) s
18.6 266 M (32:) s
35.4 266 M
(        end = mid;) s
18.6 258 M (33:) s
35.4 258 M
(      } ) s
/Courier-Bold 7 7 SUF
69 258 M
(else) s
/F-gs-font 7 7 SF
85.8 258 M
( ) s
/Courier-Bold 7 7 SUF
90 258 M
(if) s
/F-gs-font 7 7 SF
98.4 258 M
(\(nums[start] > nums[end]\) {) s
18.6 250 M (34:) s
35.4 250 M
(        start = mid + 1;) s
18.6 242 M (35:) s
35.4 242 M
(      } ) s
/Courier-Bold 7 7 SUF
69 242 M
(else) s
/F-gs-font 7 7 SF
85.8 242 M
( {) s
18.6 234 M (36:) s
35.4 234 M
(        ) s
/Courier-Bold 7 7 SUF
69 234 M
(return) s
/F-gs-font 7 7 SF
94.2 234 M
( nums[start];) s
18.6 226 M (37:) s
35.4 226 M
(      }) s
18.6 218 M (38:) s
35.4 218 M
(    }) s
18.6 210 M (39:) s
18.6 202 M (40:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( nums[0];) s
18.6 194 M (41:) s
35.4 194 M
(  }) s
18.6 186 M (42:) s
35.4 186 M
(}) s
_R
S
%%Page: (1) 33
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ValidAnagram.java) def
/fdir (./general) def
/ftail (ValidAnagram.java) def
% User defined strings:
/fmodstr (Sun Dec 09 22:29:27 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ValidAnagram.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(  Runtime: 1 ms, faster than 100.00% of Java online submissions for Valid Anagram.) s
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 490 M
(        Given two strings s and t , write a function to determine if t is an anagram) s
5 482 M
( of s.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Input: s = "anagram", t = "nagaram") s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Input: s = "rat", t = "car") s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        You may assume the string contains only lowercase alphabets.) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( */) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
18.6 370 M (19:) s
/Courier-Bold 7 7 SUF
35.4 370 M
(class) s
/F-gs-font 7 7 SF
56.4 370 M
( ValidAnagram {) s
18.6 362 M (20:) s
35.4 362 M
(        ) s
/Courier-Bold 7 7 SUF
69 362 M
(public) s
/F-gs-font 7 7 SF
94.2 362 M
( ) s
/Courier-Bold 7 7 SUF
98.4 362 M
(static) s
/F-gs-font 7 7 SF
123.6 362 M
( ) s
/Courier-Bold 7 7 SUF
127.8 362 M
(void) s
/F-gs-font 7 7 SF
144.6 362 M
( main\(String[] args\) {) s
18.6 354 M (21:) s
35.4 354 M
(                isAnagram\() s
/Courier-Bold 7 7 SUF
144.6 354 M
("anagram") s
/F-gs-font 7 7 SF
182.4 354 M
(, ) s
/Courier-Bold 7 7 SUF
190.8 354 M
("nagaram") s
/F-gs-font 7 7 SF
228.6 354 M
(\);) s
18.6 346 M (22:) s
35.4 346 M
(        }) s
18.6 338 M (23:) s
18.6 330 M (24:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( ) s
/Courier-Bold 7 7 SUF
73.2 330 M
(static) s
/F-gs-font 7 7 SF
98.4 330 M
( ) s
/Courier-Bold 7 7 SUF
102.6 330 M
(boolean) s
/F-gs-font 7 7 SF
132 330 M
( isAnagram\(String s, String t\) {) s
18.6 322 M (25:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(if) s
/F-gs-font 7 7 SF
60.6 322 M
(\(s.length\(\) != t.length\(\)\) ) s
/Courier-Bold 7 7 SUF
174 322 M
(return) s
/F-gs-font 7 7 SF
199.2 322 M
( ) s
/Courier-Bold 7 7 SUF
203.4 322 M
(false) s
/F-gs-font 7 7 SF
224.4 322 M
(;) s
18.6 314 M (26:) s
18.6 306 M (27:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(int) s
/F-gs-font 7 7 SF
64.8 306 M
([] cache = ) s
/Courier-Bold 7 7 SUF
111 306 M
(new) s
/F-gs-font 7 7 SF
123.6 306 M
( ) s
/Courier-Bold 7 7 SUF
127.8 306 M
(int) s
/F-gs-font 7 7 SF
140.4 306 M
([26];) s
18.6 298 M (28:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(char) s
/F-gs-font 7 7 SF
85.8 298 M
( c : s.toCharArray\(\)\) cache[c - ) s
/Courier-Bold 7 7 SUF
220.2 298 M
('a') s
/F-gs-font 7 7 SF
232.8 298 M
(]++;) s
18.6 290 M (29:) s
18.6 282 M (30:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(for) s
/F-gs-font 7 7 SF
64.8 282 M
(\() s
/Courier-Bold 7 7 SUF
69 282 M
(char) s
/F-gs-font 7 7 SF
85.8 282 M
( c : t.toCharArray\(\)\) {) s
18.6 274 M (31:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(if) s
/F-gs-font 7 7 SF
69 274 M
(\(cache[c - ) s
/Courier-Bold 7 7 SUF
115.2 274 M
('a') s
/F-gs-font 7 7 SF
127.8 274 M
(] == 0\) ) s
/Courier-Bold 7 7 SUF
161.4 274 M
(return) s
/F-gs-font 7 7 SF
186.6 274 M
( ) s
/Courier-Bold 7 7 SUF
190.8 274 M
(false) s
/F-gs-font 7 7 SF
211.8 274 M
(;) s
18.6 266 M (32:) s
35.4 266 M
(      cache[c - ) s
/Courier-Bold 7 7 SUF
102.6 266 M
('a') s
/F-gs-font 7 7 SF
115.2 266 M
(]--;) s
18.6 258 M (33:) s
35.4 258 M
(    }) s
18.6 250 M (34:) s
18.6 242 M (35:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(return) s
/F-gs-font 7 7 SF
77.4 242 M
( ) s
/Courier-Bold 7 7 SUF
81.6 242 M
(true) s
/F-gs-font 7 7 SF
98.4 242 M
(;) s
18.6 234 M (36:) s
35.4 234 M
(  }) s
18.6 226 M (37:) s
35.4 226 M
(}) s
_R
S
%%Page: (1) 34
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ValidPalindrome.java) def
/fdir (./general) def
/ftail (ValidPalindrome.java) def
% User defined strings:
/fmodstr (Sun Dec 09 21:34:36 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ValidPalindrome.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 6 ms, faster than 72.49% of Java online submissions for Valid Palin) s
5 498 M
(drome.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a string, determine if it is a palindrome, considering only alphanumer) s
5 474 M
(ic characters and ignoring cases.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Note: For the purpose of this problem, we define empty string as valid palin) s
5 450 M
(drome.) s
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Input: "A man, a plan, a canal: Panama") s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Input: "race a car") s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
18.6 354 M (19:) s
/Courier-Bold 7 7 SUF
35.4 354 M
(class) s
/F-gs-font 7 7 SF
56.4 354 M
( ValidPalindrome {) s
18.6 346 M (20:) s
35.4 346 M
(        ) s
/Courier-Bold 7 7 SUF
69 346 M
(public) s
/F-gs-font 7 7 SF
94.2 346 M
( ) s
/Courier-Bold 7 7 SUF
98.4 346 M
(static) s
/F-gs-font 7 7 SF
123.6 346 M
( ) s
/Courier-Bold 7 7 SUF
127.8 346 M
(void) s
/F-gs-font 7 7 SF
144.6 346 M
( main\(String[] args\) {) s
18.6 338 M (21:) s
35.4 338 M
(                isPalindrome\() s
/Courier-Bold 7 7 SUF
157.2 338 M
("Hello.. % %% oLLeH") s
/F-gs-font 7 7 SF
241.2 338 M
(\);) s
18.6 330 M (22:) s
35.4 330 M
(        }) s
18.6 322 M (23:) s
18.6 314 M (24:) s
35.4 314 M
(        ) s
/Courier-Oblique 7 7 SUF
69 314 M
(// using Regex to get only alphanumeric characters) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(        ) s
/Courier-Oblique 7 7 SUF
69 306 M
(// cleaner but at the cost of performance) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(static) s
/F-gs-font 7 7 SF
98.4 298 M
( ) s
/Courier-Bold 7 7 SUF
102.6 298 M
(boolean) s
/F-gs-font 7 7 SF
132 298 M
( isPalindrome\(String s\) {) s
18.6 290 M (27:) s
35.4 290 M
(    String str = s.replaceAll\() s
/Courier-Bold 7 7 SUF
161.4 290 M
("[^\\\\w\\\\d]") s
/F-gs-font 7 7 SF
207.6 290 M
(, ) s
/Courier-Bold 7 7 SUF
216 290 M
("") s
/F-gs-font 7 7 SF
224.4 290 M
(\).toLowerCase\(\);) s
18.6 282 M (28:) s
18.6 274 M (29:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = 0; i < str.length\(\)/2; i++\)) s
18.6 266 M (30:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(if) s
/F-gs-font 7 7 SF
69 266 M
(\(str.charAt\(i\) != str.charAt\(str.length\(\)-1-i\)\)) s
18.6 258 M (31:) s
35.4 258 M
(        ) s
/Courier-Bold 7 7 SUF
69 258 M
(return) s
/F-gs-font 7 7 SF
94.2 258 M
( ) s
/Courier-Bold 7 7 SUF
98.4 258 M
(false) s
/F-gs-font 7 7 SF
119.4 258 M
(;) s
18.6 250 M (32:) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(return) s
/F-gs-font 7 7 SF
77.4 242 M
( ) s
/Courier-Bold 7 7 SUF
81.6 242 M
(true) s
/F-gs-font 7 7 SF
98.4 242 M
(;) s
18.6 234 M (34:) s
35.4 234 M
(  }) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(        ) s
/Courier-Oblique 7 7 SUF
69 218 M
(// looping through as we go and checking valid characters only) s
/F-gs-font 7 7 SF
18.6 210 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 210 M
(        ) s
/Courier-Oblique 7 7 SUF
69 210 M
(// have 2 loops from the back and from the front) s
/F-gs-font 7 7 SF
18.6 202 M (38:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 202 M
(public) s
/F-gs-font 7 7 SF
69 202 M
( ) s
/Courier-Bold 7 7 SUF
73.2 202 M
(static) s
/F-gs-font 7 7 SF
98.4 202 M
( ) s
/Courier-Bold 7 7 SUF
102.6 202 M
(boolean) s
/F-gs-font 7 7 SF
132 202 M
( isPalindrome2\(String s\) {) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( length = s.length\(\);) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
( left_idx = 0;) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(int) s
/F-gs-font 7 7 SF
64.8 178 M
( right_idx = length - 1;) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(while) s
/F-gs-font 7 7 SF
73.2 162 M
(\(left_idx < right_idx\) {) s
18.6 154 M (44:) s
35.4 154 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 154 M
(while) s
/F-gs-font 7 7 SF
81.6 154 M
(\(left_idx < length && !isAlphanumeric\(s.charAt\(left_idx\)\)\) left_idx++;) s
18.6 146 M (45:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(if) s
/F-gs-font 7 7 SF
69 146 M
(\(left_idx >= length\) ) s
/Courier-Bold 7 7 SUF
157.2 146 M
(return) s
/F-gs-font 7 7 SF
182.4 146 M
( ) s
/Courier-Bold 7 7 SUF
186.6 146 M
(true) s
/F-gs-font 7 7 SF
203.4 146 M
(;) s
18.6 138 M (46:) s
18.6 130 M (47:) s
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
(while) s
/F-gs-font 7 7 SF
81.6 130 M
(\(right_idx >= 0 && !isAlphanumeric\(s.charAt\(right_idx\)\)\) right_idx--;) s
18.6 122 M (48:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(if) s
/F-gs-font 7 7 SF
69 122 M
(\(right_idx <= 0\) ) s
/Courier-Bold 7 7 SUF
140.4 122 M
(return) s
/F-gs-font 7 7 SF
165.6 122 M
( ) s
/Courier-Bold 7 7 SUF
169.8 122 M
(true) s
/F-gs-font 7 7 SF
186.6 122 M
(;) s
18.6 114 M (49:) s
18.6 106 M (50:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(if) s
/F-gs-font 7 7 SF
69 106 M
(\(left_idx > right_idx\) ) s
/Courier-Bold 7 7 SUF
165.6 106 M
(return) s
/F-gs-font 7 7 SF
190.8 106 M
( ) s
/Courier-Bold 7 7 SUF
195 106 M
(true) s
/F-gs-font 7 7 SF
211.8 106 M
(;) s
18.6 98 M (51:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(if) s
/F-gs-font 7 7 SF
69 98 M
(\(!isEqual\(s.charAt\(left_idx\), s.charAt\(right_idx\)\)\) ) s
/Courier-Bold 7 7 SUF
287.4 98 M
(return) s
/F-gs-font 7 7 SF
312.6 98 M
( ) s
/Courier-Bold 7 7 SUF
316.8 98 M
(false) s
/F-gs-font 7 7 SF
337.8 98 M
(;) s
18.6 90 M (52:) s
18.6 82 M (53:) s
35.4 82 M
(      left_idx++;) s
18.6 74 M (54:) s
35.4 74 M
(      right_idx--;) s
18.6 66 M (55:) s
35.4 66 M
(    }) s
18.6 58 M (56:) s
18.6 50 M (57:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(return) s
/F-gs-font 7 7 SF
77.4 50 M
( ) s
/Courier-Bold 7 7 SUF
81.6 50 M
(true) s
/F-gs-font 7 7 SF
98.4 50 M
(;) s
18.6 42 M (58:) s
35.4 42 M
(  }) s
18.6 34 M (59:) s
18.6 26 M (60:) s
35.4 26 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 26 M
(public) s
/F-gs-font 7 7 SF
69 26 M
( ) s
/Courier-Bold 7 7 SUF
73.2 26 M
(static) s
/F-gs-font 7 7 SF
98.4 26 M
( ) s
/Courier-Bold 7 7 SUF
102.6 26 M
(boolean) s
/F-gs-font 7 7 SF
132 26 M
( isAlphanumeric\() s
/Courier-Bold 7 7 SUF
199.2 26 M
(char) s
/F-gs-font 7 7 SF
216 26 M
( c\) {) s
18.6 18 M (61:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(return) s
/F-gs-font 7 7 SF
77.4 18 M
( Character.isDigit\(c\) || Character.isLetter\(c\);) s
18.6 10 M (62:) s
35.4 10 M
(  }) s
18.6 2 M (63:) s
415.6 522 M (64:) s
432.4 522 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 522 M
(public) s
/F-gs-font 7 7 SF
466 522 M
( ) s
/Courier-Bold 7 7 SUF
470.2 522 M
(static) s
/F-gs-font 7 7 SF
495.4 522 M
( ) s
/Courier-Bold 7 7 SUF
499.6 522 M
(boolean) s
/F-gs-font 7 7 SF
529 522 M
( isEqual\() s
/Courier-Bold 7 7 SUF
566.8 522 M
(char) s
/F-gs-font 7 7 SF
583.6 522 M
( c1, ) s
/Courier-Bold 7 7 SUF
604.6 522 M
(char) s
/F-gs-font 7 7 SF
621.4 522 M
( c2\) {) s
415.6 514 M (65:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(return) s
/F-gs-font 7 7 SF
474.4 514 M
( Character.toLowerCase\(c1\) == Character.toLowerCase\(c2\);) s
415.6 506 M (66:) s
432.4 506 M
(  }) s
415.6 498 M (67:) s
432.4 498 M
(}) s
_R
S
%%Page: (1) 35
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/NonDecreasingArray.java) def
/fdir (./general) def
/ftail (NonDecreasingArray.java) def
% User defined strings:
/fmodstr (Fri Dec 21 00:42:08 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (NonDecreasingArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array with n integers, your task is to check if it could become non-decre) s
5 490 M
(asing by modifying at most 1 element.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  We define an array is non-decreasing if array[i] <= array[i + 1] holds for every i) s
5 466 M
( \(1 <= i < n\).) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: [4,2,3]) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: True) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Explanation: You could modify the first 4 to 1 to get a non-decreasing array.) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [4,2,1]) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: False) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Explanation: You can't get a non-decreasing array by modify at most one element.) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( */) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
18.6 370 M (18:) s
/Courier-Bold 7 7 SUF
35.4 370 M
(class) s
/F-gs-font 7 7 SF
56.4 370 M
( NonDecreasingArray {) s
18.6 362 M (19:) s
35.4 362 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 362 M
(public) s
/F-gs-font 7 7 SF
69 362 M
( ) s
/Courier-Bold 7 7 SUF
73.2 362 M
(boolean) s
/F-gs-font 7 7 SF
102.6 362 M
( checkPossibility\() s
/Courier-Bold 7 7 SUF
178.2 362 M
(int) s
/F-gs-font 7 7 SF
190.8 362 M
([] nums\) {) s
18.6 354 M (20:) s
35.4 354 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 354 M
(boolean) s
/F-gs-font 7 7 SF
81.6 354 M
( found = ) s
/Courier-Bold 7 7 SUF
119.4 354 M
(false) s
/F-gs-font 7 7 SF
140.4 354 M
(;) s
18.6 346 M (21:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(int) s
/F-gs-font 7 7 SF
64.8 346 M
( prevMax = Integer.MIN_VALUE;) s
18.6 338 M (22:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(int) s
/F-gs-font 7 7 SF
64.8 338 M
( max = nums[0];) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(for) s
/F-gs-font 7 7 SF
64.8 322 M
(\() s
/Courier-Bold 7 7 SUF
69 322 M
(int) s
/F-gs-font 7 7 SF
81.6 322 M
( i = 1; i < nums.length; i++\) {) s
18.6 314 M (25:) s
35.4 314 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 314 M
(if) s
/F-gs-font 7 7 SF
69 314 M
(\(nums[i] < nums[i-1]\) {) s
18.6 306 M (26:) s
35.4 306 M
(        ) s
/Courier-Bold 7 7 SUF
69 306 M
(if) s
/F-gs-font 7 7 SF
77.4 306 M
(\(found\) ) s
/Courier-Bold 7 7 SUF
111 306 M
(return) s
/F-gs-font 7 7 SF
136.2 306 M
( ) s
/Courier-Bold 7 7 SUF
140.4 306 M
(false) s
/F-gs-font 7 7 SF
161.4 306 M
(;) s
18.6 298 M (27:) s
35.4 298 M
(        ) s
/Courier-Bold 7 7 SUF
69 298 M
(if) s
/F-gs-font 7 7 SF
77.4 298 M
(\(nums[i] < prevMax\) nums[i] = nums[i-1];) s
18.6 290 M (28:) s
18.6 282 M (29:) s
35.4 282 M
(        found = ) s
/Courier-Bold 7 7 SUF
102.6 282 M
(true) s
/F-gs-font 7 7 SF
119.4 282 M
(;) s
18.6 274 M (30:) s
35.4 274 M
(      }) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(      prevMax = max;) s
18.6 250 M (33:) s
35.4 250 M
(      max = nums[i];) s
18.6 242 M (34:) s
35.4 242 M
(    }) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( ) s
/Courier-Bold 7 7 SUF
81.6 226 M
(true) s
/F-gs-font 7 7 SF
98.4 226 M
(;) s
18.6 218 M (37:) s
35.4 218 M
(  }) s
18.6 210 M (38:) s
35.4 210 M
(}) s
_R
S
%%Page: (1) 36
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/MoveZeroes.java) def
/fdir (./general) def
/ftail (MoveZeroes.java) def
% User defined strings:
/fmodstr (Wed Dec 12 23:27:34 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MoveZeroes.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Given an array nums, write a function to move all 0's to the end of it while) s
5 490 M
( maintaining the relative order of the non-zero elements.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(        Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Input: [0,1,0,3,12]) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Output: [1,3,12,0,0]) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        You must do this in-place without making a copy of the array.) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Minimize the total number of operations.) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
( */) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
18.6 394 M (16:) s
/Courier-Bold 7 7 SUF
35.4 394 M
(class) s
/F-gs-font 7 7 SF
56.4 394 M
( MoveZeroes {) s
18.6 386 M (17:) s
35.4 386 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 386 M
(public) s
/F-gs-font 7 7 SF
69 386 M
( ) s
/Courier-Bold 7 7 SUF
73.2 386 M
(void) s
/F-gs-font 7 7 SF
90 386 M
( moveZeroes\() s
/Courier-Bold 7 7 SUF
140.4 386 M
(int) s
/F-gs-font 7 7 SF
153 386 M
([] nums\) {) s
18.6 378 M (18:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(int) s
/F-gs-font 7 7 SF
64.8 378 M
( count = 0;) s
18.6 370 M (19:) s
35.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 370 M
(for) s
/F-gs-font 7 7 SF
64.8 370 M
(\() s
/Courier-Bold 7 7 SUF
69 370 M
(int) s
/F-gs-font 7 7 SF
81.6 370 M
( i = 0; i < nums.length; i++\) {) s
18.6 362 M (20:) s
35.4 362 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 362 M
(if) s
/F-gs-font 7 7 SF
69 362 M
(\(nums[i] != 0\) {) s
18.6 354 M (21:) s
35.4 354 M
(        nums[count] = nums[i];) s
18.6 346 M (22:) s
35.4 346 M
(        count++;) s
18.6 338 M (23:) s
35.4 338 M
(      }) s
18.6 330 M (24:) s
35.4 330 M
(    }) s
18.6 322 M (25:) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\() s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( i = count; i < nums.length; i++\) nums[i] = 0;) s
18.6 306 M (27:) s
35.4 306 M
(  }) s
18.6 298 M (28:) s
35.4 298 M
(}) s
_R
S
%%Page: (1) 37
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/SubarraySumEqualsToX.java) def
/fdir (./general) def
/ftail (SubarraySumEqualsToX.java) def
% User defined strings:
/fmodstr (Sun Apr 07 22:19:32 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SubarraySumEqualsToX.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of integers and an integer k, you need to find the total number of ) s
5 490 M
(continuous subarrays whose sum equals to k.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input:nums = [1,1,1], k = 2) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Output: 2) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  The length of the array is in range [1, 20,000].) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
( */) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
18.6 418 M (13:) s
/Courier-Bold 7 7 SUF
35.4 418 M
(class) s
/F-gs-font 7 7 SF
56.4 418 M
( Solution {) s
18.6 410 M (14:) s
35.4 410 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 410 M
(// 1 : brute force) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 402 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 402 M
(public) s
/F-gs-font 7 7 SF
69 402 M
( ) s
/Courier-Bold 7 7 SUF
73.2 402 M
(int) s
/F-gs-font 7 7 SF
85.8 402 M
( subarraySum\() s
/Courier-Bold 7 7 SUF
140.4 402 M
(int) s
/F-gs-font 7 7 SF
153 402 M
([] nums, ) s
/Courier-Bold 7 7 SUF
190.8 402 M
(int) s
/F-gs-font 7 7 SF
203.4 402 M
( k\) {) s
18.6 394 M (16:) s
35.4 394 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 394 M
(int) s
/F-gs-font 7 7 SF
64.8 394 M
( count = 0;) s
18.6 386 M (17:) s
18.6 378 M (18:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(for) s
/F-gs-font 7 7 SF
64.8 378 M
(\() s
/Courier-Bold 7 7 SUF
69 378 M
(int) s
/F-gs-font 7 7 SF
81.6 378 M
( start = 0; start < nums.length; start++\) {) s
18.6 370 M (19:) s
35.4 370 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 370 M
(int) s
/F-gs-font 7 7 SF
73.2 370 M
( sum = 0;) s
18.6 362 M (20:) s
35.4 362 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 362 M
(for) s
/F-gs-font 7 7 SF
73.2 362 M
(\() s
/Courier-Bold 7 7 SUF
77.4 362 M
(int) s
/F-gs-font 7 7 SF
90 362 M
( end = start; end < nums.length; end++\) {) s
18.6 354 M (21:) s
35.4 354 M
(        sum += nums[end];) s
18.6 346 M (22:) s
35.4 346 M
(        ) s
/Courier-Bold 7 7 SUF
69 346 M
(if) s
/F-gs-font 7 7 SF
77.4 346 M
(\(sum == k\) count++;) s
18.6 338 M (23:) s
35.4 338 M
(      }) s
18.6 330 M (24:) s
35.4 330 M
(    }) s
18.6 322 M (25:) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(return) s
/F-gs-font 7 7 SF
77.4 314 M
( count;) s
18.6 306 M (27:) s
35.4 306 M
(  }) s
18.6 298 M (28:) s
18.6 290 M (29:) s
35.4 290 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 290 M
(// 2 : cumulative sum, when sum[i] - sum[j] = k then sum\(i to j\) = k) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(public) s
/F-gs-font 7 7 SF
69 282 M
( ) s
/Courier-Bold 7 7 SUF
73.2 282 M
(int) s
/F-gs-font 7 7 SF
85.8 282 M
( subarraySum\() s
/Courier-Bold 7 7 SUF
140.4 282 M
(int) s
/F-gs-font 7 7 SF
153 282 M
([] nums, ) s
/Courier-Bold 7 7 SUF
190.8 282 M
(int) s
/F-gs-font 7 7 SF
203.4 282 M
( k\) {) s
18.6 274 M (31:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
( count = 0;) s
18.6 266 M (32:) s
18.6 258 M (33:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(int) s
/F-gs-font 7 7 SF
64.8 258 M
([] sum = ) s
/Courier-Bold 7 7 SUF
102.6 258 M
(new) s
/F-gs-font 7 7 SF
115.2 258 M
( ) s
/Courier-Bold 7 7 SUF
119.4 258 M
(int) s
/F-gs-font 7 7 SF
132 258 M
([nums.length + 1];) s
18.6 250 M (34:) s
35.4 250 M
(    sum[0] = 0;) s
18.6 242 M (35:) s
18.6 234 M (36:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(for) s
/F-gs-font 7 7 SF
64.8 234 M
(\() s
/Courier-Bold 7 7 SUF
69 234 M
(int) s
/F-gs-font 7 7 SF
81.6 234 M
( i = 1; i <= nums.length; i++\)) s
18.6 226 M (37:) s
35.4 226 M
(      sum[i] = sum[i - 1] + nums[i - 1];) s
18.6 218 M (38:) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( start = 0; start < nums.length; start++\) {) s
18.6 202 M (40:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(for) s
/F-gs-font 7 7 SF
73.2 202 M
(\() s
/Courier-Bold 7 7 SUF
77.4 202 M
(int) s
/F-gs-font 7 7 SF
90 202 M
( end = start + 1; end <= nums.length; end++\) {) s
18.6 194 M (41:) s
35.4 194 M
(        ) s
/Courier-Bold 7 7 SUF
69 194 M
(if) s
/F-gs-font 7 7 SF
77.4 194 M
(\(sum[end] - sum[start] == k\)) s
18.6 186 M (42:) s
35.4 186 M
(          count++;) s
18.6 178 M (43:) s
35.4 178 M
(      }) s
18.6 170 M (44:) s
35.4 170 M
(    }) s
18.6 162 M (45:) s
18.6 154 M (46:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(return) s
/F-gs-font 7 7 SF
77.4 154 M
( count;) s
18.6 146 M (47:) s
35.4 146 M
(  }) s
18.6 138 M (48:) s
18.6 130 M (49:) s
35.4 130 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 130 M
(// 3: hashmap and cumulative sum) s
/F-gs-font 7 7 SF
18.6 122 M (50:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 122 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 122 M
(//    idea: sum[i] - sum[j] = k, cumulative sum between 2 indices is k) s
/F-gs-font 7 7 SF
18.6 114 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 114 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 114 M
(//          when their difference is k) s
/F-gs-font 7 7 SF
18.6 106 M (52:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 106 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 106 M
(public) s
/F-gs-font 7 7 SF
69 106 M
( ) s
/Courier-Bold 7 7 SUF
73.2 106 M
(int) s
/F-gs-font 7 7 SF
85.8 106 M
( subarraySum\() s
/Courier-Bold 7 7 SUF
140.4 106 M
(int) s
/F-gs-font 7 7 SF
153 106 M
([] nums, ) s
/Courier-Bold 7 7 SUF
190.8 106 M
(int) s
/F-gs-font 7 7 SF
203.4 106 M
( k\) {) s
18.6 98 M (53:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(int) s
/F-gs-font 7 7 SF
64.8 98 M
( count = 0;) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(int) s
/F-gs-font 7 7 SF
64.8 90 M
( sum = 0;) s
18.6 82 M (55:) s
18.6 74 M (56:) s
35.4 74 M
(    HashMap<Integer, Integer> map = ) s
/Courier-Bold 7 7 SUF
186.6 74 M
(new) s
/F-gs-font 7 7 SF
199.2 74 M
( HashMap<>\(\);) s
18.6 66 M (57:) s
35.4 66 M
(    map.put\(0, 1\);) s
18.6 58 M (58:) s
18.6 50 M (59:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(for) s
/F-gs-font 7 7 SF
64.8 50 M
(\() s
/Courier-Bold 7 7 SUF
69 50 M
(int) s
/F-gs-font 7 7 SF
81.6 50 M
( i = 0; i < nums.length; i++\) {) s
18.6 42 M (60:) s
35.4 42 M
(      sum += nums[i];) s
18.6 34 M (61:) s
18.6 26 M (62:) s
35.4 26 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 26 M
(if) s
/F-gs-font 7 7 SF
69 26 M
(\(map.containsKey\(sum - k\)\)) s
18.6 18 M (63:) s
35.4 18 M
(        count += map.get\(sum - k\);) s
18.6 10 M (64:) s
18.6 2 M (65:) s
35.4 2 M
(      map.put\(sum, map.getOrDefault\(sum, 0\) + 1\);) s
415.6 522 M (66:) s
432.4 522 M
(    }) s
415.6 514 M (67:) s
415.6 506 M (68:) s
432.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 506 M
(return) s
/F-gs-font 7 7 SF
474.4 506 M
( count;) s
415.6 498 M (69:) s
432.4 498 M
(  }) s
415.6 490 M (70:) s
432.4 490 M
(}) s
_R
S
%%Page: (1) 38
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/NextGreaterElement.java) def
/fdir (./general) def
/ftail (NextGreaterElement.java) def
% User defined strings:
/fmodstr (Fri Jan 18 14:47:20 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (NextGreaterElement.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given two arrays \(without duplicates\) nums1 and nums2 where nums1\342\\200\\231) s
5 490 M
(s elements are subset of nums2. Find all the next greater numbers for nums1's elements in th) s
5 482 M
(e corresponding places of nums2.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(The Next Greater Number of a number x in nums1 is the first greater number to its ri) s
5 458 M
(ght in nums2. If it does not exist, output -1 for this number.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(Example 1:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(Input: nums1 = [4,1,2], nums2 = [1,3,4,2].) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(Output: [-1,3,-1]) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(Explanation:) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(    For number 4 in the first array, you cannot find the next greater number for it ) s
5 402 M
(in the second array, so output -1.) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(    For number 1 in the first array, the next greater number for it in the second ar) s
5 386 M
(ray is 3.) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(    For number 2 in the first array, there is no next greater number for it in the s) s
5 370 M
(econd array, so output -1.) s
/F-gs-font 7 7 SF
18.6 362 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(Input: nums1 = [2,4], nums2 = [1,2,3,4].) s
/F-gs-font 7 7 SF
18.6 346 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(Output: [3,-1]) s
/F-gs-font 7 7 SF
18.6 338 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(Explanation:) s
/F-gs-font 7 7 SF
18.6 330 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(    For number 2 in the first array, the next greater number for it in the second ar) s
5 322 M
(ray is 3.) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(    For number 4 in the first array, there is no next greater number for it in the s) s
5 306 M
(econd array, so output -1.) s
/F-gs-font 7 7 SF
18.6 298 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(Note:) s
/F-gs-font 7 7 SF
18.6 290 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(All elements in nums1 and nums2 are unique.) s
/F-gs-font 7 7 SF
18.6 282 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(The length of both nums1 and nums2 would not exceed 1000.) s
/F-gs-font 7 7 SF
18.6 274 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( */) s
/F-gs-font 7 7 SF
18.6 266 M (25:) s
18.6 258 M (26:) s
/Courier-Bold 7 7 SUF
35.4 258 M
(class) s
/F-gs-font 7 7 SF
56.4 258 M
( Solution {) s
18.6 250 M (27:) s
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ) s
/Courier-Bold 7 7 SUF
73.2 250 M
(int) s
/F-gs-font 7 7 SF
85.8 250 M
([] nextGreaterElement\() s
/Courier-Bold 7 7 SUF
178.2 250 M
(int) s
/F-gs-font 7 7 SF
190.8 250 M
([] nums1, ) s
/Courier-Bold 7 7 SUF
232.8 250 M
(int) s
/F-gs-font 7 7 SF
245.4 250 M
([] nums2\) {) s
18.6 242 M (28:) s
35.4 242 M
(    HashMap<Integer, Integer> map = ) s
/Courier-Bold 7 7 SUF
186.6 242 M
(new) s
/F-gs-font 7 7 SF
199.2 242 M
( HashMap<>\(\);) s
18.6 234 M (29:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(for) s
/F-gs-font 7 7 SF
64.8 234 M
(\() s
/Courier-Bold 7 7 SUF
69 234 M
(int) s
/F-gs-font 7 7 SF
81.6 234 M
( i = 0; i < nums2.length; i++\) map.put\(nums2[i], i\);) s
18.6 226 M (30:) s
18.6 218 M (31:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
( j = 0;) s
18.6 210 M (32:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( i = 0; i < nums1.length; i++\) {) s
18.6 202 M (33:) s
35.4 202 M
(      j = map.get\(nums1[i]\);) s
18.6 194 M (34:) s
35.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 194 M
(while) s
/F-gs-font 7 7 SF
81.6 194 M
(\(j < nums2.length && nums2[j] <= nums1[i]\) j++;) s
18.6 186 M (35:) s
35.4 186 M
(      nums1[i] = j >= nums2.length ? -1 : nums2[j];) s
18.6 178 M (36:) s
35.4 178 M
(    }) s
18.6 170 M (37:) s
18.6 162 M (38:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(return) s
/F-gs-font 7 7 SF
77.4 162 M
( nums1;) s
18.6 154 M (39:) s
35.4 154 M
(  }) s
18.6 146 M (40:) s
35.4 146 M
(}) s
_R
S
%%Page: (1) 39
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/RandomizedSet.java) def
/fdir (./general) def
/ftail (RandomizedSet.java) def
% User defined strings:
/fmodstr (Fri Mar 08 01:04:13 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RandomizedSet.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Design a data structure that supports all following operations in average O\(1\) tim) s
5 490 M
(e.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  insert\(val\): Inserts an item val to the set if not already present.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  remove\(val\): Removes an item val from the set if present.) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  getRandom: Returns a random element from current set of elements. Each element mus) s
5 450 M
(t have the same probability of being returned.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  // Init an empty set.) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  RandomizedSet randomSet = new RandomizedSet\(\);) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  // Inserts 1 to the set. Returns true as 1 was inserted successfully.) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  randomSet.insert\(1\);) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  // Returns false as 2 does not exist in the set.) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  randomSet.remove\(2\);) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  // Inserts 2 to the set, returns true. Set now contains [1,2].) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  randomSet.insert\(2\);) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  // getRandom should return either 1 or 2 randomly.) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  randomSet.getRandom\(\);) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  // Removes 1 from the set, returns true. Set now contains [2].) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  randomSet.remove\(1\);) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  // 2 was already in the set, so return false.) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  randomSet.insert\(2\);) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  // Since 2 is the only number in the set, getRandom always return 2.) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  randomSet.getRandom\(\);) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(*/) s
/F-gs-font 7 7 SF
18.6 234 M (35:) s
18.6 226 M (36:) s
/Courier-Bold 7 7 SUF
35.4 226 M
(class) s
/F-gs-font 7 7 SF
56.4 226 M
( RandomizedSet {) s
18.6 218 M (37:) s
35.4 218 M
(  HashMap<Integer, Integer> map;) s
18.6 210 M (38:) s
35.4 210 M
(  ArrayList<Integer> arr;) s
18.6 202 M (39:) s
35.4 202 M
(  Random random;) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 186 M
(/** Initialize your data structure here. */) s
/F-gs-font 7 7 SF
18.6 178 M (42:) s
35.4 178 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 178 M
(public) s
/F-gs-font 7 7 SF
69 178 M
( RandomizedSet\(\) {) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(this) s
/F-gs-font 7 7 SF
69 170 M
(.map = ) s
/Courier-Bold 7 7 SUF
98.4 170 M
(new) s
/F-gs-font 7 7 SF
111 170 M
( HashMap<>\(\);) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(this) s
/F-gs-font 7 7 SF
69 162 M
(.arr = ) s
/Courier-Bold 7 7 SUF
98.4 162 M
(new) s
/F-gs-font 7 7 SF
111 162 M
( ArrayList<>\(\);) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(this) s
/F-gs-font 7 7 SF
69 154 M
(.random = ) s
/Courier-Bold 7 7 SUF
111 154 M
(new) s
/F-gs-font 7 7 SF
123.6 154 M
( Random\(\);) s
18.6 146 M (46:) s
35.4 146 M
(  }) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 130 M
(/** Inserts a value to the set. Returns true if the set did not already contain th) s
5 122 M
(e specified element. */) s
/F-gs-font 7 7 SF
18.6 114 M (49:) s
35.4 114 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 114 M
(public) s
/F-gs-font 7 7 SF
69 114 M
( ) s
/Courier-Bold 7 7 SUF
73.2 114 M
(boolean) s
/F-gs-font 7 7 SF
102.6 114 M
( insert\() s
/Courier-Bold 7 7 SUF
136.2 114 M
(int) s
/F-gs-font 7 7 SF
148.8 114 M
( val\) {) s
18.6 106 M (50:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(if) s
/F-gs-font 7 7 SF
60.6 106 M
(\() s
/Courier-Bold 7 7 SUF
64.8 106 M
(this) s
/F-gs-font 7 7 SF
81.6 106 M
(.map.containsKey\(val\)\) ) s
/Courier-Bold 7 7 SUF
178.2 106 M
(return) s
/F-gs-font 7 7 SF
203.4 106 M
( ) s
/Courier-Bold 7 7 SUF
207.6 106 M
(false) s
/F-gs-font 7 7 SF
228.6 106 M
(;) s
18.6 98 M (51:) s
18.6 90 M (52:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(this) s
/F-gs-font 7 7 SF
69 90 M
(.map.put\(val, ) s
/Courier-Bold 7 7 SUF
127.8 90 M
(this) s
/F-gs-font 7 7 SF
144.6 90 M
(.arr.size\(\)\);) s
18.6 82 M (53:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(this) s
/F-gs-font 7 7 SF
69 82 M
(.arr.add\(val\);) s
18.6 74 M (54:) s
18.6 66 M (55:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(return) s
/F-gs-font 7 7 SF
77.4 66 M
( ) s
/Courier-Bold 7 7 SUF
81.6 66 M
(true) s
/F-gs-font 7 7 SF
98.4 66 M
(;) s
18.6 58 M (56:) s
35.4 58 M
(  }) s
18.6 50 M (57:) s
18.6 42 M (58:) s
35.4 42 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 42 M
(/** Removes a value from the set. Returns true if the set contained the specified ) s
5 34 M
(element. */) s
/F-gs-font 7 7 SF
18.6 26 M (59:) s
35.4 26 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 26 M
(public) s
/F-gs-font 7 7 SF
69 26 M
( ) s
/Courier-Bold 7 7 SUF
73.2 26 M
(boolean) s
/F-gs-font 7 7 SF
102.6 26 M
( remove\() s
/Courier-Bold 7 7 SUF
136.2 26 M
(int) s
/F-gs-font 7 7 SF
148.8 26 M
( val\) {) s
18.6 18 M (60:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(if) s
/F-gs-font 7 7 SF
60.6 18 M
(\(!) s
/Courier-Bold 7 7 SUF
69 18 M
(this) s
/F-gs-font 7 7 SF
85.8 18 M
(.map.containsKey\(val\)\) ) s
/Courier-Bold 7 7 SUF
182.4 18 M
(return) s
/F-gs-font 7 7 SF
207.6 18 M
( ) s
/Courier-Bold 7 7 SUF
211.8 18 M
(false) s
/F-gs-font 7 7 SF
232.8 18 M
(;) s
18.6 10 M (61:) s
18.6 2 M (62:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(this) s
/F-gs-font 7 7 SF
69 2 M
(.arr.set\() s
/Courier-Bold 7 7 SUF
106.8 2 M
(this) s
/F-gs-font 7 7 SF
123.6 2 M
(.map.get\(val\), ) s
/Courier-Bold 7 7 SUF
186.6 2 M
(this) s
/F-gs-font 7 7 SF
203.4 2 M
(.arr.get\() s
/Courier-Bold 7 7 SUF
241.2 2 M
(this) s
/F-gs-font 7 7 SF
258 2 M
(.arr.size\(\) - 1\)\);) s
415.6 522 M (63:) s
432.4 522 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 522 M
(this) s
/F-gs-font 7 7 SF
466 522 M
(.map.put\() s
/Courier-Bold 7 7 SUF
503.8 522 M
(this) s
/F-gs-font 7 7 SF
520.6 522 M
(.arr.remove\() s
/Courier-Bold 7 7 SUF
571 522 M
(this) s
/F-gs-font 7 7 SF
587.8 522 M
(.arr.size\(\) - 1\), ) s
/Courier-Bold 7 7 SUF
663.4 522 M
(this) s
/F-gs-font 7 7 SF
680.2 522 M
(.map.get\(val\)\);) s
415.6 514 M (64:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(this) s
/F-gs-font 7 7 SF
466 514 M
(.map.remove\(val\);) s
415.6 506 M (65:) s
415.6 498 M (66:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(return) s
/F-gs-font 7 7 SF
474.4 498 M
( ) s
/Courier-Bold 7 7 SUF
478.6 498 M
(true) s
/F-gs-font 7 7 SF
495.4 498 M
(;) s
415.6 490 M (67:) s
432.4 490 M
(  }) s
415.6 482 M (68:) s
415.6 474 M (69:) s
432.4 474 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 474 M
(/** Get a random element from the set. */) s
/F-gs-font 7 7 SF
415.6 466 M (70:) s
432.4 466 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 466 M
(public) s
/F-gs-font 7 7 SF
466 466 M
( ) s
/Courier-Bold 7 7 SUF
470.2 466 M
(int) s
/F-gs-font 7 7 SF
482.8 466 M
( getRandom\(\) {) s
415.6 458 M (71:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(return) s
/F-gs-font 7 7 SF
474.4 458 M
( ) s
/Courier-Bold 7 7 SUF
478.6 458 M
(this) s
/F-gs-font 7 7 SF
495.4 458 M
(.arr.get\(random.nextInt\() s
/Courier-Bold 7 7 SUF
596.2 458 M
(this) s
/F-gs-font 7 7 SF
613 458 M
(.arr.size\(\)\)\);) s
415.6 450 M (72:) s
432.4 450 M
(  }) s
415.6 442 M (73:) s
432.4 442 M
(}) s
415.6 434 M (74:) s
415.6 426 M (75:) s
/Courier-Oblique 7 7 SUF
432.4 426 M
(/**) s
/F-gs-font 7 7 SF
415.6 418 M (76:) s
/Courier-Oblique 7 7 SUF
432.4 418 M
( * Your RandomizedSet object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
415.6 410 M (77:) s
/Courier-Oblique 7 7 SUF
432.4 410 M
( * RandomizedSet obj = new RandomizedSet\(\);) s
/F-gs-font 7 7 SF
415.6 402 M (78:) s
/Courier-Oblique 7 7 SUF
432.4 402 M
( * boolean param_1 = obj.insert\(val\);) s
/F-gs-font 7 7 SF
415.6 394 M (79:) s
/Courier-Oblique 7 7 SUF
432.4 394 M
( * boolean param_2 = obj.remove\(val\);) s
/F-gs-font 7 7 SF
415.6 386 M (80:) s
/Courier-Oblique 7 7 SUF
432.4 386 M
( * int param_3 = obj.getRandom\(\);) s
/F-gs-font 7 7 SF
415.6 378 M (81:) s
/Courier-Oblique 7 7 SUF
432.4 378 M
( */) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 40
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/FizzBuzz.java) def
/fdir (./general) def
/ftail (FizzBuzz.java) def
% User defined strings:
/fmodstr (Sun Dec 16 01:10:34 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FizzBuzz.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Write a program that outputs the string representation of numbers from 1 to n.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  But for multiples of three it should output \342\\200\\234Fizz\342\\200\\235 instead of the ) s
5 474 M
(number and for the multiples of five output \342\\200\\234Buzz\342\\200\\235. For numbers which are mu) s
5 466 M
(ltiples of both three and five output \342\\200\\234FizzBuzz\342\\200\\235.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  n = 15,) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Return:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  "1",) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  "2",) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  "Fizz",) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  "4",) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  "Buzz",) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  "Fizz",) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  "7",) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  "8",) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  "Fizz",) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  "Buzz",) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  "11",) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  "Fizz",) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  "13",) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  "14",) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  "FizzBuzz") s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  ]) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( */) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
18.6 258 M (32:) s
/Courier-Bold 7 7 SUF
35.4 258 M
(class) s
/F-gs-font 7 7 SF
56.4 258 M
( FizzBuzz {) s
18.6 250 M (33:) s
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( List<String> fizzBuzz\() s
/Courier-Bold 7 7 SUF
165.6 250 M
(int) s
/F-gs-font 7 7 SF
178.2 250 M
( n\) {) s
18.6 242 M (34:) s
35.4 242 M
(    List<String> result = ) s
/Courier-Bold 7 7 SUF
144.6 242 M
(new) s
/F-gs-font 7 7 SF
157.2 242 M
( ArrayList<>\(\);) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(for) s
/F-gs-font 7 7 SF
64.8 226 M
(\() s
/Courier-Bold 7 7 SUF
69 226 M
(int) s
/F-gs-font 7 7 SF
81.6 226 M
( i = 1; i <= n; i++\) result.add\(Integer.toString\(i\)\);) s
18.6 218 M (37:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(for) s
/F-gs-font 7 7 SF
64.8 218 M
(\() s
/Courier-Bold 7 7 SUF
69 218 M
(int) s
/F-gs-font 7 7 SF
81.6 218 M
( i = 2; i < n; i += 3\) result.set\(i, ) s
/Courier-Bold 7 7 SUF
237 218 M
("Fizz") s
/F-gs-font 7 7 SF
262.2 218 M
(\);) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( i = 4; i < n; i += 5\) {) s
18.6 202 M (39:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(if) s
/F-gs-font 7 7 SF
69 202 M
(\(result.get\(i\).equals\() s
/Courier-Bold 7 7 SUF
161.4 202 M
("Fizz") s
/F-gs-font 7 7 SF
186.6 202 M
(\)\) result.set\(i, ) s
/Courier-Bold 7 7 SUF
258 202 M
("FizzBuzz") s
/F-gs-font 7 7 SF
300 202 M
(\);) s
18.6 194 M (40:) s
35.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 194 M
(else) s
/F-gs-font 7 7 SF
77.4 194 M
( result.set\(i, ) s
/Courier-Bold 7 7 SUF
140.4 194 M
("Buzz") s
/F-gs-font 7 7 SF
165.6 194 M
(\);) s
18.6 186 M (41:) s
35.4 186 M
(    }) s
18.6 178 M (42:) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(return) s
/F-gs-font 7 7 SF
77.4 170 M
( result;) s
18.6 162 M (44:) s
35.4 162 M
(  }) s
18.6 154 M (45:) s
18.6 146 M (46:) s
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( List<String> fizzBuzz2\() s
/Courier-Bold 7 7 SUF
169.8 146 M
(int) s
/F-gs-font 7 7 SF
182.4 146 M
( n\) {) s
18.6 138 M (47:) s
35.4 138 M
(    List<String> result = ) s
/Courier-Bold 7 7 SUF
144.6 138 M
(new) s
/F-gs-font 7 7 SF
157.2 138 M
( ArrayList<>\(\);) s
18.6 130 M (48:) s
18.6 122 M (49:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(for) s
/F-gs-font 7 7 SF
64.8 122 M
(\() s
/Courier-Bold 7 7 SUF
69 122 M
(int) s
/F-gs-font 7 7 SF
81.6 122 M
( i = 1; i <= n; i++\) {) s
18.6 114 M (50:) s
35.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 114 M
(if) s
/F-gs-font 7 7 SF
69 114 M
(\(i % 3 == 0 && i % 5 == 0\) result.add\() s
/Courier-Bold 7 7 SUF
228.6 114 M
("FizzBuzz") s
/F-gs-font 7 7 SF
270.6 114 M
(\);) s
18.6 106 M (51:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(else) s
/F-gs-font 7 7 SF
77.4 106 M
( ) s
/Courier-Bold 7 7 SUF
81.6 106 M
(if) s
/F-gs-font 7 7 SF
90 106 M
(\(i % 3 == 0\) result.add\() s
/Courier-Bold 7 7 SUF
190.8 106 M
("Fizz") s
/F-gs-font 7 7 SF
216 106 M
(\);) s
18.6 98 M (52:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(else) s
/F-gs-font 7 7 SF
77.4 98 M
( ) s
/Courier-Bold 7 7 SUF
81.6 98 M
(if) s
/F-gs-font 7 7 SF
90 98 M
(\(i % 5 == 0\) result.add\() s
/Courier-Bold 7 7 SUF
190.8 98 M
("Buzz") s
/F-gs-font 7 7 SF
216 98 M
(\);) s
18.6 90 M (53:) s
35.4 90 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 90 M
(else) s
/F-gs-font 7 7 SF
77.4 90 M
( result.add\() s
/Courier-Bold 7 7 SUF
127.8 90 M
("") s
/F-gs-font 7 7 SF
136.2 90 M
( + i\);) s
18.6 82 M (54:) s
35.4 82 M
(    }) s
18.6 74 M (55:) s
18.6 66 M (56:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(return) s
/F-gs-font 7 7 SF
77.4 66 M
( result;) s
18.6 58 M (57:) s
35.4 58 M
(  }) s
18.6 50 M (58:) s
35.4 50 M
(}) s
_R
S
%%Page: (1) 41
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/MaxProfit2.java) def
/fdir (./general) def
/ftail (MaxProfit2.java) def
% User defined strings:
/fmodstr (Sun Dec 16 23:16:16 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaxProfit2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Say you have an array for which the ith element is the price of a given stock on d) s
5 490 M
(ay i.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Design an algorithm to find the maximum profit. You may complete as many transacti) s
5 466 M
(ons as you like \(i.e., buy one and sell one share of the stock multiple times\).) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Note: You may not engage in multiple transactions at the same time \(i.e., you must) s
5 442 M
( sell the stock before you buy again\).) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [7,1,5,3,6,4]) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: 7) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Explanation: Buy on day 2 \(price = 1\) and sell on day 3 \(price = 5\), profit = 5-1 ) s
5 386 M
(= 4.) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Then buy on day 4 \(price = 3\) and sell on day 5 \(price = 6\), profit = 6-3 = 3.) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: [1,2,3,4,5]) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation: Buy on day 1 \(price = 1\) and sell on day 5 \(price = 5\), profit = 5-1 ) s
5 330 M
(= 4.) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are) s
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  engaging multiple transactions at the same time. You must sell before buying again) s
5 306 M
(.) s
/F-gs-font 7 7 SF
18.6 298 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 290 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Input: [7,6,4,3,1]) s
/F-gs-font 7 7 SF
18.6 274 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Output: 0) s
/F-gs-font 7 7 SF
18.6 266 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Explanation: In this case, no transaction is done, i.e. max profit = 0.) s
/F-gs-font 7 7 SF
18.6 258 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( */) s
/F-gs-font 7 7 SF
18.6 250 M (29:) s
18.6 242 M (30:) s
/Courier-Bold 7 7 SUF
35.4 242 M
(class) s
/F-gs-font 7 7 SF
56.4 242 M
( MaxProfit2 {) s
18.6 234 M (31:) s
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(int) s
/F-gs-font 7 7 SF
85.8 234 M
( maxProfit\() s
/Courier-Bold 7 7 SUF
132 234 M
(int) s
/F-gs-font 7 7 SF
144.6 234 M
([] prices\) {) s
18.6 226 M (32:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(prices.length == 0\) ) s
/Courier-Bold 7 7 SUF
148.8 226 M
(return) s
/F-gs-font 7 7 SF
174 226 M
( 0;) s
18.6 218 M (33:) s
18.6 210 M (34:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
( profit = 0;) s
18.6 202 M (35:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
( min = prices[0];) s
18.6 194 M (36:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( max = prices[0];) s
18.6 186 M (37:) s
18.6 178 M (38:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( i = 1; i < prices.length; i++\) {) s
18.6 170 M (39:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(if) s
/F-gs-font 7 7 SF
69 170 M
(\(prices[i] < min || prices[i] < max\) {) s
18.6 162 M (40:) s
35.4 162 M
(        profit += max - min;) s
18.6 154 M (41:) s
35.4 154 M
(        min = prices[i];) s
18.6 146 M (42:) s
35.4 146 M
(        max = prices[i];) s
18.6 138 M (43:) s
35.4 138 M
(      } ) s
/Courier-Bold 7 7 SUF
69 138 M
(else) s
/F-gs-font 7 7 SF
85.8 138 M
( ) s
/Courier-Bold 7 7 SUF
90 138 M
(if) s
/F-gs-font 7 7 SF
98.4 138 M
(\(prices[i] > max\) {) s
18.6 130 M (44:) s
35.4 130 M
(        max = prices[i];) s
18.6 122 M (45:) s
35.4 122 M
(      }) s
18.6 114 M (46:) s
35.4 114 M
(    }) s
18.6 106 M (47:) s
35.4 106 M
(    profit += max - min;) s
18.6 98 M (48:) s
18.6 90 M (49:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( profit;) s
18.6 82 M (50:) s
35.4 82 M
(  }) s
18.6 74 M (51:) s
18.6 66 M (52:) s
35.4 66 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 66 M
(public) s
/F-gs-font 7 7 SF
69 66 M
( ) s
/Courier-Bold 7 7 SUF
73.2 66 M
(int) s
/F-gs-font 7 7 SF
85.8 66 M
( maxProfit2\() s
/Courier-Bold 7 7 SUF
136.2 66 M
(int) s
/F-gs-font 7 7 SF
148.8 66 M
([] prices\) {) s
18.6 58 M (53:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(int) s
/F-gs-font 7 7 SF
64.8 58 M
( maxprofit = 0;) s
18.6 50 M (54:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(for) s
/F-gs-font 7 7 SF
64.8 50 M
( \() s
/Courier-Bold 7 7 SUF
73.2 50 M
(int) s
/F-gs-font 7 7 SF
85.8 50 M
( i = 1; i < prices.length; i++\) {) s
18.6 42 M (55:) s
35.4 42 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 42 M
(if) s
/F-gs-font 7 7 SF
69 42 M
( \(prices[i] > prices[i - 1]\)) s
18.6 34 M (56:) s
35.4 34 M
(        maxprofit += prices[i] - prices[i - 1];) s
18.6 26 M (57:) s
35.4 26 M
(    }) s
18.6 18 M (58:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(return) s
/F-gs-font 7 7 SF
77.4 18 M
( maxprofit;) s
18.6 10 M (59:) s
35.4 10 M
(  }) s
18.6 2 M (60:) s
35.4 2 M
(}) s
_R
S
%%Page: (1) 42
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/PascalTriangle.java) def
/fdir (./general) def
/ftail (PascalTriangle.java) def
% User defined strings:
/fmodstr (Tue Dec 11 00:10:28 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PascalTriangle.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 0 ms, faster than 100.00% of Java online submissions for Pascal's T) s
5 498 M
(riangle.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a non-negative integer numRows, generate the first numRows of Pascal's) s
5 474 M
( triangle.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        In Pascal's triangle, each number is the sum of the two numbers directly abo) s
5 450 M
(ve it.) s
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Example:) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Input: 5) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        [) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        [1],) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        [1,1],) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        [1,2,1],) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  [1,3,3,1],) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        [1,4,6,4,1]) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        ]) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( */) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
18.6 330 M (22:) s
/Courier-Bold 7 7 SUF
35.4 330 M
(import) s
/F-gs-font 7 7 SF
60.6 330 M
( java.util.*;) s
18.6 322 M (23:) s
18.6 314 M (24:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( PascalTriangle {) s
18.6 306 M (25:) s
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( List<List<Integer>> generate\() s
/Courier-Bold 7 7 SUF
195 306 M
(int) s
/F-gs-font 7 7 SF
207.6 306 M
( numRows\) {) s
18.6 298 M (26:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(if) s
/F-gs-font 7 7 SF
60.6 298 M
(\(numRows == 0\) ) s
/Courier-Bold 7 7 SUF
123.6 298 M
(return) s
/F-gs-font 7 7 SF
148.8 298 M
( ) s
/Courier-Bold 7 7 SUF
153 298 M
(new) s
/F-gs-font 7 7 SF
165.6 298 M
( ArrayList<List<Integer>>\(\);) s
18.6 290 M (27:) s
18.6 282 M (28:) s
35.4 282 M
(    List<List<Integer>> lists = ) s
/Courier-Bold 7 7 SUF
169.8 282 M
(new) s
/F-gs-font 7 7 SF
182.4 282 M
( ArrayList<List<Integer>>\(\);) s
18.6 274 M (29:) s
18.6 266 M (30:) s
35.4 266 M
(    List<Integer> first_list = ) s
/Courier-Bold 7 7 SUF
165.6 266 M
(new) s
/F-gs-font 7 7 SF
178.2 266 M
( ArrayList<Integer>\(\);) s
18.6 258 M (31:) s
35.4 258 M
(    first_list.add\(1\);) s
18.6 250 M (32:) s
35.4 250 M
(    lists.add\(first_list\);) s
18.6 242 M (33:) s
18.6 234 M (34:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(if) s
/F-gs-font 7 7 SF
60.6 234 M
(\(numRows < 2\) ) s
/Courier-Bold 7 7 SUF
119.4 234 M
(return) s
/F-gs-font 7 7 SF
144.6 234 M
( lists;) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(    List<Integer> prev_list = lists.get\(0\);) s
18.6 210 M (37:) s
35.4 210 M
(    List<Integer> curr_list = ) s
/Courier-Bold 7 7 SUF
161.4 210 M
(null) s
/F-gs-font 7 7 SF
178.2 210 M
(;) s
18.6 202 M (38:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(for) s
/F-gs-font 7 7 SF
64.8 202 M
(\() s
/Courier-Bold 7 7 SUF
69 202 M
(int) s
/F-gs-font 7 7 SF
81.6 202 M
( i = 2; i <= numRows; i++\) {) s
18.6 194 M (39:) s
35.4 194 M
(      curr_list = ) s
/Courier-Bold 7 7 SUF
111 194 M
(new) s
/F-gs-font 7 7 SF
123.6 194 M
( ArrayList<Integer>\(\);) s
18.6 186 M (40:) s
35.4 186 M
(      curr_list.add\(1\);) s
18.6 178 M (41:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(for) s
/F-gs-font 7 7 SF
73.2 178 M
(\() s
/Courier-Bold 7 7 SUF
77.4 178 M
(int) s
/F-gs-font 7 7 SF
90 178 M
( j = 1; j < i-1; j++\) curr_list.add\(prev_list.get\(j-1\) + prev_list.get\() s
5 170 M
(j\)\);) s
18.6 162 M (42:) s
35.4 162 M
(      curr_list.add\(1\);) s
18.6 154 M (43:) s
35.4 154 M
(      lists.add\(curr_list\);) s
18.6 146 M (44:) s
18.6 138 M (45:) s
35.4 138 M
(      prev_list = curr_list;) s
18.6 130 M (46:) s
35.4 130 M
(    }) s
18.6 122 M (47:) s
18.6 114 M (48:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( lists;) s
18.6 106 M (49:) s
35.4 106 M
(  }) s
18.6 98 M (50:) s
35.4 98 M
(}) s
_R
S
%%Page: (1) 43
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/WordPattern.java) def
/fdir (./general) def
/ftail (WordPattern.java) def
% User defined strings:
/fmodstr (Sun Dec 09 01:35:46 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (WordPattern.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(// Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 514 M
(// Runtime: 1 ms, faster than 99.08% of Java online submissions for Word Pattern.) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(// Given a pattern and a string str, find if str follows the same pattern.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 490 M
(// Here follow means a full match, such that there is a bijection between a letter i) s
5 482 M
(n pattern and a non-empty word in str.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(//     Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(//     Input: pattern = "abba", str = "dog cat cat dog") s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 442 M
(//     Output: true) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 434 M
(//     Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(//     Input:pattern = "abba", str = "dog cat cat fish") s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 410 M
(//     Output: false) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 402 M
(//     Example 3:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(//     Input: pattern = "aaaa", str = "dog cat cat dog") s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 378 M
(//     Output: false) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 370 M
(//     Example 4:) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(//     Input: pattern = "abba", str = "dog dog dog dog") s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 346 M
(//     Output: false) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 338 M
(//     Notes:) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 330 M
(//     You may assume pattern contains only lowercase letters, and str contains lowe) s
5 322 M
(rcase letters separated by a single space.) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(import) s
/F-gs-font 7 7 SF
60.6 306 M
( java.util.*;) s
18.6 298 M (27:) s
18.6 290 M (28:) s
/Courier-Bold 7 7 SUF
35.4 290 M
(class) s
/F-gs-font 7 7 SF
56.4 290 M
( WordPattern {) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(public) s
/F-gs-font 7 7 SF
77.4 282 M
( ) s
/Courier-Bold 7 7 SUF
81.6 282 M
(static) s
/F-gs-font 7 7 SF
106.8 282 M
( ) s
/Courier-Bold 7 7 SUF
111 282 M
(void) s
/F-gs-font 7 7 SF
127.8 282 M
( main\(String[] args\) {) s
18.6 274 M (30:) s
35.4 274 M
(        wordPattern\() s
/Courier-Bold 7 7 SUF
119.4 274 M
("abba") s
/F-gs-font 7 7 SF
144.6 274 M
(, ) s
/Courier-Bold 7 7 SUF
153 274 M
("dog cat cat dog") s
/F-gs-font 7 7 SF
224.4 274 M
(\);) s
18.6 266 M (31:) s
35.4 266 M
(    }) s
18.6 258 M (32:) s
18.6 250 M (33:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(public) s
/F-gs-font 7 7 SF
77.4 250 M
( ) s
/Courier-Bold 7 7 SUF
81.6 250 M
(static) s
/F-gs-font 7 7 SF
106.8 250 M
( ) s
/Courier-Bold 7 7 SUF
111 250 M
(boolean) s
/F-gs-font 7 7 SF
140.4 250 M
( wordPattern\(String pattern, String str\) {) s
18.6 242 M (34:) s
35.4 242 M
(        String[] word_dict = ) s
/Courier-Bold 7 7 SUF
157.2 242 M
(new) s
/F-gs-font 7 7 SF
169.8 242 M
( String[26];) s
18.6 234 M (35:) s
35.4 234 M
(        HashSet<String> taken_words = ) s
/Courier-Bold 7 7 SUF
195 234 M
(new) s
/F-gs-font 7 7 SF
207.6 234 M
( HashSet<>\(\);) s
18.6 226 M (36:) s
18.6 218 M (37:) s
35.4 218 M
(        String[] words = str.split\() s
/Courier-Bold 7 7 SUF
182.4 218 M
(" ") s
/F-gs-font 7 7 SF
195 218 M
(\);) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(        ) s
/Courier-Bold 7 7 SUF
69 202 M
(if) s
/F-gs-font 7 7 SF
77.4 202 M
(\(pattern.length\(\) != words.length\) ) s
/Courier-Bold 7 7 SUF
224.4 202 M
(return) s
/F-gs-font 7 7 SF
249.6 202 M
( ) s
/Courier-Bold 7 7 SUF
253.8 202 M
(false) s
/F-gs-font 7 7 SF
274.8 202 M
(;) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(        ) s
/Courier-Bold 7 7 SUF
69 186 M
(for) s
/F-gs-font 7 7 SF
81.6 186 M
(\() s
/Courier-Bold 7 7 SUF
85.8 186 M
(int) s
/F-gs-font 7 7 SF
98.4 186 M
( i = 0; i < pattern.length\(\); i++\) {) s
18.6 178 M (42:) s
35.4 178 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 178 M
(if) s
/F-gs-font 7 7 SF
94.2 178 M
(\(taken_words.contains\(words[i]\)\) ) s
/Courier-Bold 7 7 SUF
232.8 178 M
(return) s
/F-gs-font 7 7 SF
258 178 M
( ) s
/Courier-Bold 7 7 SUF
262.2 178 M
(false) s
/F-gs-font 7 7 SF
283.2 178 M
(;) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 162 M
(int) s
/F-gs-font 7 7 SF
98.4 162 M
( dict_index = pattern.charAt\(i\) - ) s
/Courier-Bold 7 7 SUF
241.2 162 M
('a') s
/F-gs-font 7 7 SF
253.8 162 M
(;) s
18.6 154 M (45:) s
35.4 154 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 154 M
(if) s
/F-gs-font 7 7 SF
94.2 154 M
(\(word_dict[dict_index] == ) s
/Courier-Bold 7 7 SUF
203.4 154 M
(null) s
/F-gs-font 7 7 SF
220.2 154 M
(\) {) s
18.6 146 M (46:) s
35.4 146 M
(                word_dict[dict_index] = words[i];) s
18.6 138 M (47:) s
35.4 138 M
(                taken_words.add\(words[i]\);) s
18.6 130 M (48:) s
35.4 130 M
(            } ) s
/Courier-Bold 7 7 SUF
94.2 130 M
(else) s
/F-gs-font 7 7 SF
111 130 M
( {) s
18.6 122 M (49:) s
35.4 122 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 122 M
(if) s
/F-gs-font 7 7 SF
111 122 M
(\(!word_dict[dict_index].equals\(words[i]\)\) ) s
/Courier-Bold 7 7 SUF
287.4 122 M
(return) s
/F-gs-font 7 7 SF
312.6 122 M
( ) s
/Courier-Bold 7 7 SUF
316.8 122 M
(false) s
/F-gs-font 7 7 SF
337.8 122 M
(;) s
18.6 114 M (50:) s
35.4 114 M
(            }) s
18.6 106 M (51:) s
35.4 106 M
(        }) s
18.6 98 M (52:) s
18.6 90 M (53:) s
35.4 90 M
(        ) s
/Courier-Bold 7 7 SUF
69 90 M
(return) s
/F-gs-font 7 7 SF
94.2 90 M
( ) s
/Courier-Bold 7 7 SUF
98.4 90 M
(true) s
/F-gs-font 7 7 SF
115.2 90 M
(;) s
18.6 82 M (54:) s
35.4 82 M
(    }) s
18.6 74 M (55:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 44
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/MaxProfit.java) def
/fdir (./general) def
/ftail (MaxProfit.java) def
% User defined strings:
/fmodstr (Sun Dec 16 22:37:29 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaxProfit.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Say you have an array for which the ith element is the price of a given stock on d) s
5 490 M
(ay i.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  If you were only permitted to complete at most one transaction \(i.e., buy one and ) s
5 466 M
(sell one share of the stock\), design an algorithm to find the maximum profit.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Note that you cannot sell a stock before you buy one.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: [7,1,5,3,6,4]) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: 5) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Explanation: Buy on day 2 \(price = 1\) and sell on day 5 \(price = 6\), profit = 6-1 ) s
5 394 M
(= 5.) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Not 7-1 = 6, as selling price needs to be larger than buying price.) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: [7,6,4,3,1]) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Output: 0) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Explanation: In this case, no transaction is done, i.e. max profit = 0.) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
18.6 322 M (23:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( MaxProfit {) s
18.6 314 M (24:) s
35.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 314 M
(public) s
/F-gs-font 7 7 SF
69 314 M
( ) s
/Courier-Bold 7 7 SUF
73.2 314 M
(int) s
/F-gs-font 7 7 SF
85.8 314 M
( maxProfit\() s
/Courier-Bold 7 7 SUF
132 314 M
(int) s
/F-gs-font 7 7 SF
144.6 314 M
([] prices\) {) s
18.6 306 M (25:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(int) s
/F-gs-font 7 7 SF
64.8 306 M
( min = Integer.MAX_VALUE;) s
18.6 298 M (26:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(int) s
/F-gs-font 7 7 SF
64.8 298 M
( max = Integer.MIN_VALUE;) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(int) s
/F-gs-font 7 7 SF
64.8 290 M
( profit = 0;) s
18.6 282 M (28:) s
18.6 274 M (29:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = 0; i < prices.length; i++\) {) s
18.6 266 M (30:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(if) s
/F-gs-font 7 7 SF
69 266 M
(\(prices[i] < min\) {) s
18.6 258 M (31:) s
35.4 258 M
(        min = prices[i];) s
18.6 250 M (32:) s
35.4 250 M
(        max = 0;) s
18.6 242 M (33:) s
35.4 242 M
(      } ) s
/Courier-Bold 7 7 SUF
69 242 M
(else) s
/F-gs-font 7 7 SF
85.8 242 M
( ) s
/Courier-Bold 7 7 SUF
90 242 M
(if) s
/F-gs-font 7 7 SF
98.4 242 M
(\(prices[i] > max\) {) s
18.6 234 M (34:) s
35.4 234 M
(        max = prices[i];) s
18.6 226 M (35:) s
35.4 226 M
(        profit = Math.max\(profit, max - min\);) s
18.6 218 M (36:) s
35.4 218 M
(      }) s
18.6 210 M (37:) s
35.4 210 M
(    }) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(return) s
/F-gs-font 7 7 SF
77.4 194 M
( profit;) s
18.6 186 M (40:) s
35.4 186 M
(  }) s
18.6 178 M (41:) s
35.4 178 M
(}) s
_R
S
%%Page: (1) 45
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ReverseString.java) def
/fdir (./general) def
/ftail (ReverseString.java) def
% User defined strings:
/fmodstr (Mon Dec 10 20:25:16 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ReverseString.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 2 ms, faster than 75.33% of Java online submissions for Reverse Str) s
5 498 M
(ing.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Write a function that takes a string as input and returns the string reverse) s
5 474 M
(d.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Input: "hello") s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Output: "olleh") s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Input: "A man, a plan, a canal: Panama") s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Output: "amanaP :lanac a ,nalp a ,nam A") s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( */) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
18.6 370 M (18:) s
/Courier-Bold 7 7 SUF
35.4 370 M
(class) s
/F-gs-font 7 7 SF
56.4 370 M
( ReverseString {) s
18.6 362 M (19:) s
35.4 362 M
(        ) s
/Courier-Bold 7 7 SUF
69 362 M
(public) s
/F-gs-font 7 7 SF
94.2 362 M
( ) s
/Courier-Bold 7 7 SUF
98.4 362 M
(static) s
/F-gs-font 7 7 SF
123.6 362 M
( ) s
/Courier-Bold 7 7 SUF
127.8 362 M
(void) s
/F-gs-font 7 7 SF
144.6 362 M
( main\(String[] args\) {) s
18.6 354 M (20:) s
35.4 354 M
(                reverseString\() s
/Courier-Bold 7 7 SUF
161.4 354 M
("abcdefg") s
/F-gs-font 7 7 SF
199.2 354 M
(\);) s
18.6 346 M (21:) s
35.4 346 M
(        }) s
18.6 338 M (22:) s
18.6 330 M (23:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( ) s
/Courier-Bold 7 7 SUF
73.2 330 M
(static) s
/F-gs-font 7 7 SF
98.4 330 M
( String reverseString\(String s\) {) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(char) s
/F-gs-font 7 7 SF
69 322 M
([] chars = s.toCharArray\(\);) s
18.6 314 M (25:) s
18.6 306 M (26:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(char) s
/F-gs-font 7 7 SF
69 306 M
( temp = ) s
/Courier-Bold 7 7 SUF
102.6 306 M
(' ') s
/F-gs-font 7 7 SF
115.2 306 M
(;) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 0; i < chars.length/2; i++\) {) s
18.6 290 M (28:) s
35.4 290 M
(      temp = chars[i];) s
18.6 282 M (29:) s
35.4 282 M
(      chars[i] = chars[chars.length-1-i];) s
18.6 274 M (30:) s
35.4 274 M
(      chars[chars.length-1-i] = temp;) s
18.6 266 M (31:) s
35.4 266 M
(    }) s
18.6 258 M (32:) s
18.6 250 M (33:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(return) s
/F-gs-font 7 7 SF
77.4 250 M
( ) s
/Courier-Bold 7 7 SUF
81.6 250 M
(new) s
/F-gs-font 7 7 SF
94.2 250 M
( String\(chars\);) s
18.6 242 M (34:) s
35.4 242 M
(  }) s
18.6 234 M (35:) s
35.4 234 M
(}) s
_R
S
%%Page: (1) 46
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ShortestDistanceToACharacter.java) def
/fdir (./general) def
/ftail (ShortestDistanceToACharacter.java) def
% User defined strings:
/fmodstr (Mon Dec 10 17:02:50 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ShortestDistanceToACharacter.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 3 ms, faster than 100.00% of Java online submissions for Shortest D) s
5 498 M
(istance to a Character.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a string S and a character C, return an array of integers representing) s
5 474 M
( the shortest distance from the character C in the string.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Input: S = "loveleetcode", C = 'e') s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        S string length is in [1, 10000].) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        C is a single character, and guaranteed to be in string S.) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        All letters in S and C are lowercase.) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(*/) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
18.6 362 M (19:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( ShortestDistanceToACharacter {) s
18.6 354 M (20:) s
35.4 354 M
(        ) s
/Courier-Bold 7 7 SUF
69 354 M
(public) s
/F-gs-font 7 7 SF
94.2 354 M
( ) s
/Courier-Bold 7 7 SUF
98.4 354 M
(static) s
/F-gs-font 7 7 SF
123.6 354 M
( ) s
/Courier-Bold 7 7 SUF
127.8 354 M
(void) s
/F-gs-font 7 7 SF
144.6 354 M
( main\(String[] args\) {) s
18.6 346 M (21:) s
35.4 346 M
(                shortestToChar\() s
/Courier-Bold 7 7 SUF
165.6 346 M
("leetcode") s
/F-gs-font 7 7 SF
207.6 346 M
(, ) s
/Courier-Bold 7 7 SUF
216 346 M
('e') s
/F-gs-font 7 7 SF
228.6 346 M
(\);) s
18.6 338 M (22:) s
35.4 338 M
(        }) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 322 M
(public) s
/F-gs-font 7 7 SF
69 322 M
( ) s
/Courier-Bold 7 7 SUF
73.2 322 M
(static) s
/F-gs-font 7 7 SF
98.4 322 M
( ) s
/Courier-Bold 7 7 SUF
102.6 322 M
(int) s
/F-gs-font 7 7 SF
115.2 322 M
([] shortestToChar\(String S, ) s
/Courier-Bold 7 7 SUF
232.8 322 M
(char) s
/F-gs-font 7 7 SF
249.6 322 M
( C\) {) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(int) s
/F-gs-font 7 7 SF
64.8 314 M
([] results = ) s
/Courier-Bold 7 7 SUF
119.4 314 M
(new) s
/F-gs-font 7 7 SF
132 314 M
( ) s
/Courier-Bold 7 7 SUF
136.2 314 M
(int) s
/F-gs-font 7 7 SF
148.8 314 M
([S.length\(\)];) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(int) s
/F-gs-font 7 7 SF
64.8 298 M
( first_idx = S.indexOf\(C\);) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(int) s
/F-gs-font 7 7 SF
64.8 290 M
( previous_idx = first_idx;) s
18.6 282 M (29:) s
18.6 274 M (30:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = first_idx; i >= 0; i--\) results[i] = first_idx - i;) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(for) s
/F-gs-font 7 7 SF
64.8 258 M
(\() s
/Courier-Bold 7 7 SUF
69 258 M
(int) s
/F-gs-font 7 7 SF
81.6 258 M
( i = first_idx + 1; i < S.length\(\); i++\) {) s
18.6 250 M (33:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(if) s
/F-gs-font 7 7 SF
69 250 M
(\(S.charAt\(i\) == C\) {) s
18.6 242 M (34:) s
35.4 242 M
(        ) s
/Courier-Bold 7 7 SUF
69 242 M
(for) s
/F-gs-font 7 7 SF
81.6 242 M
(\() s
/Courier-Bold 7 7 SUF
85.8 242 M
(int) s
/F-gs-font 7 7 SF
98.4 242 M
( j = i-1; j >= \(\(previous_idx+i\)/2\)+1; j--\) results[j] = i-j;) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(        results[i] = 0;) s
18.6 218 M (37:) s
35.4 218 M
(        previous_idx = i;) s
18.6 210 M (38:) s
35.4 210 M
(      } ) s
/Courier-Bold 7 7 SUF
69 210 M
(else) s
/F-gs-font 7 7 SF
85.8 210 M
( {) s
18.6 202 M (39:) s
35.4 202 M
(        results[i] = i-previous_idx;) s
18.6 194 M (40:) s
35.4 194 M
(      }) s
18.6 186 M (41:) s
35.4 186 M
(    }) s
18.6 178 M (42:) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(return) s
/F-gs-font 7 7 SF
77.4 170 M
( results;) s
18.6 162 M (44:) s
35.4 162 M
(  }) s
18.6 154 M (45:) s
35.4 154 M
(}) s
_R
S
%%Page: (1) 47
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/UglyNumber.java) def
/fdir (./general) def
/ftail (UglyNumber.java) def
% User defined strings:
/fmodstr (Mon Dec 10 00:23:59 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UglyNumber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 1 ms, faster than 100.00% of Java online submissions for Ugly Numbe) s
5 498 M
(r.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Write a program to check whether a given number is an ugly number.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Ugly numbers are positive numbers whose prime factors only include 2, 3, 5.) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Input: 6) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Explanation: 6 = 2 \303\\227 3) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        Input: 8) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Explanation: 8 = 2 \303\\227 2 \303\\227 2) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Example 3:) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Input: 14) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(        Explanation: 14 is not ugly since it includes another prime factor 7.) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(        1 is typically treated as an ugly number.) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        Input is within the 32-bit signed integer range: [\342\\210\\222231,  231 \342\\210) s
5 298 M
(\\222 1].) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
18.6 274 M (30:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(class) s
/F-gs-font 7 7 SF
56.4 274 M
( UglyNumber {) s
18.6 266 M (31:) s
35.4 266 M
(        ) s
/Courier-Bold 7 7 SUF
69 266 M
(public) s
/F-gs-font 7 7 SF
94.2 266 M
( ) s
/Courier-Bold 7 7 SUF
98.4 266 M
(static) s
/F-gs-font 7 7 SF
123.6 266 M
( ) s
/Courier-Bold 7 7 SUF
127.8 266 M
(void) s
/F-gs-font 7 7 SF
144.6 266 M
( main\(String[] args\) {) s
18.6 258 M (32:) s
35.4 258 M
(                isUgly\(26\);) s
18.6 250 M (33:) s
35.4 250 M
(        }) s
18.6 242 M (34:) s
18.6 234 M (35:) s
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(static) s
/F-gs-font 7 7 SF
98.4 234 M
( ) s
/Courier-Bold 7 7 SUF
102.6 234 M
(boolean) s
/F-gs-font 7 7 SF
132 234 M
( isUgly\() s
/Courier-Bold 7 7 SUF
165.6 234 M
(int) s
/F-gs-font 7 7 SF
178.2 234 M
( num\) {) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(num == 0\) ) s
/Courier-Bold 7 7 SUF
106.8 226 M
(return) s
/F-gs-font 7 7 SF
132 226 M
( ) s
/Courier-Bold 7 7 SUF
136.2 226 M
(false) s
/F-gs-font 7 7 SF
157.2 226 M
(;) s
18.6 218 M (37:) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(while) s
/F-gs-font 7 7 SF
73.2 210 M
(\(num % 5 == 0\) num /= 5;) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(while) s
/F-gs-font 7 7 SF
73.2 202 M
(\(num % 3 == 0\) num /= 3;) s
18.6 194 M (40:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(while) s
/F-gs-font 7 7 SF
73.2 194 M
(\(num % 2 == 0\) num /= 2;) s
18.6 186 M (41:) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(return) s
/F-gs-font 7 7 SF
77.4 178 M
( num == 1;) s
18.6 170 M (43:) s
35.4 170 M
(  }) s
18.6 162 M (44:) s
35.4 162 M
(}) s
_R
S
%%Page: (1) 48
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/BackspaceCompare.java) def
/fdir (./general) def
/ftail (BackspaceCompare.java) def
% User defined strings:
/fmodstr (Tue Apr 02 22:04:53 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BackspaceCompare.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given two strings S and T, return if they are equal when both are typed into empty) s
5 490 M
( text editors. # means a backspace character.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input: S = "ab#c", T = "ad#c") s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Explanation: Both S and T become "ac".) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: S = "ab##", T = "c#d#") s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Explanation: Both S and T become "".) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: S = "a##c", T = "#a#c") s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Explanation: Both S and T become "c".) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Input: S = "a#c", T = "b") s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Explanation: S becomes "c" while T becomes "b".) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  1 <= S.length <= 200) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  1 <= T.length <= 200) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  S and T only contain lowercase letters and '#' characters.) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  Can you solve it in O\(N\) time and O\(1\) space?) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( */) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
18.6 234 M (36:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (37:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(boolean) s
/F-gs-font 7 7 SF
102.6 226 M
( backspaceCompare\(String S, String T\) {) s
18.6 218 M (38:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
( i = S.length\(\) - 1;) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
( j = T.length\(\) - 1;) s
18.6 202 M (40:) s
18.6 194 M (41:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( skipS = 0;) s
18.6 186 M (42:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
( skipT = 0;) s
18.6 178 M (43:) s
18.6 170 M (44:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(while) s
/F-gs-font 7 7 SF
73.2 170 M
(\(i >= 0 || j >= 0\) {) s
18.6 162 M (45:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(while) s
/F-gs-font 7 7 SF
81.6 162 M
(\(i >= 0\) {) s
18.6 154 M (46:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(if) s
/F-gs-font 7 7 SF
77.4 154 M
(\(S.charAt\(i\) == ) s
/Courier-Bold 7 7 SUF
144.6 154 M
('#') s
/F-gs-font 7 7 SF
157.2 154 M
(\) {) s
18.6 146 M (47:) s
35.4 146 M
(          skipS++;) s
18.6 138 M (48:) s
35.4 138 M
(          i--;) s
18.6 130 M (49:) s
35.4 130 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 130 M
(else) s
/F-gs-font 7 7 SF
94.2 130 M
( ) s
/Courier-Bold 7 7 SUF
98.4 130 M
(if) s
/F-gs-font 7 7 SF
106.8 130 M
(\(skipS > 0\) {) s
18.6 122 M (50:) s
35.4 122 M
(          skipS--;) s
18.6 114 M (51:) s
35.4 114 M
(          i--;) s
18.6 106 M (52:) s
35.4 106 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 106 M
(else) s
/F-gs-font 7 7 SF
94.2 106 M
( {) s
18.6 98 M (53:) s
35.4 98 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 98 M
(break) s
/F-gs-font 7 7 SF
98.4 98 M
(;) s
18.6 90 M (54:) s
35.4 90 M
(        }) s
18.6 82 M (55:) s
35.4 82 M
(      }) s
18.6 74 M (56:) s
18.6 66 M (57:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(while) s
/F-gs-font 7 7 SF
81.6 66 M
(\(j >= 0\) {) s
18.6 58 M (58:) s
35.4 58 M
(        ) s
/Courier-Bold 7 7 SUF
69 58 M
(if) s
/F-gs-font 7 7 SF
77.4 58 M
(\(T.charAt\(j\) == ) s
/Courier-Bold 7 7 SUF
144.6 58 M
('#') s
/F-gs-font 7 7 SF
157.2 58 M
(\) {) s
18.6 50 M (59:) s
35.4 50 M
(          skipT++;) s
18.6 42 M (60:) s
35.4 42 M
(          j--;) s
18.6 34 M (61:) s
35.4 34 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 34 M
(else) s
/F-gs-font 7 7 SF
94.2 34 M
( ) s
/Courier-Bold 7 7 SUF
98.4 34 M
(if) s
/F-gs-font 7 7 SF
106.8 34 M
(\(skipT > 0\) {) s
18.6 26 M (62:) s
35.4 26 M
(          skipT--;) s
18.6 18 M (63:) s
35.4 18 M
(          j--;) s
18.6 10 M (64:) s
35.4 10 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 10 M
(else) s
/F-gs-font 7 7 SF
94.2 10 M
( {) s
18.6 2 M (65:) s
35.4 2 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 2 M
(break) s
/F-gs-font 7 7 SF
98.4 2 M
(;) s
415.6 522 M (66:) s
432.4 522 M
(        }) s
415.6 514 M (67:) s
432.4 514 M
(      }) s
415.6 506 M (68:) s
415.6 498 M (69:) s
432.4 498 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 498 M
(if) s
/F-gs-font 7 7 SF
466 498 M
(\(i == -1 && j >= 0\) ) s
/Courier-Bold 7 7 SUF
550 498 M
(return) s
/F-gs-font 7 7 SF
575.2 498 M
( ) s
/Courier-Bold 7 7 SUF
579.4 498 M
(false) s
/F-gs-font 7 7 SF
600.4 498 M
(;) s
415.6 490 M (70:) s
432.4 490 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 490 M
(if) s
/F-gs-font 7 7 SF
466 490 M
(\(i >= 0 && j == -1\) ) s
/Courier-Bold 7 7 SUF
550 490 M
(return) s
/F-gs-font 7 7 SF
575.2 490 M
( ) s
/Courier-Bold 7 7 SUF
579.4 490 M
(false) s
/F-gs-font 7 7 SF
600.4 490 M
(;) s
415.6 482 M (71:) s
432.4 482 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 482 M
(if) s
/F-gs-font 7 7 SF
466 482 M
(\(i == -1 && j == -1\) ) s
/Courier-Bold 7 7 SUF
554.2 482 M
(return) s
/F-gs-font 7 7 SF
579.4 482 M
( ) s
/Courier-Bold 7 7 SUF
583.6 482 M
(true) s
/F-gs-font 7 7 SF
600.4 482 M
(;) s
415.6 474 M (72:) s
432.4 474 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 474 M
(if) s
/F-gs-font 7 7 SF
466 474 M
(\(S.charAt\(i\) != T.charAt\(j\)\) ) s
/Courier-Bold 7 7 SUF
587.8 474 M
(return) s
/F-gs-font 7 7 SF
613 474 M
( ) s
/Courier-Bold 7 7 SUF
617.2 474 M
(false) s
/F-gs-font 7 7 SF
638.2 474 M
(;) s
415.6 466 M (73:) s
415.6 458 M (74:) s
432.4 458 M
(      i--; j--;) s
415.6 450 M (75:) s
432.4 450 M
(    }) s
415.6 442 M (76:) s
415.6 434 M (77:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(return) s
/F-gs-font 7 7 SF
474.4 434 M
( ) s
/Courier-Bold 7 7 SUF
478.6 434 M
(true) s
/F-gs-font 7 7 SF
495.4 434 M
(;) s
415.6 426 M (78:) s
432.4 426 M
(  }) s
415.6 418 M (79:) s
432.4 418 M
(}) s
_R
S
%%Page: (1) 49
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/CountBinarySubstrings.java) def
/fdir (./general) def
/ftail (CountBinarySubstrings.java) def
% User defined strings:
/fmodstr (Mon Jan 28 15:27:37 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (CountBinarySubstrings.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Give a string s, count the number of non-empty \(contiguous\) substrings that have t) s
5 490 M
(he same number of 0's and 1's, and all the 0's and all the 1's in these substrings are group) s
5 482 M
(ed consecutively.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Substrings that occur multiple times are counted the number of times they occur.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: "00110011") s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: 6) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Explanation: There are 6 substrings that have equal number of consecutive 1's and ) s
5 418 M
(0's: "0011", "01", "1100", "10", "0011", and "01".) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Notice that some of these substrings repeat and are counted the number of times th) s
5 394 M
(ey occur.) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Also, "00110011" is not a valid substring because all the 0's \(and 1's\) are not gr) s
5 370 M
(ouped together.) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: "10101") s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation: There are 4 substrings: "10", "01", "10", "01" that have equal number) s
5 330 M
( of consecutive 1's and 0's.) s
/F-gs-font 7 7 SF
18.6 322 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 314 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  s.length will be between 1 and 50,000.) s
/F-gs-font 7 7 SF
18.6 298 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  s will only consist of "0" or "1" characters.) s
/F-gs-font 7 7 SF
18.6 290 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( */) s
/F-gs-font 7 7 SF
18.6 282 M (25:) s
18.6 274 M (26:) s
/Courier-Bold 7 7 SUF
35.4 274 M
(class) s
/F-gs-font 7 7 SF
56.4 274 M
( Solution {) s
18.6 266 M (27:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( ) s
/Courier-Bold 7 7 SUF
73.2 266 M
(int) s
/F-gs-font 7 7 SF
85.8 266 M
( countBinarySubstrings\(String s\) {) s
18.6 258 M (28:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(if) s
/F-gs-font 7 7 SF
60.6 258 M
(\(s.length\(\) <= 1\) ) s
/Courier-Bold 7 7 SUF
136.2 258 M
(return) s
/F-gs-font 7 7 SF
161.4 258 M
( 0;) s
18.6 250 M (29:) s
18.6 242 M (30:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(int) s
/F-gs-font 7 7 SF
64.8 242 M
( counter = 0;) s
18.6 234 M (31:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
( prevCount = 0;) s
18.6 226 M (32:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(int) s
/F-gs-font 7 7 SF
64.8 226 M
( currCount = 1;) s
18.6 218 M (33:) s
18.6 210 M (34:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( currIndex = 1; currIndex < s.length\(\); currIndex++\) {) s
18.6 202 M (35:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(if) s
/F-gs-font 7 7 SF
69 202 M
(\(s.charAt\(currIndex\) == s.charAt\(currIndex-1\)\) currCount++;) s
18.6 194 M (36:) s
35.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 194 M
(else) s
/F-gs-font 7 7 SF
77.4 194 M
( {) s
18.6 186 M (37:) s
35.4 186 M
(        counter += Math.min\(currCount, prevCount\);) s
18.6 178 M (38:) s
18.6 170 M (39:) s
35.4 170 M
(        prevCount = currCount;) s
18.6 162 M (40:) s
35.4 162 M
(        currCount = 1;) s
18.6 154 M (41:) s
35.4 154 M
(      }) s
18.6 146 M (42:) s
35.4 146 M
(    }) s
18.6 138 M (43:) s
35.4 138 M
(    counter += Math.min\(currCount, prevCount\);) s
18.6 130 M (44:) s
18.6 122 M (45:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( counter;) s
18.6 114 M (46:) s
35.4 114 M
(  }) s
18.6 106 M (47:) s
35.4 106 M
(}) s
_R
S
%%Page: (1) 50
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ValidMountainArray.java) def
/fdir (./general) def
/ftail (ValidMountainArray.java) def
% User defined strings:
/fmodstr (Sun Dec 09 22:22:48 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ValidMountainArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 5 ms, faster than 62.50% of Java online submissions for Valid Mount) s
5 498 M
(ain Array.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given an array A of integers, return true if and only if it is a valid mount) s
5 474 M
(ain array.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Recall that A is a mountain array if and only if:) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        A.length >= 3) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        There exists some i with 0 < i < A.length - 1 such that:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        A[0] < A[1] < ... A[i-1] < A[i]) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        A[i] > A[i+1] > ... > A[B.length - 1]) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Input: [2,1]) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Input: [3,5,5]) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(        Example 3:) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        Input: [0,3,2,1]) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(        0 <= A.length <= 10000) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(        0 <= A[i] <= 10000 ) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( */) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
18.6 242 M (34:) s
/Courier-Bold 7 7 SUF
35.4 242 M
(class) s
/F-gs-font 7 7 SF
56.4 242 M
( ValidMountainArray {) s
18.6 234 M (35:) s
35.4 234 M
(        ) s
/Courier-Bold 7 7 SUF
69 234 M
(public) s
/F-gs-font 7 7 SF
94.2 234 M
( ) s
/Courier-Bold 7 7 SUF
98.4 234 M
(static) s
/F-gs-font 7 7 SF
123.6 234 M
( ) s
/Courier-Bold 7 7 SUF
127.8 234 M
(void) s
/F-gs-font 7 7 SF
144.6 234 M
( main\(String[] args\) {) s
18.6 226 M (36:) s
35.4 226 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 226 M
(int) s
/F-gs-font 7 7 SF
115.2 226 M
([] arr = ) s
/Courier-Bold 7 7 SUF
153 226 M
(new) s
/F-gs-font 7 7 SF
165.6 226 M
( ) s
/Courier-Bold 7 7 SUF
169.8 226 M
(int) s
/F-gs-font 7 7 SF
182.4 226 M
([] { 0, 3, 2, 1 };) s
18.6 218 M (37:) s
35.4 218 M
(                validMountainArray\(arr\);) s
18.6 210 M (38:) s
35.4 210 M
(        }) s
18.6 202 M (39:) s
18.6 194 M (40:) s
35.4 194 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 194 M
(public) s
/F-gs-font 7 7 SF
69 194 M
( ) s
/Courier-Bold 7 7 SUF
73.2 194 M
(static) s
/F-gs-font 7 7 SF
98.4 194 M
( ) s
/Courier-Bold 7 7 SUF
102.6 194 M
(boolean) s
/F-gs-font 7 7 SF
132 194 M
( validMountainArray\() s
/Courier-Bold 7 7 SUF
216 194 M
(int) s
/F-gs-font 7 7 SF
228.6 194 M
([] A\) {) s
18.6 186 M (41:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(if) s
/F-gs-font 7 7 SF
60.6 186 M
(\(A.length < 3\) ) s
/Courier-Bold 7 7 SUF
123.6 186 M
(return) s
/F-gs-font 7 7 SF
148.8 186 M
( ) s
/Courier-Bold 7 7 SUF
153 186 M
(false) s
/F-gs-font 7 7 SF
174 186 M
(;) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(A[0] > A[1] || A[A.length-2] < A[A.length-1]\) ) s
/Courier-Bold 7 7 SUF
258 178 M
(return) s
/F-gs-font 7 7 SF
283.2 178 M
( ) s
/Courier-Bold 7 7 SUF
287.4 178 M
(false) s
/F-gs-font 7 7 SF
308.4 178 M
(;) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
( i = 0;) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(while) s
/F-gs-font 7 7 SF
73.2 154 M
(\(i < A.length-1 && A[i] < A[i+1]\) i++;) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(while) s
/F-gs-font 7 7 SF
73.2 146 M
(\(i < A.length-1 && A[i] > A[i+1]\) i++;) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(return) s
/F-gs-font 7 7 SF
77.4 130 M
( i == A.length-1;) s
18.6 122 M (49:) s
35.4 122 M
(  }) s
18.6 114 M (50:) s
35.4 114 M
(}) s
_R
S
%%Page: (1) 51
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/IndexOf.java) def
/fdir (./general) def
/ftail (IndexOf.java) def
% User defined strings:
/fmodstr (Sat Dec 15 23:46:28 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (IndexOf.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Implement strStr\(\).) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Return the index of the first occurrence of needle in haystack, or -1 if needle is) s
5 474 M
( not part of haystack.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: haystack = "hello", needle = "ll") s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: haystack = "aaaaa", needle = "bba") s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: -1) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Clarification:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  What should we return when needle is an empty string? This is a great question to ) s
5 370 M
(ask during an interview.) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  For the purpose of this problem, we will return 0 when needle is an empty string. ) s
5 346 M
(This is consistent to C's strstr\(\) and Java's indexOf\(\).) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
18.6 322 M (23:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( IndexOf {) s
18.6 314 M (24:) s
35.4 314 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 314 M
(// Runtime: 3ms - with substring) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( ) s
/Courier-Bold 7 7 SUF
73.2 306 M
(int) s
/F-gs-font 7 7 SF
85.8 306 M
( strStr\(String haystack, String needle\) {) s
18.6 298 M (26:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(if) s
/F-gs-font 7 7 SF
60.6 298 M
(\(needle.length\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
157.2 298 M
(return) s
/F-gs-font 7 7 SF
182.4 298 M
( 0;) s
18.6 290 M (27:) s
18.6 282 M (28:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(for) s
/F-gs-font 7 7 SF
64.8 282 M
(\() s
/Courier-Bold 7 7 SUF
69 282 M
(int) s
/F-gs-font 7 7 SF
81.6 282 M
( i = 0; i < haystack.length\(\) - needle.length\(\) + 1; i++\) {) s
18.6 274 M (29:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(if) s
/F-gs-font 7 7 SF
69 274 M
(\(haystack.charAt\(i\) != needle.charAt\(0\)\) ) s
/Courier-Bold 7 7 SUF
241.2 274 M
(continue) s
/F-gs-font 7 7 SF
274.8 274 M
(;) s
18.6 266 M (30:) s
18.6 258 M (31:) s
35.4 258 M
(      String substr = haystack.substring\(i, i + needle.length\(\)\);) s
18.6 250 M (32:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(if) s
/F-gs-font 7 7 SF
69 250 M
(\(substr.equals\(needle\)\) ) s
/Courier-Bold 7 7 SUF
169.8 250 M
(return) s
/F-gs-font 7 7 SF
195 250 M
( i;) s
18.6 242 M (33:) s
35.4 242 M
(    }) s
18.6 234 M (34:) s
18.6 226 M (35:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( -1;) s
18.6 218 M (36:) s
35.4 218 M
(  }) s
18.6 210 M (37:) s
18.6 202 M (38:) s
35.4 202 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 202 M
(// Runtime: 4ms) s
/F-gs-font 7 7 SF
18.6 194 M (39:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 194 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 194 M
(public) s
/F-gs-font 7 7 SF
69 194 M
( ) s
/Courier-Bold 7 7 SUF
73.2 194 M
(int) s
/F-gs-font 7 7 SF
85.8 194 M
( strStr2\(String haystack, String needle\) {) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(if) s
/F-gs-font 7 7 SF
60.6 186 M
(\(needle.length\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
157.2 186 M
(return) s
/F-gs-font 7 7 SF
182.4 186 M
( 0;) s
18.6 178 M (41:) s
18.6 170 M (42:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(for) s
/F-gs-font 7 7 SF
64.8 170 M
(\() s
/Courier-Bold 7 7 SUF
69 170 M
(int) s
/F-gs-font 7 7 SF
81.6 170 M
( i = 0; i < haystack.length\(\) - needle.length\(\) + 1; i++\) {) s
18.6 162 M (43:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(if) s
/F-gs-font 7 7 SF
69 162 M
(\(haystack.charAt\(i\) != needle.charAt\(0\)\) ) s
/Courier-Bold 7 7 SUF
241.2 162 M
(continue) s
/F-gs-font 7 7 SF
274.8 162 M
(;) s
18.6 154 M (44:) s
18.6 146 M (45:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(int) s
/F-gs-font 7 7 SF
73.2 146 M
( j;) s
18.6 138 M (46:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
(for) s
/F-gs-font 7 7 SF
73.2 138 M
(\(j = 0; j < needle.length\(\); j++\)) s
18.6 130 M (47:) s
35.4 130 M
(        ) s
/Courier-Bold 7 7 SUF
69 130 M
(if) s
/F-gs-font 7 7 SF
77.4 130 M
(\(haystack.charAt\(i + j\) != needle.charAt\(j\)\) ) s
/Courier-Bold 7 7 SUF
266.4 130 M
(break) s
/F-gs-font 7 7 SF
287.4 130 M
(;) s
18.6 122 M (48:) s
18.6 114 M (49:) s
35.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 114 M
(if) s
/F-gs-font 7 7 SF
69 114 M
(\(j == needle.length\(\)\) ) s
/Courier-Bold 7 7 SUF
165.6 114 M
(return) s
/F-gs-font 7 7 SF
190.8 114 M
( i;) s
18.6 106 M (50:) s
35.4 106 M
(    }) s
18.6 98 M (51:) s
18.6 90 M (52:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( -1;) s
18.6 82 M (53:) s
35.4 82 M
(  }) s
18.6 74 M (54:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 52
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/FruitIntoBaskets.java) def
/fdir (./general) def
/ftail (FruitIntoBaskets.java) def
% User defined strings:
/fmodstr (Wed Feb 13 22:54:41 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FruitIntoBaskets.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  In a row of trees, the i-th tree produces fruit with type tree[i].) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  You start at any tree of your choice, then repeatedly perform the following steps:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Add one piece of fruit from this tree to your baskets.  If you cannot, stop.) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Move to the next tree to the right of the current tree.  If there is no tree to th) s
5 450 M
(e right, stop.) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Note that you do not have any choice after the initial choice of starting tree: yo) s
5 434 M
(u must perform step 1, then step 2, then back to step 1, then step 2, and so on until you st) s
5 426 M
(op.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  You have two baskets, and each basket can carry any quantity of fruit, but you wan) s
5 402 M
(t each basket to only carry one type of fruit each.) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  What is the total amount of fruit you can collect with this procedure?) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( ) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Input: [1,2,1]) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Explanation: We can collect [1,2,1].) s
/F-gs-font 7 7 SF
18.6 314 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 298 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Input: [0,1,2,2]) s
/F-gs-font 7 7 SF
18.6 290 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 282 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Explanation: We can collect [1,2,2].) s
/F-gs-font 7 7 SF
18.6 274 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  If we started at the first tree, we would only collect [0, 1].) s
/F-gs-font 7 7 SF
18.6 266 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 258 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 250 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Input: [1,2,3,2,2]) s
/F-gs-font 7 7 SF
18.6 242 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 234 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Explanation: We can collect [2,3,2,2].) s
/F-gs-font 7 7 SF
18.6 226 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  If we started at the first tree, we would only collect [1, 2].) s
/F-gs-font 7 7 SF
18.6 218 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 210 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 202 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  Input: [3,3,3,1,2,1,1,2,3,3,4]) s
/F-gs-font 7 7 SF
18.6 194 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  Output: 5) s
/F-gs-font 7 7 SF
18.6 186 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  Explanation: We can collect [1,2,1,1,2].) s
/F-gs-font 7 7 SF
18.6 178 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  If we started at the first tree or the eighth tree, we would only collect 4 fruits) s
5 170 M
(.) s
/F-gs-font 7 7 SF
18.6 162 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
( ) s
/F-gs-font 7 7 SF
18.6 154 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 146 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 138 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 130 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 130 M
(  1 <= tree.length <= 40000) s
/F-gs-font 7 7 SF
18.6 122 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(  0 <= tree[i] < tree.length) s
/F-gs-font 7 7 SF
18.6 114 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 114 M
( */) s
/F-gs-font 7 7 SF
18.6 106 M (48:) s
18.6 98 M (49:) s
/Courier-Bold 7 7 SUF
35.4 98 M
(class) s
/F-gs-font 7 7 SF
56.4 98 M
( Solution {) s
18.6 90 M (50:) s
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(public) s
/F-gs-font 7 7 SF
69 90 M
( ) s
/Courier-Bold 7 7 SUF
73.2 90 M
(int) s
/F-gs-font 7 7 SF
85.8 90 M
( totalFruit\() s
/Courier-Bold 7 7 SUF
136.2 90 M
(int) s
/F-gs-font 7 7 SF
148.8 90 M
([] tree\) {) s
18.6 82 M (51:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(if) s
/F-gs-font 7 7 SF
60.6 82 M
(\(tree.length == 0\) ) s
/Courier-Bold 7 7 SUF
140.4 82 M
(return) s
/F-gs-font 7 7 SF
165.6 82 M
( 0;) s
18.6 74 M (52:) s
18.6 66 M (53:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(int) s
/F-gs-font 7 7 SF
64.8 66 M
( collectedMax = 0;) s
18.6 58 M (54:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(int) s
/F-gs-font 7 7 SF
64.8 58 M
( collectedCurr = 1;) s
18.6 50 M (55:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(int) s
/F-gs-font 7 7 SF
64.8 50 M
( collectedLastGroup = 1;) s
18.6 42 M (56:) s
18.6 34 M (57:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(int) s
/F-gs-font 7 7 SF
64.8 34 M
( a = tree[0];) s
18.6 26 M (58:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(int) s
/F-gs-font 7 7 SF
64.8 26 M
( b = -1;) s
18.6 18 M (59:) s
18.6 10 M (60:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(for) s
/F-gs-font 7 7 SF
64.8 10 M
(\() s
/Courier-Bold 7 7 SUF
69 10 M
(int) s
/F-gs-font 7 7 SF
81.6 10 M
( i = 1; i < tree.length; i++\) {) s
18.6 2 M (61:) s
35.4 2 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 2 M
(if) s
/F-gs-font 7 7 SF
69 2 M
(\(tree[i] == a\) {) s
415.6 522 M (62:) s
432.4 522 M
(        collectedLastGroup++;) s
415.6 514 M (63:) s
432.4 514 M
(        collectedCurr++;) s
415.6 506 M (64:) s
432.4 506 M
(      } ) s
/Courier-Bold 7 7 SUF
466 506 M
(else) s
/F-gs-font 7 7 SF
482.8 506 M
( ) s
/Courier-Bold 7 7 SUF
487 506 M
(if) s
/F-gs-font 7 7 SF
495.4 506 M
(\(tree[i] == b\) {) s
415.6 498 M (65:) s
432.4 498 M
(        ) s
/Courier-Bold 7 7 SUF
466 498 M
(int) s
/F-gs-font 7 7 SF
478.6 498 M
( temp = a;) s
415.6 490 M (66:) s
432.4 490 M
(        a = b;) s
415.6 482 M (67:) s
432.4 482 M
(        b = temp;) s
415.6 474 M (68:) s
432.4 474 M
(        collectedCurr++;) s
415.6 466 M (69:) s
432.4 466 M
(        collectedLastGroup = 1;) s
415.6 458 M (70:) s
432.4 458 M
(      } ) s
/Courier-Bold 7 7 SUF
466 458 M
(else) s
/F-gs-font 7 7 SF
482.8 458 M
( {) s
415.6 450 M (71:) s
432.4 450 M
(        collectedMax = Math.max\(collectedMax, collectedCurr\);) s
415.6 442 M (72:) s
415.6 434 M (73:) s
432.4 434 M
(        ) s
/Courier-Bold 7 7 SUF
466 434 M
(if) s
/F-gs-font 7 7 SF
474.4 434 M
(\(b == -1\) {) s
415.6 426 M (74:) s
432.4 426 M
(          b = a;) s
415.6 418 M (75:) s
432.4 418 M
(          a = tree[i];) s
415.6 410 M (76:) s
432.4 410 M
(          collectedCurr++;) s
415.6 402 M (77:) s
432.4 402 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 402 M
(else) s
/F-gs-font 7 7 SF
491.2 402 M
( {) s
415.6 394 M (78:) s
432.4 394 M
(          b = a;) s
415.6 386 M (79:) s
432.4 386 M
(          a = tree[i];) s
415.6 378 M (80:) s
432.4 378 M
(          collectedCurr = collectedLastGroup + 1;) s
415.6 370 M (81:) s
432.4 370 M
(        }) s
415.6 362 M (82:) s
432.4 362 M
(        collectedLastGroup = 1;) s
415.6 354 M (83:) s
432.4 354 M
(      }) s
415.6 346 M (84:) s
432.4 346 M
(    }) s
415.6 338 M (85:) s
432.4 338 M
(    collectedMax = Math.max\(collectedMax, collectedCurr\);) s
415.6 330 M (86:) s
415.6 322 M (87:) s
432.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 322 M
(return) s
/F-gs-font 7 7 SF
474.4 322 M
( collectedMax;) s
415.6 314 M (88:) s
432.4 314 M
(  }) s
415.6 306 M (89:) s
432.4 306 M
(}) s
_R
S
%%Page: (1) 53
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/FirstUniqueCharacterInString.java) def
/fdir (./general) def
/ftail (FirstUniqueCharacterInString.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:15:00 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FirstUniqueCharacterInString.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a string, find the first non-repeating character in it and return it's index) s
5 490 M
(. If it doesn't exist, return -1.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Examples:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  s = "leetcode") s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  return 0.) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  s = "loveleetcode",) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  return 2.) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Note: You may assume the string contain only lowercase letters.) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
( */) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
18.6 394 M (16:) s
/Courier-Bold 7 7 SUF
35.4 394 M
(class) s
/F-gs-font 7 7 SF
56.4 394 M
( FirstUniqueCharacterInString {) s
18.6 386 M (17:) s
35.4 386 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 386 M
(public) s
/F-gs-font 7 7 SF
69 386 M
( ) s
/Courier-Bold 7 7 SUF
73.2 386 M
(int) s
/F-gs-font 7 7 SF
85.8 386 M
( firstUniqChar\(String s\) {) s
18.6 378 M (18:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(int) s
/F-gs-font 7 7 SF
64.8 378 M
([] dict = ) s
/Courier-Bold 7 7 SUF
106.8 378 M
(new) s
/F-gs-font 7 7 SF
119.4 378 M
( ) s
/Courier-Bold 7 7 SUF
123.6 378 M
(int) s
/F-gs-font 7 7 SF
136.2 378 M
([26];) s
18.6 370 M (19:) s
18.6 362 M (20:) s
35.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 362 M
(for) s
/F-gs-font 7 7 SF
64.8 362 M
(\() s
/Courier-Bold 7 7 SUF
69 362 M
(int) s
/F-gs-font 7 7 SF
81.6 362 M
( i = 0; i < s.length\(\); i++\)) s
18.6 354 M (21:) s
35.4 354 M
(      dict[s.charAt\(i\) - ) s
/Courier-Bold 7 7 SUF
140.4 354 M
('a') s
/F-gs-font 7 7 SF
153 354 M
(]++;) s
18.6 346 M (22:) s
18.6 338 M (23:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(for) s
/F-gs-font 7 7 SF
64.8 338 M
(\() s
/Courier-Bold 7 7 SUF
69 338 M
(int) s
/F-gs-font 7 7 SF
81.6 338 M
( i = 0; i < s.length\(\); i++\)) s
18.6 330 M (24:) s
35.4 330 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 330 M
(if) s
/F-gs-font 7 7 SF
69 330 M
(\(dict[s.charAt\(i\) - ) s
/Courier-Bold 7 7 SUF
153 330 M
('a') s
/F-gs-font 7 7 SF
165.6 330 M
(] == 1\) ) s
/Courier-Bold 7 7 SUF
199.2 330 M
(return) s
/F-gs-font 7 7 SF
224.4 330 M
( i;) s
18.6 322 M (25:) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(return) s
/F-gs-font 7 7 SF
77.4 314 M
( -1;) s
18.6 306 M (27:) s
35.4 306 M
(  }) s
18.6 298 M (28:) s
35.4 298 M
(}) s
_R
S
%%Page: (1) 54
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/LongestCommonPrefix.java) def
/fdir (./general) def
/ftail (LongestCommonPrefix.java) def
% User defined strings:
/fmodstr (Wed Jan 02 22:22:21 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (LongestCommonPrefix.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Write a function to find the longest common prefix string amongst an array of stri) s
5 490 M
(ngs.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  If there is no common prefix, return an empty string "".) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: ["flower","flow","flight"]) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: "fl") s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: ["dog","racecar","car"]) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: "") s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Explanation: There is no common prefix among the input strings.) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  All given inputs are in lowercase letters a-z) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Bold 7 7 SUF
35.4 346 M
(class) s
/F-gs-font 7 7 SF
56.4 346 M
( Solution {) s
18.6 338 M (23:) s
35.4 338 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 338 M
(// approach 1: horizontal scanning) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( String longestCommonPrefix\(String[] strs\) {) s
18.6 322 M (25:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(if) s
/F-gs-font 7 7 SF
60.6 322 M
( \(strs.length == 0\) ) s
/Courier-Bold 7 7 SUF
144.6 322 M
(return) s
/F-gs-font 7 7 SF
169.8 322 M
( ) s
/Courier-Bold 7 7 SUF
174 322 M
("") s
/F-gs-font 7 7 SF
182.4 322 M
(;) s
18.6 314 M (26:) s
18.6 306 M (27:) s
35.4 306 M
(    String prefix = strs[0];) s
18.6 298 M (28:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
( \() s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( i = 1; i < strs.length; i++\) {) s
18.6 290 M (29:) s
35.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 290 M
(while) s
/F-gs-font 7 7 SF
81.6 290 M
( \(strs[i].indexOf\(prefix\) != 0\) {) s
18.6 282 M (30:) s
35.4 282 M
(        prefix = prefix.substring\(0, prefix.length\(\) - 1\);) s
18.6 274 M (31:) s
35.4 274 M
(        ) s
/Courier-Bold 7 7 SUF
69 274 M
(if) s
/F-gs-font 7 7 SF
77.4 274 M
( \(prefix.isEmpty\(\)\) ) s
/Courier-Bold 7 7 SUF
161.4 274 M
(return) s
/F-gs-font 7 7 SF
186.6 274 M
( ) s
/Courier-Bold 7 7 SUF
190.8 274 M
("") s
/F-gs-font 7 7 SF
199.2 274 M
(;) s
18.6 266 M (32:) s
35.4 266 M
(      }) s
18.6 258 M (33:) s
35.4 258 M
(    }) s
18.6 250 M (34:) s
18.6 242 M (35:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(return) s
/F-gs-font 7 7 SF
77.4 242 M
( prefix;) s
18.6 234 M (36:) s
35.4 234 M
(  }) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 218 M
(// approach 2: vertical scanning) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 210 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 210 M
(public) s
/F-gs-font 7 7 SF
69 210 M
( String longestCommonPrefix\(String[] strs\) {) s
18.6 202 M (40:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(if) s
/F-gs-font 7 7 SF
60.6 202 M
( \(strs == ) s
/Courier-Bold 7 7 SUF
102.6 202 M
(null) s
/F-gs-font 7 7 SF
119.4 202 M
( || strs.length == 0\) ) s
/Courier-Bold 7 7 SUF
211.8 202 M
(return) s
/F-gs-font 7 7 SF
237 202 M
( ) s
/Courier-Bold 7 7 SUF
241.2 202 M
("") s
/F-gs-font 7 7 SF
249.6 202 M
(;) s
18.6 194 M (41:) s
18.6 186 M (42:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(for) s
/F-gs-font 7 7 SF
64.8 186 M
( \() s
/Courier-Bold 7 7 SUF
73.2 186 M
(int) s
/F-gs-font 7 7 SF
85.8 186 M
( i = 0; i < strs[0].length\(\) ; i++\){) s
18.6 178 M (43:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(char) s
/F-gs-font 7 7 SF
77.4 178 M
( c = strs[0].charAt\(i\);) s
18.6 170 M (44:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(for) s
/F-gs-font 7 7 SF
73.2 170 M
( \() s
/Courier-Bold 7 7 SUF
81.6 170 M
(int) s
/F-gs-font 7 7 SF
94.2 170 M
( j = 1; j < strs.length; j ++\) {) s
18.6 162 M (45:) s
35.4 162 M
(        ) s
/Courier-Bold 7 7 SUF
69 162 M
(if) s
/F-gs-font 7 7 SF
77.4 162 M
( \(i == strs[j].length\(\) || strs[j].charAt\(i\) != c\)) s
18.6 154 M (46:) s
35.4 154 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 154 M
(return) s
/F-gs-font 7 7 SF
102.6 154 M
( strs[0].substring\(0, i\);) s
18.6 146 M (47:) s
35.4 146 M
(      }) s
18.6 138 M (48:) s
35.4 138 M
(    }) s
18.6 130 M (49:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(return) s
/F-gs-font 7 7 SF
77.4 130 M
( strs[0];) s
18.6 122 M (50:) s
35.4 122 M
(  }) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 106 M
(// approach 3: binary search) s
/F-gs-font 7 7 SF
18.6 98 M (53:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 98 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 98 M
(public) s
/F-gs-font 7 7 SF
69 98 M
( String longestCommonPrefix\(String[] strs\) {) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(if) s
/F-gs-font 7 7 SF
60.6 90 M
( \(strs == ) s
/Courier-Bold 7 7 SUF
102.6 90 M
(null) s
/F-gs-font 7 7 SF
119.4 90 M
( || strs.length == 0\) ) s
/Courier-Bold 7 7 SUF
211.8 90 M
(return) s
/F-gs-font 7 7 SF
237 90 M
( ) s
/Courier-Bold 7 7 SUF
241.2 90 M
("") s
/F-gs-font 7 7 SF
249.6 90 M
(;) s
18.6 82 M (55:) s
18.6 74 M (56:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(int) s
/F-gs-font 7 7 SF
64.8 74 M
( minLen = Integer.MAX_VALUE;) s
18.6 66 M (57:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(for) s
/F-gs-font 7 7 SF
64.8 66 M
( \(String str : strs\)) s
18.6 58 M (58:) s
35.4 58 M
(        minLen = Math.min\(minLen, str.length\(\)\);) s
18.6 50 M (59:) s
18.6 42 M (60:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(int) s
/F-gs-font 7 7 SF
64.8 42 M
( low = 1;) s
18.6 34 M (61:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(int) s
/F-gs-font 7 7 SF
64.8 34 M
( high = minLen;) s
18.6 26 M (62:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(while) s
/F-gs-font 7 7 SF
73.2 26 M
( \(low <= high\) {) s
18.6 18 M (63:) s
35.4 18 M
(        ) s
/Courier-Bold 7 7 SUF
69 18 M
(int) s
/F-gs-font 7 7 SF
81.6 18 M
( middle = \(low + high\) / 2;) s
18.6 10 M (64:) s
35.4 10 M
(        ) s
/Courier-Bold 7 7 SUF
69 10 M
(if) s
/F-gs-font 7 7 SF
77.4 10 M
( \(isCommonPrefix\(strs, middle\)\)) s
18.6 2 M (65:) s
35.4 2 M
(          low = middle + 1;) s
415.6 522 M (66:) s
432.4 522 M
(        ) s
/Courier-Bold 7 7 SUF
466 522 M
(else) s
/F-gs-font 7 7 SF
415.6 514 M (67:) s
432.4 514 M
(          high = middle - 1;) s
415.6 506 M (68:) s
432.4 506 M
(    }) s
415.6 498 M (69:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(return) s
/F-gs-font 7 7 SF
474.4 498 M
( strs[0].substring\(0, \(low + high\) / 2\);) s
415.6 490 M (70:) s
432.4 490 M
(  }) s
415.6 482 M (71:) s
415.6 474 M (72:) s
432.4 474 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 474 M
(private) s
/F-gs-font 7 7 SF
470.2 474 M
( ) s
/Courier-Bold 7 7 SUF
474.4 474 M
(boolean) s
/F-gs-font 7 7 SF
503.8 474 M
( isCommonPrefix\(String[] strs, ) s
/Courier-Bold 7 7 SUF
634 474 M
(int) s
/F-gs-font 7 7 SF
646.6 474 M
( len\){) s
415.6 466 M (73:) s
432.4 466 M
(    String str1 = strs[0].substring\(0,len\);) s
415.6 458 M (74:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(for) s
/F-gs-font 7 7 SF
461.8 458 M
( \() s
/Courier-Bold 7 7 SUF
470.2 458 M
(int) s
/F-gs-font 7 7 SF
482.8 458 M
( i = 1; i < strs.length; i++\)) s
415.6 450 M (75:) s
432.4 450 M
(        ) s
/Courier-Bold 7 7 SUF
466 450 M
(if) s
/F-gs-font 7 7 SF
474.4 450 M
( \(!strs[i].startsWith\(str1\)\)) s
415.6 442 M (76:) s
432.4 442 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 442 M
(return) s
/F-gs-font 7 7 SF
508 442 M
( ) s
/Courier-Bold 7 7 SUF
512.2 442 M
(false) s
/F-gs-font 7 7 SF
533.2 442 M
(;) s
415.6 434 M (77:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(return) s
/F-gs-font 7 7 SF
474.4 434 M
( ) s
/Courier-Bold 7 7 SUF
478.6 434 M
(true) s
/F-gs-font 7 7 SF
495.4 434 M
(;) s
415.6 426 M (78:) s
432.4 426 M
(  }) s
415.6 418 M (79:) s
432.4 418 M
(}) s
_R
S
%%Page: (1) 55
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/MaxSubArray.java) def
/fdir (./general) def
/ftail (MaxSubArray.java) def
% User defined strings:
/fmodstr (Thu Dec 13 00:15:01 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaxSubArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Given an integer array nums, find the contiguous subarray \(containing at lea) s
5 490 M
(st one number\) which has the largest sum and return its sum.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(        Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Input: [-2,1,-3,4,-1,2,1,-5,4],) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Output: 6) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Explanation: [4,-1,2,1] has the largest sum = 6.) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Follow up:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        If you have figured out the O\(n\) solution, try coding another solution using) s
5 410 M
( the divide and conquer approach, which is more subtle.) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( */) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
18.6 386 M (16:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(class) s
/F-gs-font 7 7 SF
56.4 386 M
( MaxSubArray {) s
18.6 378 M (17:) s
35.4 378 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 378 M
(public) s
/F-gs-font 7 7 SF
69 378 M
( ) s
/Courier-Bold 7 7 SUF
73.2 378 M
(int) s
/F-gs-font 7 7 SF
85.8 378 M
( maxSubArray\() s
/Courier-Bold 7 7 SUF
140.4 378 M
(int) s
/F-gs-font 7 7 SF
153 378 M
([] nums\) {) s
18.6 370 M (18:) s
35.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 370 M
(int) s
/F-gs-font 7 7 SF
64.8 370 M
( sum = Integer.MIN_VALUE;) s
18.6 362 M (19:) s
35.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 362 M
(int) s
/F-gs-font 7 7 SF
64.8 362 M
( running_sum = Integer.MIN_VALUE;) s
18.6 354 M (20:) s
18.6 346 M (21:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(for) s
/F-gs-font 7 7 SF
64.8 346 M
(\() s
/Courier-Bold 7 7 SUF
69 346 M
(int) s
/F-gs-font 7 7 SF
81.6 346 M
( i = 0; i < nums.length; i++\) {) s
18.6 338 M (22:) s
35.4 338 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 338 M
(if) s
/F-gs-font 7 7 SF
69 338 M
(\(running_sum < 0\) running_sum = nums[i];) s
18.6 330 M (23:) s
35.4 330 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 330 M
(else) s
/F-gs-font 7 7 SF
77.4 330 M
( running_sum += nums[i];) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(      sum = Math.max\(sum, running_sum\);) s
18.6 306 M (26:) s
35.4 306 M
(    }) s
18.6 298 M (27:) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(return) s
/F-gs-font 7 7 SF
77.4 290 M
( sum;) s
18.6 282 M (29:) s
35.4 282 M
(  }) s
18.6 274 M (30:) s
35.4 274 M
(}) s
_R
S
%%Page: (1) 56
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/RansomNote.java) def
/fdir (./general) def
/ftail (RansomNote.java) def
% User defined strings:
/fmodstr (Sun Dec 09 00:39:09 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RansomNote.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(// Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 514 M
(// Runtime: 9 ms, faster than 91.81% of Java online submissions for Ransom Note.) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 506 M
(//) s
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 498 M
(// Given an arbitrary ransom note string and another string containing letters from ) s
5 490 M
(all the) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 482 M
(// magazines, write a function that will return true if the ransom note can be const) s
5 474 M
(ructed) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 466 M
(// from the magazines ; otherwise, it will return false.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 458 M
(// ) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 450 M
(// Each letter in the magazine string can only be used once in your ransom note.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 442 M
(//) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 434 M
(//    Note: You may assume that both strings contain only lowercase letters.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 426 M
(//) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 418 M
(//    canConstruct\("a", "b"\) -> false) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 410 M
(//    canConstruct\("aa", "ab"\) -> false) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 402 M
(//    canConstruct\("aa", "aab"\) -> true) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(class) s
/F-gs-font 7 7 SF
56.4 386 M
( RansomNote {) s
18.6 378 M (17:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(public) s
/F-gs-font 7 7 SF
77.4 378 M
( ) s
/Courier-Bold 7 7 SUF
81.6 378 M
(static) s
/F-gs-font 7 7 SF
106.8 378 M
( ) s
/Courier-Bold 7 7 SUF
111 378 M
(void) s
/F-gs-font 7 7 SF
127.8 378 M
( main\(String[] args\) {) s
18.6 370 M (18:) s
35.4 370 M
(        System.out.println\(canConstruct\() s
/Courier-Bold 7 7 SUF
203.4 370 M
("a") s
/F-gs-font 7 7 SF
216 370 M
(, ) s
/Courier-Bold 7 7 SUF
224.4 370 M
("aaa") s
/F-gs-font 7 7 SF
245.4 370 M
(\)\);) s
18.6 362 M (19:) s
35.4 362 M
(    }) s
18.6 354 M (20:) s
18.6 346 M (21:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(public) s
/F-gs-font 7 7 SF
77.4 346 M
( ) s
/Courier-Bold 7 7 SUF
81.6 346 M
(static) s
/F-gs-font 7 7 SF
106.8 346 M
( ) s
/Courier-Bold 7 7 SUF
111 346 M
(boolean) s
/F-gs-font 7 7 SF
140.4 346 M
( canConstruct\(String ransomNote, String magazine\) {) s
18.6 338 M (22:) s
35.4 338 M
(        ) s
/Courier-Bold 7 7 SUF
69 338 M
(if) s
/F-gs-font 7 7 SF
77.4 338 M
(\(ransomNote.length\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
190.8 338 M
(return) s
/F-gs-font 7 7 SF
216 338 M
( ) s
/Courier-Bold 7 7 SUF
220.2 338 M
(true) s
/F-gs-font 7 7 SF
237 338 M
(;) s
18.6 330 M (23:) s
35.4 330 M
(        ) s
/Courier-Bold 7 7 SUF
69 330 M
(if) s
/F-gs-font 7 7 SF
77.4 330 M
(\(ransomNote.length\(\) > magazine.length\(\)\) ) s
/Courier-Bold 7 7 SUF
253.8 330 M
(return) s
/F-gs-font 7 7 SF
279 330 M
( ) s
/Courier-Bold 7 7 SUF
283.2 330 M
(false) s
/F-gs-font 7 7 SF
304.2 330 M
(;) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(        ) s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( remaining_chars = ransomNote.length\(\);) s
18.6 306 M (26:) s
35.4 306 M
(        ) s
/Courier-Bold 7 7 SUF
69 306 M
(int) s
/F-gs-font 7 7 SF
81.6 306 M
([] ransom_char_count = ) s
/Courier-Bold 7 7 SUF
178.2 306 M
(new) s
/F-gs-font 7 7 SF
190.8 306 M
( ) s
/Courier-Bold 7 7 SUF
195 306 M
(int) s
/F-gs-font 7 7 SF
207.6 306 M
([255];) s
18.6 298 M (27:) s
35.4 298 M
(        ) s
/Courier-Bold 7 7 SUF
69 298 M
(for) s
/F-gs-font 7 7 SF
81.6 298 M
(\() s
/Courier-Bold 7 7 SUF
85.8 298 M
(char) s
/F-gs-font 7 7 SF
102.6 298 M
( c : ransomNote.toCharArray\(\)\) ransom_char_count[c - ) s
/Courier-Bold 7 7 SUF
325.2 298 M
('0') s
/F-gs-font 7 7 SF
337.8 298 M
(] += 1;) s
18.6 290 M (28:) s
18.6 282 M (29:) s
35.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
69 282 M
(for) s
/F-gs-font 7 7 SF
81.6 282 M
(\() s
/Courier-Bold 7 7 SUF
85.8 282 M
(char) s
/F-gs-font 7 7 SF
102.6 282 M
( c : magazine.toCharArray\(\)\) {) s
18.6 274 M (30:) s
35.4 274 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 274 M
(if) s
/F-gs-font 7 7 SF
94.2 274 M
(\(remaining_chars == 0\) ) s
/Courier-Bold 7 7 SUF
190.8 274 M
(return) s
/F-gs-font 7 7 SF
216 274 M
( ) s
/Courier-Bold 7 7 SUF
220.2 274 M
(true) s
/F-gs-font 7 7 SF
237 274 M
(;) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 258 M
(int) s
/F-gs-font 7 7 SF
98.4 258 M
( ord = c - ) s
/Courier-Bold 7 7 SUF
144.6 258 M
('0') s
/F-gs-font 7 7 SF
157.2 258 M
(;) s
18.6 250 M (33:) s
35.4 250 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 250 M
(if) s
/F-gs-font 7 7 SF
94.2 250 M
(\(ransom_char_count[ord] > 0\) {) s
18.6 242 M (34:) s
35.4 242 M
(                ransom_char_count[ord] -= 1;) s
18.6 234 M (35:) s
35.4 234 M
(                remaining_chars--;) s
18.6 226 M (36:) s
35.4 226 M
(            }) s
18.6 218 M (37:) s
35.4 218 M
(        }) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(        ) s
/Courier-Bold 7 7 SUF
69 202 M
(return) s
/F-gs-font 7 7 SF
94.2 202 M
( remaining_chars == 0;) s
18.6 194 M (40:) s
35.4 194 M
(    }) s
18.6 186 M (41:) s
35.4 186 M
(}) s
_R
S
%%Page: (1) 57
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/SortColors.java) def
/fdir (./general) def
/ftail (SortColors.java) def
% User defined strings:
/fmodstr (Wed Mar 06 21:26:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SortColors.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array with n objects colored red, white or blue, sort them in-place so th) s
5 490 M
(at objects of the same color are adjacent, with the colors in the order red, white and blue.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Here, we will use the integers 0, 1, and 2 to represent the color red, white, and ) s
5 466 M
(blue respectively.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Note: You are not suppose to use the library's sort function for this problem.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: [2,0,2,1,1,0]) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: [0,0,1,1,2,2]) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  A rather straight forward solution is a two-pass algorithm using counting sort.) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  First, iterate the array counting number of 0's, 1's, and 2's, then overwrite arra) s
5 370 M
(y with total number of 0's, then 1's and followed by 2's.) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Could you come up with a one-pass algorithm using only constant space?) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( */) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
18.6 338 M (21:) s
/Courier-Bold 7 7 SUF
35.4 338 M
(class) s
/F-gs-font 7 7 SF
56.4 338 M
( Solution {) s
18.6 330 M (22:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( ) s
/Courier-Bold 7 7 SUF
73.2 330 M
(void) s
/F-gs-font 7 7 SF
90 330 M
( sortColors\() s
/Courier-Bold 7 7 SUF
140.4 330 M
(int) s
/F-gs-font 7 7 SF
153 330 M
([] nums\) {) s
18.6 322 M (23:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
([] ends = ) s
/Courier-Bold 7 7 SUF
106.8 322 M
(new) s
/F-gs-font 7 7 SF
119.4 322 M
( ) s
/Courier-Bold 7 7 SUF
123.6 322 M
(int) s
/F-gs-font 7 7 SF
136.2 322 M
([2];) s
18.6 314 M (24:) s
18.6 306 M (25:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(for) s
/F-gs-font 7 7 SF
64.8 306 M
(\() s
/Courier-Bold 7 7 SUF
69 306 M
(int) s
/F-gs-font 7 7 SF
81.6 306 M
( i = 0; i < nums.length; i++\) {) s
18.6 298 M (26:) s
35.4 298 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 298 M
(if) s
/F-gs-font 7 7 SF
69 298 M
(\(nums[i] == 0\) {) s
18.6 290 M (27:) s
35.4 290 M
(        swap\(nums, i, ends[0]\);) s
18.6 282 M (28:) s
35.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
69 282 M
(if) s
/F-gs-font 7 7 SF
77.4 282 M
(\(nums[i] == 1\) swap\(nums, i, ends[1]\);) s
18.6 274 M (29:) s
18.6 266 M (30:) s
35.4 266 M
(        ends[0]++;) s
18.6 258 M (31:) s
35.4 258 M
(        ends[1]++;) s
18.6 250 M (32:) s
35.4 250 M
(      } ) s
/Courier-Bold 7 7 SUF
69 250 M
(else) s
/F-gs-font 7 7 SF
85.8 250 M
( ) s
/Courier-Bold 7 7 SUF
90 250 M
(if) s
/F-gs-font 7 7 SF
98.4 250 M
(\(nums[i] == 1\) {) s
18.6 242 M (33:) s
35.4 242 M
(        swap\(nums, i, ends[1]\);) s
18.6 234 M (34:) s
18.6 226 M (35:) s
35.4 226 M
(        ends[1]++;) s
18.6 218 M (36:) s
35.4 218 M
(      }) s
18.6 210 M (37:) s
35.4 210 M
(    }) s
18.6 202 M (38:) s
35.4 202 M
(  }) s
18.6 194 M (39:) s
18.6 186 M (40:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(void) s
/F-gs-font 7 7 SF
90 186 M
( swap\() s
/Courier-Bold 7 7 SUF
115.2 186 M
(int) s
/F-gs-font 7 7 SF
127.8 186 M
([] nums, ) s
/Courier-Bold 7 7 SUF
165.6 186 M
(int) s
/F-gs-font 7 7 SF
178.2 186 M
( x, ) s
/Courier-Bold 7 7 SUF
195 186 M
(int) s
/F-gs-font 7 7 SF
207.6 186 M
( y\) {) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(x == y\) ) s
/Courier-Bold 7 7 SUF
98.4 178 M
(return) s
/F-gs-font 7 7 SF
123.6 178 M
(;) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
( temp = nums[x];) s
18.6 154 M (44:) s
35.4 154 M
(    nums[x] = nums[y];) s
18.6 146 M (45:) s
35.4 146 M
(    nums[y] = temp;) s
18.6 138 M (46:) s
35.4 138 M
(  }) s
18.6 130 M (47:) s
35.4 130 M
(}) s
_R
S
%%Page: (1) 58
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/FlattenNestedList.java) def
/fdir (./general) def
/ftail (FlattenNestedList.java) def
% User defined strings:
/fmodstr (Sun Apr 07 03:10:33 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FlattenNestedList.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a nested list of integers, implement an iterator to flatten it.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Each element is either an integer, or a list -- whose elements may also be integer) s
5 474 M
(s or other lists.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: [[1,1],2,[1,1]]) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: [1,1,2,1,1]) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Explanation: By calling next repeatedly until hasNext returns false,) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  the order of elements returned by next should be: [1,1,2,1,1].) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Input: [1,[4,[6]]]) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: [1,4,6]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Explanation: By calling next repeatedly until hasNext returns false,) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  the order of elements returned by next should be: [1,4,6].) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(/**) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * // This is the interface that allows for creating nested lists.) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( * // You should not implement it, or speculate about its implementation) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( * public interface NestedInteger {) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( *) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     // @return true if this NestedInteger holds a single integer, rather than a n) s
5 298 M
(ested list.) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( *     public boolean isInteger\(\);) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( *) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( *     // @return the single integer that this NestedInteger holds, if it holds a si) s
5 266 M
(ngle integer) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     // Return null if this NestedInteger holds a nested list) s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( *     public Integer getInteger\(\);) s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( *) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( *     // @return the nested list that this NestedInteger holds, if it holds a neste) s
5 226 M
(d list) s
/F-gs-font 7 7 SF
18.6 218 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
( *     // Return null if this NestedInteger holds a single integer) s
/F-gs-font 7 7 SF
18.6 210 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( *     public List<NestedInteger> getList\(\);) s
/F-gs-font 7 7 SF
18.6 202 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( * }) s
/F-gs-font 7 7 SF
18.6 194 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
( */) s
/F-gs-font 7 7 SF
18.6 186 M (39:) s
/Courier-Bold 7 7 SUF
35.4 186 M
(public) s
/F-gs-font 7 7 SF
60.6 186 M
( ) s
/Courier-Bold 7 7 SUF
64.8 186 M
(class) s
/F-gs-font 7 7 SF
85.8 186 M
( NestedIterator ) s
/Courier-Bold 7 7 SUF
153 186 M
(implements) s
/F-gs-font 7 7 SF
195 186 M
( Iterator<Integer> {) s
18.6 178 M (40:) s
35.4 178 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 178 M
(int) s
/F-gs-font 7 7 SF
56.4 178 M
( index;) s
18.6 170 M (41:) s
35.4 170 M
(  List<Integer> list;) s
18.6 162 M (42:) s
18.6 154 M (43:) s
35.4 154 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 154 M
(public) s
/F-gs-font 7 7 SF
69 154 M
( NestedIterator\(List<NestedInteger> nestedList\) {) s
18.6 146 M (44:) s
35.4 146 M
(    index = 0;) s
18.6 138 M (45:) s
35.4 138 M
(    list = ) s
/Courier-Bold 7 7 SUF
81.6 138 M
(new) s
/F-gs-font 7 7 SF
94.2 138 M
( ArrayList<>\(\);) s
18.6 130 M (46:) s
18.6 122 M (47:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(for) s
/F-gs-font 7 7 SF
64.8 122 M
(\(NestedInteger nested : nestedList\)) s
18.6 114 M (48:) s
35.4 114 M
(      addToList\(nested\);) s
18.6 106 M (49:) s
35.4 106 M
(  }) s
18.6 98 M (50:) s
18.6 90 M (51:) s
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(private) s
/F-gs-font 7 7 SF
73.2 90 M
( ) s
/Courier-Bold 7 7 SUF
77.4 90 M
(void) s
/F-gs-font 7 7 SF
94.2 90 M
( addToList\(NestedInteger nested\) {) s
18.6 82 M (52:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(if) s
/F-gs-font 7 7 SF
60.6 82 M
( \(nested.isInteger\(\)\) {) s
18.6 74 M (53:) s
35.4 74 M
(      list.add\(nested.getInteger\(\)\);) s
18.6 66 M (54:) s
35.4 66 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(else) s
/F-gs-font 7 7 SF
77.4 66 M
( {) s
18.6 58 M (55:) s
35.4 58 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 58 M
(for) s
/F-gs-font 7 7 SF
73.2 58 M
(\(NestedInteger inside : nested.getList\(\)\)) s
18.6 50 M (56:) s
35.4 50 M
(        addToList\(inside\);) s
18.6 42 M (57:) s
35.4 42 M
(    }) s
18.6 34 M (58:) s
35.4 34 M
(  }) s
18.6 26 M (59:) s
18.6 18 M (60:) s
35.4 18 M
(  @Override) s
18.6 10 M (61:) s
35.4 10 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 10 M
(public) s
/F-gs-font 7 7 SF
69 10 M
( Integer next\(\) {) s
18.6 2 M (62:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(int) s
/F-gs-font 7 7 SF
64.8 2 M
( value = list.get\(index\);) s
415.6 522 M (63:) s
432.4 522 M
(    index++;) s
415.6 514 M (64:) s
415.6 506 M (65:) s
432.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 506 M
(return) s
/F-gs-font 7 7 SF
474.4 506 M
( value;) s
415.6 498 M (66:) s
432.4 498 M
(  }) s
415.6 490 M (67:) s
415.6 482 M (68:) s
432.4 482 M
(  @Override) s
415.6 474 M (69:) s
432.4 474 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 474 M
(public) s
/F-gs-font 7 7 SF
466 474 M
( ) s
/Courier-Bold 7 7 SUF
470.2 474 M
(boolean) s
/F-gs-font 7 7 SF
499.6 474 M
( hasNext\(\) {) s
415.6 466 M (70:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(return) s
/F-gs-font 7 7 SF
474.4 466 M
( index < list.size\(\);) s
415.6 458 M (71:) s
432.4 458 M
(  }) s
415.6 450 M (72:) s
432.4 450 M
(}) s
415.6 442 M (73:) s
415.6 434 M (74:) s
/Courier-Oblique 7 7 SUF
432.4 434 M
(/**) s
/F-gs-font 7 7 SF
415.6 426 M (75:) s
/Courier-Oblique 7 7 SUF
432.4 426 M
( * Your NestedIterator object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
415.6 418 M (76:) s
/Courier-Oblique 7 7 SUF
432.4 418 M
( * NestedIterator i = new NestedIterator\(nestedList\);) s
/F-gs-font 7 7 SF
415.6 410 M (77:) s
/Courier-Oblique 7 7 SUF
432.4 410 M
( * while \(i.hasNext\(\)\) v[f\(\)] = i.next\(\);) s
/F-gs-font 7 7 SF
415.6 402 M (78:) s
/Courier-Oblique 7 7 SUF
432.4 402 M
( */) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 59
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/RobotSimulatorDistance.java) def
/fdir (./general) def
/ftail (RobotSimulatorDistance.java) def
% User defined strings:
/fmodstr (Sun Dec 09 04:53:01 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RobotSimulatorDistance.java Page 1 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(A robot on an infinite grid starts at point \(0, 0\) and faces north.  The robot can r) s
5 490 M
(eceive one of three possible types of commands:) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(-2: turn left 90 degrees) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(-1: turn right 90 degrees) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(1 <= x <= 9: move forward x units) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(Some of the grid squares are obstacles.) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(The i-th obstacle is at grid point \(obstacles[i][0], obstacles[i][1]\)) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(If the robot would try to move onto them, the robot stays on the previous grid squar) s
5 410 M
(e instead \(but still continues following the rest of the route.\)) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(Return the square of the maximum Euclidean distance that the robot will be from the ) s
5 386 M
(origin.) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(Example 1:) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(Input: commands = [4,-1,3], obstacles = []) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(Output: 25) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(Explanation: robot will go to \(3, 4\)) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(Example 2:) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(Input: commands = [4,-1,4,-2,4], obstacles = [[2,4]]) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(Output: 65) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(Explanation: robot will be stuck at \(1, 4\) before turning left and going to \(1, 8\)) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(Note:) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(0 <= commands.length <= 10000) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(0 <= obstacles.length <= 10000) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(-30000 <= obstacle[i][0] <= 30000) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(-30000 <= obstacle[i][1] <= 30000) s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(The answer is guaranteed to be less than 2 ^ 31.) s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
18.6 226 M (35:) s
/Courier-Bold 7 7 SUF
35.4 226 M
(import) s
/F-gs-font 7 7 SF
60.6 226 M
( java.util.*;) s
18.6 218 M (36:) s
/Courier-Bold 7 7 SUF
35.4 218 M
(import) s
/F-gs-font 7 7 SF
60.6 218 M
( java.lang.Math;) s
18.6 210 M (37:) s
18.6 202 M (38:) s
/Courier-Bold 7 7 SUF
35.4 202 M
(class) s
/F-gs-font 7 7 SF
56.4 202 M
( RobotSimulatorDistance {) s
18.6 194 M (39:) s
35.4 194 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 194 M
(public) s
/F-gs-font 7 7 SF
69 194 M
( ) s
/Courier-Bold 7 7 SUF
73.2 194 M
(static) s
/F-gs-font 7 7 SF
98.4 194 M
( ) s
/Courier-Bold 7 7 SUF
102.6 194 M
(void) s
/F-gs-font 7 7 SF
119.4 194 M
( main\(String[] args\) {) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
([] commands = ) s
/Courier-Bold 7 7 SUF
123.6 186 M
(new) s
/F-gs-font 7 7 SF
136.2 186 M
( ) s
/Courier-Bold 7 7 SUF
140.4 186 M
(int) s
/F-gs-font 7 7 SF
153 186 M
([] { -1, 1, 2, -2, 5 };) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(int) s
/F-gs-font 7 7 SF
64.8 178 M
([][] obstacles = ) s
/Courier-Bold 7 7 SUF
136.2 178 M
(null) s
/F-gs-font 7 7 SF
153 178 M
(;) s
18.6 170 M (42:) s
35.4 170 M
(    robotSim\(commands, obstacles\);) s
18.6 162 M (43:) s
35.4 162 M
(  }) s
18.6 154 M (44:) s
18.6 146 M (45:) s
35.4 146 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 146 M
(// option 1: use 3 HashSets) s
/F-gs-font 7 7 SF
18.6 138 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 138 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 138 M
(public) s
/F-gs-font 7 7 SF
69 138 M
( ) s
/Courier-Bold 7 7 SUF
73.2 138 M
(static) s
/F-gs-font 7 7 SF
98.4 138 M
( ) s
/Courier-Bold 7 7 SUF
102.6 138 M
(int) s
/F-gs-font 7 7 SF
115.2 138 M
( robotSim\() s
/Courier-Bold 7 7 SUF
157.2 138 M
(int) s
/F-gs-font 7 7 SF
169.8 138 M
([] commands, ) s
/Courier-Bold 7 7 SUF
224.4 138 M
(int) s
/F-gs-font 7 7 SF
237 138 M
([][] obstacles\) {) s
18.6 130 M (47:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(int) s
/F-gs-font 7 7 SF
64.8 130 M
( x_coord = 0;) s
18.6 122 M (48:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(int) s
/F-gs-font 7 7 SF
64.8 122 M
( y_coord = 0;) s
18.6 114 M (49:) s
18.6 106 M (50:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(int) s
/F-gs-font 7 7 SF
64.8 106 M
([] x_coord_multiplier = ) s
/Courier-Bold 7 7 SUF
165.6 106 M
(new) s
/F-gs-font 7 7 SF
178.2 106 M
( ) s
/Courier-Bold 7 7 SUF
182.4 106 M
(int) s
/F-gs-font 7 7 SF
195 106 M
([] { 0, 1, 0, -1 };) s
18.6 98 M (51:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(int) s
/F-gs-font 7 7 SF
64.8 98 M
([] y_coord_multiplier = ) s
/Courier-Bold 7 7 SUF
165.6 98 M
(new) s
/F-gs-font 7 7 SF
178.2 98 M
( ) s
/Courier-Bold 7 7 SUF
182.4 98 M
(int) s
/F-gs-font 7 7 SF
195 98 M
([] { 1, 0, -1, 0 };) s
18.6 90 M (52:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(int) s
/F-gs-font 7 7 SF
64.8 90 M
( direction_idx = 0;) s
18.6 82 M (53:) s
18.6 74 M (54:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(int) s
/F-gs-font 7 7 SF
64.8 74 M
( max_distance = 0;) s
18.6 66 M (55:) s
18.6 58 M (56:) s
35.4 58 M
(    HashSet<Integer> set_x = ) s
/Courier-Bold 7 7 SUF
157.2 58 M
(new) s
/F-gs-font 7 7 SF
169.8 58 M
( HashSet<>\(\);) s
18.6 50 M (57:) s
35.4 50 M
(    HashSet<Integer> set_y = ) s
/Courier-Bold 7 7 SUF
157.2 50 M
(new) s
/F-gs-font 7 7 SF
169.8 50 M
( HashSet<>\(\);) s
18.6 42 M (58:) s
35.4 42 M
(    HashSet<String> set = ) s
/Courier-Bold 7 7 SUF
144.6 42 M
(new) s
/F-gs-font 7 7 SF
157.2 42 M
( HashSet<>\(\);) s
18.6 34 M (59:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(for) s
/F-gs-font 7 7 SF
64.8 34 M
(\() s
/Courier-Bold 7 7 SUF
69 34 M
(int) s
/F-gs-font 7 7 SF
81.6 34 M
([] obstacle : obstacles\) {) s
18.6 26 M (60:) s
35.4 26 M
(      set_x.add\(obstacle[0]\);) s
18.6 18 M (61:) s
35.4 18 M
(      set_y.add\(obstacle[1]\);) s
18.6 10 M (62:) s
35.4 10 M
(      set.add\(obstacle[0] + ) s
/Courier-Bold 7 7 SUF
153 10 M
(" ") s
/F-gs-font 7 7 SF
165.6 10 M
( + obstacle[1]\);) s
18.6 2 M (63:) s
35.4 2 M
(    }) s
415.6 522 M (64:) s
415.6 514 M (65:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(for) s
/F-gs-font 7 7 SF
461.8 514 M
(\() s
/Courier-Bold 7 7 SUF
466 514 M
(int) s
/F-gs-font 7 7 SF
478.6 514 M
( command : commands\) {) s
415.6 506 M (66:) s
432.4 506 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 506 M
(if) s
/F-gs-font 7 7 SF
466 506 M
(\(command == -1\) {) s
415.6 498 M (67:) s
432.4 498 M
(        direction_idx = \(direction_idx + 1\) % 4;) s
415.6 490 M (68:) s
432.4 490 M
(      } ) s
/Courier-Bold 7 7 SUF
466 490 M
(else) s
/F-gs-font 7 7 SF
482.8 490 M
( ) s
/Courier-Bold 7 7 SUF
487 490 M
(if) s
/F-gs-font 7 7 SF
495.4 490 M
(\(command == -2\) {) s
415.6 482 M (69:) s
432.4 482 M
(        direction_idx = \(direction_idx + 3\) % 4;) s
415.6 474 M (70:) s
432.4 474 M
(      } ) s
/Courier-Bold 7 7 SUF
466 474 M
(else) s
/F-gs-font 7 7 SF
482.8 474 M
( {) s
415.6 466 M (71:) s
432.4 466 M
(        ) s
/Courier-Bold 7 7 SUF
466 466 M
(if) s
/F-gs-font 7 7 SF
474.4 466 M
(\(direction_idx % 2 == 0\) {) s
415.6 458 M (72:) s
432.4 458 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 458 M
(int) s
/F-gs-font 7 7 SF
487 458 M
( target_y = y_coord + \(command * y_coord_multiplier[direction_idx]\);) s
415.6 450 M (73:) s
415.6 442 M (74:) s
432.4 442 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 442 M
(if) s
/F-gs-font 7 7 SF
482.8 442 M
(\(set_x.contains\(x_coord\)\) {) s
415.6 434 M (75:) s
432.4 434 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 434 M
(if) s
/F-gs-font 7 7 SF
491.2 434 M
(\(target_y > y_coord\) {) s
415.6 426 M (76:) s
432.4 426 M
(              ) s
/Courier-Bold 7 7 SUF
491.2 426 M
(for) s
/F-gs-font 7 7 SF
503.8 426 M
(\() s
/Courier-Bold 7 7 SUF
508 426 M
(int) s
/F-gs-font 7 7 SF
520.6 426 M
( i = y_coord + 1; i <= target_y; i++\) {) s
415.6 418 M (77:) s
432.4 418 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 418 M
(if) s
/F-gs-font 7 7 SF
508 418 M
(\(set.contains\(x_coord + ) s
/Courier-Bold 7 7 SUF
608.8 418 M
(" ") s
/F-gs-font 7 7 SF
621.4 418 M
( + i\)\) {) s
415.6 410 M (78:) s
432.4 410 M
(                  target_y = i - 1;) s
415.6 402 M (79:) s
432.4 402 M
(                  ) s
/Courier-Bold 7 7 SUF
508 402 M
(break) s
/F-gs-font 7 7 SF
529 402 M
(;) s
415.6 394 M (80:) s
432.4 394 M
(                }) s
415.6 386 M (81:) s
432.4 386 M
(              }) s
415.6 378 M (82:) s
432.4 378 M
(            } ) s
/Courier-Bold 7 7 SUF
491.2 378 M
(else) s
/F-gs-font 7 7 SF
508 378 M
( {) s
415.6 370 M (83:) s
432.4 370 M
(              ) s
/Courier-Bold 7 7 SUF
491.2 370 M
(for) s
/F-gs-font 7 7 SF
503.8 370 M
(\() s
/Courier-Bold 7 7 SUF
508 370 M
(int) s
/F-gs-font 7 7 SF
520.6 370 M
( i = y_coord - 1; i >= target_y; i--\) {) s
415.6 362 M (84:) s
432.4 362 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 362 M
(if) s
/F-gs-font 7 7 SF
508 362 M
(\(set.contains\(x_coord + ) s
/Courier-Bold 7 7 SUF
608.8 362 M
(" ") s
/F-gs-font 7 7 SF
621.4 362 M
( + i\)\) {) s
415.6 354 M (85:) s
432.4 354 M
(                  target_y = i + 1;) s
415.6 346 M (86:) s
432.4 346 M
(                  ) s
/Courier-Bold 7 7 SUF
508 346 M
(break) s
/F-gs-font 7 7 SF
529 346 M
(;) s
415.6 338 M (87:) s
432.4 338 M
(                }) s
415.6 330 M (88:) s
432.4 330 M
(              }) s
415.6 322 M (89:) s
432.4 322 M
(            }) s
415.6 314 M (90:) s
432.4 314 M
(          }) s
415.6 306 M (91:) s
415.6 298 M (92:) s
432.4 298 M
(          y_coord = target_y;) s
415.6 290 M (93:) s
432.4 290 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 290 M
(else) s
/F-gs-font 7 7 SF
491.2 290 M
( {) s
415.6 282 M (94:) s
432.4 282 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 282 M
(int) s
/F-gs-font 7 7 SF
487 282 M
( target_x = x_coord + \(command * x_coord_multiplier[direction_idx]\);) s
415.6 274 M (95:) s
415.6 266 M (96:) s
432.4 266 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 266 M
(if) s
/F-gs-font 7 7 SF
482.8 266 M
(\(set_y.contains\(y_coord\)\) {) s
415.6 258 M (97:) s
432.4 258 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 258 M
(if) s
/F-gs-font 7 7 SF
491.2 258 M
(\(target_x > x_coord\) {) s
415.6 250 M (98:) s
432.4 250 M
(              ) s
/Courier-Bold 7 7 SUF
491.2 250 M
(for) s
/F-gs-font 7 7 SF
503.8 250 M
(\() s
/Courier-Bold 7 7 SUF
508 250 M
(int) s
/F-gs-font 7 7 SF
520.6 250 M
( i = x_coord + 1; i <= target_x; i++\) {) s
415.6 242 M (99:) s
432.4 242 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 242 M
(if) s
/F-gs-font 7 7 SF
508 242 M
(\(set.contains\(i + ) s
/Courier-Bold 7 7 SUF
583.6 242 M
(" ") s
/F-gs-font 7 7 SF
596.2 242 M
( + y_coord\)\) {) s
411.4 234 M (100:) s
432.4 234 M
(                  target_x = i - 1;) s
411.4 226 M (101:) s
432.4 226 M
(                  ) s
/Courier-Bold 7 7 SUF
508 226 M
(break) s
/F-gs-font 7 7 SF
529 226 M
(;) s
411.4 218 M (102:) s
432.4 218 M
(                }) s
411.4 210 M (103:) s
432.4 210 M
(              }) s
411.4 202 M (104:) s
432.4 202 M
(            } ) s
/Courier-Bold 7 7 SUF
491.2 202 M
(else) s
/F-gs-font 7 7 SF
508 202 M
( {) s
411.4 194 M (105:) s
432.4 194 M
(              ) s
/Courier-Bold 7 7 SUF
491.2 194 M
(for) s
/F-gs-font 7 7 SF
503.8 194 M
(\() s
/Courier-Bold 7 7 SUF
508 194 M
(int) s
/F-gs-font 7 7 SF
520.6 194 M
( i = x_coord - 1; i >= target_x; i--\) {) s
411.4 186 M (106:) s
432.4 186 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 186 M
(if) s
/F-gs-font 7 7 SF
508 186 M
(\(set.contains\(i + ) s
/Courier-Bold 7 7 SUF
583.6 186 M
(" ") s
/F-gs-font 7 7 SF
596.2 186 M
( + y_coord\)\) {) s
411.4 178 M (107:) s
432.4 178 M
(                  target_x = i + 1;) s
411.4 170 M (108:) s
432.4 170 M
(                  ) s
/Courier-Bold 7 7 SUF
508 170 M
(break) s
/F-gs-font 7 7 SF
529 170 M
(;) s
411.4 162 M (109:) s
432.4 162 M
(                }) s
411.4 154 M (110:) s
432.4 154 M
(              }) s
411.4 146 M (111:) s
432.4 146 M
(            }) s
411.4 138 M (112:) s
432.4 138 M
(          }) s
411.4 130 M (113:) s
411.4 122 M (114:) s
432.4 122 M
(          x_coord = target_x;) s
411.4 114 M (115:) s
432.4 114 M
(        }) s
411.4 106 M (116:) s
432.4 106 M
(      }) s
411.4 98 M (117:) s
411.4 90 M (118:) s
432.4 90 M
(      max_distance = Math.max\(max_distance, x_coord * x_coord + y_coord * y_coord\);) s
411.4 82 M (119:) s
432.4 82 M
(    }) s
411.4 74 M (120:) s
411.4 66 M (121:) s
432.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 66 M
(return) s
/F-gs-font 7 7 SF
474.4 66 M
( max_distance;) s
411.4 58 M (122:) s
432.4 58 M
(  }) s
411.4 50 M (123:) s
411.4 42 M (124:) s
432.4 42 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 42 M
(// option 2: use 2 maps and sort the content, then use binarySearch \(not implement) s
402 34 M
(ed\)) s
/F-gs-font 7 7 SF
411.4 26 M (125:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 26 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 26 M
(public) s
/F-gs-font 7 7 SF
466 26 M
( ) s
/Courier-Bold 7 7 SUF
470.2 26 M
(static) s
/F-gs-font 7 7 SF
495.4 26 M
( ) s
/Courier-Bold 7 7 SUF
499.6 26 M
(int) s
/F-gs-font 7 7 SF
512.2 26 M
( robotSim2\() s
/Courier-Bold 7 7 SUF
558.4 26 M
(int) s
/F-gs-font 7 7 SF
571 26 M
([] commands, ) s
/Courier-Bold 7 7 SUF
625.6 26 M
(int) s
/F-gs-font 7 7 SF
638.2 26 M
([][] obstacles\) {) s
411.4 18 M (126:) s
432.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 18 M
(int) s
/F-gs-font 7 7 SF
461.8 18 M
( x_coord = 0;) s
411.4 10 M (127:) s
432.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 10 M
(int) s
/F-gs-font 7 7 SF
461.8 10 M
( y_coord = 0;) s
411.4 2 M (128:) s
_R
S
%%Page: (2) 60
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (./general/RobotSimulatorDistance.java) def
/fdir (./general) def
/ftail (RobotSimulatorDistance.java) def
% User defined strings:
/fmodstr (Sun Dec 09 04:53:01 2018) def
/pagenumstr (2) def
/user_header_p true def
/user_header_left_str (RobotSimulatorDistance.java Page 2 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
14.4 522 M (129:) s
35.4 522 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 522 M
(int) s
/F-gs-font 7 7 SF
64.8 522 M
([] x_coord_multiplier = ) s
/Courier-Bold 7 7 SUF
165.6 522 M
(new) s
/F-gs-font 7 7 SF
178.2 522 M
( ) s
/Courier-Bold 7 7 SUF
182.4 522 M
(int) s
/F-gs-font 7 7 SF
195 522 M
([] { 0, 1, 0, -1 };) s
14.4 514 M (130:) s
35.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 514 M
(int) s
/F-gs-font 7 7 SF
64.8 514 M
([] y_coord_multiplier = ) s
/Courier-Bold 7 7 SUF
165.6 514 M
(new) s
/F-gs-font 7 7 SF
178.2 514 M
( ) s
/Courier-Bold 7 7 SUF
182.4 514 M
(int) s
/F-gs-font 7 7 SF
195 514 M
([] { 1, 0, -1, 0 };) s
14.4 506 M (131:) s
35.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 506 M
(int) s
/F-gs-font 7 7 SF
64.8 506 M
( direction_idx = 0;) s
14.4 498 M (132:) s
14.4 490 M (133:) s
35.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 490 M
(int) s
/F-gs-font 7 7 SF
64.8 490 M
( max_distance = 0;) s
14.4 482 M (134:) s
14.4 474 M (135:) s
35.4 474 M
(    HashMap<Integer, ArrayList<Integer>> map_x = ) s
/Courier-Bold 7 7 SUF
241.2 474 M
(new) s
/F-gs-font 7 7 SF
253.8 474 M
( HashMap<>\(\);) s
14.4 466 M (136:) s
35.4 466 M
(    HashMap<Integer, ArrayList<Integer>> map_y = ) s
/Courier-Bold 7 7 SUF
241.2 466 M
(new) s
/F-gs-font 7 7 SF
253.8 466 M
( HashMap<>\(\);) s
14.4 458 M (137:) s
35.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 458 M
(for) s
/F-gs-font 7 7 SF
64.8 458 M
(\() s
/Courier-Bold 7 7 SUF
69 458 M
(int) s
/F-gs-font 7 7 SF
81.6 458 M
([] obstacle : obstacles\) {) s
14.4 450 M (138:) s
35.4 450 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 450 M
(if) s
/F-gs-font 7 7 SF
69 450 M
(\(!map_x.containsKey\(obstacle[0]\)\) map_x.put\(obstacle[0], ) s
/Courier-Bold 7 7 SUF
308.4 450 M
(new) s
/F-gs-font 7 7 SF
321 450 M
( ArrayList<Integ) s
5 442 M
(er>\(\)\);) s
14.4 434 M (139:) s
35.4 434 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 434 M
(if) s
/F-gs-font 7 7 SF
69 434 M
(\(!map_y.containsKey\(obstacle[1]\)\) map_y.put\(obstacle[1], ) s
/Courier-Bold 7 7 SUF
308.4 434 M
(new) s
/F-gs-font 7 7 SF
321 434 M
( ArrayList<Integ) s
5 426 M
(er>\(\)\);) s
14.4 418 M (140:) s
14.4 410 M (141:) s
35.4 410 M
(      ArrayList<Integer> x_array = map_x.get\(obstacle[0]\);) s
14.4 402 M (142:) s
35.4 402 M
(      ArrayList<Integer> y_array = map_y.get\(obstacle[1]\);) s
14.4 394 M (143:) s
14.4 386 M (144:) s
35.4 386 M
(      x_array.add\(obstacle[1]\);) s
14.4 378 M (145:) s
35.4 378 M
(      y_array.add\(obstacle[0]\);) s
14.4 370 M (146:) s
14.4 362 M (147:) s
35.4 362 M
(      Collections.sort\(x_array\);) s
14.4 354 M (148:) s
35.4 354 M
(      Collections.sort\(y_array\);) s
14.4 346 M (149:) s
35.4 346 M
(    }) s
14.4 338 M (150:) s
14.4 330 M (151:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(for) s
/F-gs-font 7 7 SF
64.8 330 M
(\() s
/Courier-Bold 7 7 SUF
69 330 M
(int) s
/F-gs-font 7 7 SF
81.6 330 M
( command : commands\) {) s
14.4 322 M (152:) s
35.4 322 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 322 M
(if) s
/F-gs-font 7 7 SF
69 322 M
(\(command == -1\) {) s
14.4 314 M (153:) s
35.4 314 M
(        direction_idx = \(direction_idx + 1\) % 4;) s
14.4 306 M (154:) s
35.4 306 M
(      } ) s
/Courier-Bold 7 7 SUF
69 306 M
(else) s
/F-gs-font 7 7 SF
85.8 306 M
( ) s
/Courier-Bold 7 7 SUF
90 306 M
(if) s
/F-gs-font 7 7 SF
98.4 306 M
(\(command == -2\) {) s
14.4 298 M (155:) s
35.4 298 M
(        direction_idx = \(direction_idx + 3\) % 4;) s
14.4 290 M (156:) s
35.4 290 M
(      } ) s
/Courier-Bold 7 7 SUF
69 290 M
(else) s
/F-gs-font 7 7 SF
85.8 290 M
( {) s
14.4 282 M (157:) s
35.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
69 282 M
(if) s
/F-gs-font 7 7 SF
77.4 282 M
(\(direction_idx == 0 || direction_idx == 2\) {) s
14.4 274 M (158:) s
35.4 274 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 274 M
(int) s
/F-gs-font 7 7 SF
90 274 M
( target_y = y_coord + \(command * y_coord_multiplier[direction_idx]\);) s
14.4 266 M (159:) s
14.4 258 M (160:) s
35.4 258 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 258 M
(if) s
/F-gs-font 7 7 SF
85.8 258 M
(\(map_x.containsKey\(x_coord\)\) {) s
14.4 250 M (161:) s
35.4 250 M
(            ArrayList<Integer> array = map_x.get\(x_coord\);) s
14.4 242 M (162:) s
14.4 234 M (163:) s
35.4 234 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 234 M
(if) s
/F-gs-font 7 7 SF
94.2 234 M
(\(y_coord_multiplier[direction_idx] == 1\) {) s
14.4 226 M (164:) s
35.4 226 M
(              ) s
/Courier-Bold 7 7 SUF
94.2 226 M
(for) s
/F-gs-font 7 7 SF
106.8 226 M
(\() s
/Courier-Bold 7 7 SUF
111 226 M
(int) s
/F-gs-font 7 7 SF
123.6 226 M
( i = 0; i < array.size\(\); i++\) {) s
14.4 218 M (165:) s
35.4 218 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 218 M
(if) s
/F-gs-font 7 7 SF
111 218 M
(\(array.get\(i\) > y_coord && array.get\(i\) <= target_y\) {) s
14.4 210 M (166:) s
35.4 210 M
(                  target_y = array.get\(i\) - 1;) s
14.4 202 M (167:) s
35.4 202 M
(                  ) s
/Courier-Bold 7 7 SUF
111 202 M
(break) s
/F-gs-font 7 7 SF
132 202 M
(;) s
14.4 194 M (168:) s
35.4 194 M
(                }) s
14.4 186 M (169:) s
35.4 186 M
(              }) s
14.4 178 M (170:) s
35.4 178 M
(            } ) s
/Courier-Bold 7 7 SUF
94.2 178 M
(else) s
/F-gs-font 7 7 SF
111 178 M
( {) s
14.4 170 M (171:) s
35.4 170 M
(              ) s
/Courier-Bold 7 7 SUF
94.2 170 M
(for) s
/F-gs-font 7 7 SF
106.8 170 M
(\() s
/Courier-Bold 7 7 SUF
111 170 M
(int) s
/F-gs-font 7 7 SF
123.6 170 M
( i = array.size\(\) - 1; i >= 0; i--\) {) s
14.4 162 M (172:) s
35.4 162 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 162 M
(if) s
/F-gs-font 7 7 SF
111 162 M
(\(array.get\(i\) < y_coord && array.get\(i\) >= target_y\) {) s
14.4 154 M (173:) s
35.4 154 M
(                  target_y = array.get\(i\) + 1;) s
14.4 146 M (174:) s
35.4 146 M
(                  ) s
/Courier-Bold 7 7 SUF
111 146 M
(break) s
/F-gs-font 7 7 SF
132 146 M
(;) s
14.4 138 M (175:) s
35.4 138 M
(                }) s
14.4 130 M (176:) s
35.4 130 M
(              }) s
14.4 122 M (177:) s
35.4 122 M
(            }) s
14.4 114 M (178:) s
35.4 114 M
(          }) s
14.4 106 M (179:) s
14.4 98 M (180:) s
35.4 98 M
(          y_coord = target_y;) s
14.4 90 M (181:) s
35.4 90 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 90 M
(else) s
/F-gs-font 7 7 SF
94.2 90 M
( {) s
14.4 82 M (182:) s
35.4 82 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 82 M
(int) s
/F-gs-font 7 7 SF
90 82 M
( target_x = x_coord + \(command * x_coord_multiplier[direction_idx]\);) s
14.4 74 M (183:) s
14.4 66 M (184:) s
35.4 66 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 66 M
(if) s
/F-gs-font 7 7 SF
85.8 66 M
(\(map_y.containsKey\(y_coord\)\) {) s
14.4 58 M (185:) s
35.4 58 M
(            ArrayList<Integer> array = map_y.get\(y_coord\);) s
14.4 50 M (186:) s
14.4 42 M (187:) s
35.4 42 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 42 M
(if) s
/F-gs-font 7 7 SF
94.2 42 M
(\(x_coord_multiplier[direction_idx] == 1\) {) s
14.4 34 M (188:) s
35.4 34 M
(              ) s
/Courier-Bold 7 7 SUF
94.2 34 M
(for) s
/F-gs-font 7 7 SF
106.8 34 M
(\() s
/Courier-Bold 7 7 SUF
111 34 M
(int) s
/F-gs-font 7 7 SF
123.6 34 M
( i = 0; i < array.size\(\); i++\) {) s
14.4 26 M (189:) s
35.4 26 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 26 M
(if) s
/F-gs-font 7 7 SF
111 26 M
(\(array.get\(i\) > x_coord && array.get\(i\) <= target_x\) {) s
14.4 18 M (190:) s
35.4 18 M
(                  target_x = array.get\(i\) - 1;) s
14.4 10 M (191:) s
35.4 10 M
(                  ) s
/Courier-Bold 7 7 SUF
111 10 M
(break) s
/F-gs-font 7 7 SF
132 10 M
(;) s
14.4 2 M (192:) s
35.4 2 M
(                }) s
411.4 522 M (193:) s
432.4 522 M
(              }) s
411.4 514 M (194:) s
432.4 514 M
(            } ) s
/Courier-Bold 7 7 SUF
491.2 514 M
(else) s
/F-gs-font 7 7 SF
508 514 M
( {) s
411.4 506 M (195:) s
432.4 506 M
(              ) s
/Courier-Bold 7 7 SUF
491.2 506 M
(for) s
/F-gs-font 7 7 SF
503.8 506 M
(\() s
/Courier-Bold 7 7 SUF
508 506 M
(int) s
/F-gs-font 7 7 SF
520.6 506 M
( i = array.size\(\) - 1; i >= 0; i--\) {) s
411.4 498 M (196:) s
432.4 498 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 498 M
(if) s
/F-gs-font 7 7 SF
508 498 M
(\(array.get\(i\) < x_coord && array.get\(i\) >= target_x\) {) s
411.4 490 M (197:) s
432.4 490 M
(                  target_x = array.get\(i\) + 1;) s
411.4 482 M (198:) s
432.4 482 M
(                  ) s
/Courier-Bold 7 7 SUF
508 482 M
(break) s
/F-gs-font 7 7 SF
529 482 M
(;) s
411.4 474 M (199:) s
432.4 474 M
(                }) s
411.4 466 M (200:) s
432.4 466 M
(              }) s
411.4 458 M (201:) s
432.4 458 M
(            }) s
411.4 450 M (202:) s
432.4 450 M
(          }) s
411.4 442 M (203:) s
411.4 434 M (204:) s
432.4 434 M
(          x_coord = target_x;) s
411.4 426 M (205:) s
432.4 426 M
(        }) s
411.4 418 M (206:) s
432.4 418 M
(      }) s
411.4 410 M (207:) s
411.4 402 M (208:) s
432.4 402 M
(      max_distance = Math.max\(max_distance, x_coord * x_coord + y_coord * y_coord\);) s
411.4 394 M (209:) s
432.4 394 M
(    }) s
411.4 386 M (210:) s
411.4 378 M (211:) s
432.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 378 M
(return) s
/F-gs-font 7 7 SF
474.4 378 M
( max_distance;) s
411.4 370 M (212:) s
432.4 370 M
(  }) s
411.4 362 M (213:) s
432.4 362 M
(}) s
_R
S
%%Page: (1) 61
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/JumpGame.java) def
/fdir (./general) def
/ftail (JumpGame.java) def
% User defined strings:
/fmodstr (Wed Feb 06 22:33:45 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (JumpGame.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of non-negative integers, you are initially positioned at the first) s
5 490 M
( index of the array.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Each element in the array represents your maximum jump length at that position.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Determine if you are able to reach the last index.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: [2,3,1,1,4]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: [3,2,1,0,4]) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Explanation: You will always arrive at index 3 no matter what. Its maximum) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  jump length is 0, which makes it impossible to reach the last index.) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( */) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
18.6 338 M (23:) s
/Courier-Bold 7 7 SUF
35.4 338 M
(class) s
/F-gs-font 7 7 SF
56.4 338 M
( Solution {) s
18.6 330 M (24:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( ) s
/Courier-Bold 7 7 SUF
73.2 330 M
(boolean) s
/F-gs-font 7 7 SF
102.6 330 M
( canJump\() s
/Courier-Bold 7 7 SUF
140.4 330 M
(int) s
/F-gs-font 7 7 SF
153 330 M
([] nums\) {) s
18.6 322 M (25:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
( curr = nums[0];) s
18.6 314 M (26:) s
18.6 306 M (27:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(for) s
/F-gs-font 7 7 SF
64.8 306 M
(\() s
/Courier-Bold 7 7 SUF
69 306 M
(int) s
/F-gs-font 7 7 SF
81.6 306 M
( i = 1; i < nums.length; i++\) {) s
18.6 298 M (28:) s
35.4 298 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 298 M
(if) s
/F-gs-font 7 7 SF
69 298 M
(\(curr - 1 < 0\) ) s
/Courier-Bold 7 7 SUF
132 298 M
(return) s
/F-gs-font 7 7 SF
157.2 298 M
( ) s
/Courier-Bold 7 7 SUF
161.4 298 M
(false) s
/F-gs-font 7 7 SF
182.4 298 M
(;) s
18.6 290 M (29:) s
35.4 290 M
(      curr = Math.max\(curr - 1, nums[i]\);) s
18.6 282 M (30:) s
35.4 282 M
(    }) s
18.6 274 M (31:) s
18.6 266 M (32:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(return) s
/F-gs-font 7 7 SF
77.4 266 M
( curr >= 0;) s
18.6 258 M (33:) s
35.4 258 M
(  }) s
18.6 250 M (34:) s
35.4 250 M
(}) s
_R
S
%%Page: (1) 62
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/GroupAnagrams.java) def
/fdir (./general) def
/ftail (GroupAnagrams.java) def
% User defined strings:
/fmodstr (Sun Apr 07 01:19:30 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (GroupAnagrams.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of strings, group anagrams together.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input: ["eat", "tea", "tan", "ate", "nat", "bat"],) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  [) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  ["ate","eat","tea"],) s
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  ["nat","tan"],) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  ["bat"]) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  ]) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  All inputs will be in lowercase.) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  The order of your output does not matter.) s
/F-gs-font 7 7 SF
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (20:) s
18.6 362 M (21:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( Solution {) s
18.6 354 M (22:) s
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// 1 : categorize by sorted string) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 346 M
(// O\(NK log K\) where N is number of strings and K is max length of a string) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( List<List<String>> groupAnagrams\(String[] strs\) {) s
18.6 330 M (25:) s
35.4 330 M
(    HashMap<String, List<String>> dict = ) s
/Courier-Bold 7 7 SUF
207.6 330 M
(new) s
/F-gs-font 7 7 SF
220.2 330 M
( HashMap<>\(\);) s
18.6 322 M (26:) s
18.6 314 M (27:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\(String str : strs\) {) s
18.6 306 M (28:) s
35.4 306 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 306 M
(char) s
/F-gs-font 7 7 SF
77.4 306 M
([] charArray = str.toCharArray\(\);) s
18.6 298 M (29:) s
35.4 298 M
(      Arrays.sort\(charArray\);) s
18.6 290 M (30:) s
35.4 290 M
(      String sorted = String.valueOf\(charArray\);) s
18.6 282 M (31:) s
18.6 274 M (32:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(if) s
/F-gs-font 7 7 SF
69 274 M
(\(!dict.containsKey\(sorted\)\) dict.put\(sorted, ) s
/Courier-Bold 7 7 SUF
258 274 M
(new) s
/F-gs-font 7 7 SF
270.6 274 M
( ArrayList<>\(\)\);) s
18.6 266 M (33:) s
35.4 266 M
(      dict.get\(sorted\).add\(str\);) s
18.6 258 M (34:) s
35.4 258 M
(    }) s
18.6 250 M (35:) s
18.6 242 M (36:) s
35.4 242 M
(    List<List<String>> result = ) s
/Courier-Bold 7 7 SUF
169.8 242 M
(new) s
/F-gs-font 7 7 SF
182.4 242 M
( ArrayList<>\(\);) s
18.6 234 M (37:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(for) s
/F-gs-font 7 7 SF
64.8 234 M
(\(List<String> list : dict.values\(\)\) {) s
18.6 226 M (38:) s
35.4 226 M
(      result.add\(list\);) s
18.6 218 M (39:) s
35.4 218 M
(    }) s
18.6 210 M (40:) s
18.6 202 M (41:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( result;) s
18.6 194 M (42:) s
35.4 194 M
(  }) s
18.6 186 M (43:) s
18.6 178 M (44:) s
35.4 178 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 178 M
(// 2 : categorize by char count) s
/F-gs-font 7 7 SF
18.6 170 M (45:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 170 M
(// O\(NK\) where N is number of strings and K is max length of a string) s
/F-gs-font 7 7 SF
18.6 162 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( List<List<String>> groupAnagrams\(String[] strs\) {) s
18.6 154 M (47:) s
35.4 154 M
(    HashMap<String, List<String>> dict = ) s
/Courier-Bold 7 7 SUF
207.6 154 M
(new) s
/F-gs-font 7 7 SF
220.2 154 M
( HashMap<>\(\);) s
18.6 146 M (48:) s
18.6 138 M (49:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(int) s
/F-gs-font 7 7 SF
64.8 138 M
([] charCount = ) s
/Courier-Bold 7 7 SUF
127.8 138 M
(new) s
/F-gs-font 7 7 SF
140.4 138 M
( ) s
/Courier-Bold 7 7 SUF
144.6 138 M
(int) s
/F-gs-font 7 7 SF
157.2 138 M
([26];) s
18.6 130 M (50:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(for) s
/F-gs-font 7 7 SF
64.8 130 M
(\(String str : strs\) {) s
18.6 122 M (51:) s
35.4 122 M
(      Arrays.fill\(charCount, 0\);) s
18.6 114 M (52:) s
18.6 106 M (53:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(for) s
/F-gs-font 7 7 SF
73.2 106 M
(\() s
/Courier-Bold 7 7 SUF
77.4 106 M
(char) s
/F-gs-font 7 7 SF
94.2 106 M
( c : str.toCharArray\(\)\)) s
18.6 98 M (54:) s
35.4 98 M
(        charCount[c - ) s
/Courier-Bold 7 7 SUF
127.8 98 M
('a') s
/F-gs-font 7 7 SF
140.4 98 M
(]++;) s
18.6 90 M (55:) s
18.6 82 M (56:) s
35.4 82 M
(      StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
140.4 82 M
(new) s
/F-gs-font 7 7 SF
153 82 M
( StringBuilder\(\);) s
18.6 74 M (57:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(for) s
/F-gs-font 7 7 SF
73.2 74 M
(\() s
/Courier-Bold 7 7 SUF
77.4 74 M
(int) s
/F-gs-font 7 7 SF
90 74 M
( count : charCount\)) s
18.6 66 M (58:) s
35.4 66 M
(        sb.append\(count + ) s
/Courier-Bold 7 7 SUF
144.6 66 M
(" ") s
/F-gs-font 7 7 SF
157.2 66 M
(\);) s
18.6 58 M (59:) s
18.6 50 M (60:) s
35.4 50 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 50 M
(if) s
/F-gs-font 7 7 SF
69 50 M
(\(!dict.containsKey\(sb.toString\(\)\)\) dict.put\(sb.toString\(\), ) s
/Courier-Bold 7 7 SUF
316.8 50 M
(new) s
/F-gs-font 7 7 SF
329.4 50 M
( ArrayList<>\(\)) s
5 42 M
(\);) s
18.6 34 M (61:) s
35.4 34 M
(      dict.get\(sb.toString\(\)\).add\(str\);) s
18.6 26 M (62:) s
35.4 26 M
(    }) s
18.6 18 M (63:) s
18.6 10 M (64:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(return) s
/F-gs-font 7 7 SF
77.4 10 M
( ) s
/Courier-Bold 7 7 SUF
81.6 10 M
(new) s
/F-gs-font 7 7 SF
94.2 10 M
( ArrayList\(dict.values\(\)\);) s
18.6 2 M (65:) s
35.4 2 M
(  }) s
415.6 522 M (66:) s
432.4 522 M
(}) s
_R
S
%%Page: (1) 63
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/IncreasingTripletSubsequence.java) def
/fdir (./general) def
/ftail (IncreasingTripletSubsequence.java) def
% User defined strings:
/fmodstr (Sun Apr 07 01:00:13 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (IncreasingTripletSubsequence.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an unsorted array return whether an increasing subsequence of length 3 exist) s
5 490 M
(s or not in the array.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Formally the function should:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Return true if there exists i, j, k ) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  such that arr[i] < arr[j] < arr[k] given 0 \342\\211\244 i < j < k \342\\211\244 n-1 else return) s
5 442 M
( false.) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Note: Your algorithm should run in O\(n\) time complexity and O\(1\) space complexity.) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: [1,2,3,4,5]) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Input: [5,4,3,2,1]) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(*/) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
18.6 338 M (22:) s
/Courier-Bold 7 7 SUF
35.4 338 M
(class) s
/F-gs-font 7 7 SF
56.4 338 M
( Solution {) s
18.6 330 M (23:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( ) s
/Courier-Bold 7 7 SUF
73.2 330 M
(boolean) s
/F-gs-font 7 7 SF
102.6 330 M
( increasingTriplet\() s
/Courier-Bold 7 7 SUF
182.4 330 M
(int) s
/F-gs-font 7 7 SF
195 330 M
([] nums\) {) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
( min = Integer.MAX_VALUE;) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(int) s
/F-gs-font 7 7 SF
64.8 314 M
( secondMin = Integer.MAX_VALUE;) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 0; i < nums.length; i++\) {) s
18.6 290 M (28:) s
35.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 290 M
(if) s
/F-gs-font 7 7 SF
69 290 M
(\(nums[i] <= min\) {) s
18.6 282 M (29:) s
35.4 282 M
(        ) s
/Courier-Oblique 7 7 SUF
69 282 M
(// we don't care that min index is bigger than secondMin) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 274 M
(        min = nums[i];) s
18.6 266 M (31:) s
35.4 266 M
(      } ) s
/Courier-Bold 7 7 SUF
69 266 M
(else) s
/F-gs-font 7 7 SF
85.8 266 M
( ) s
/Courier-Bold 7 7 SUF
90 266 M
(if) s
/F-gs-font 7 7 SF
98.4 266 M
(\(nums[i] <= secondMin\) {) s
18.6 258 M (32:) s
35.4 258 M
(        secondMin = nums[i];) s
18.6 250 M (33:) s
35.4 250 M
(      } ) s
/Courier-Bold 7 7 SUF
69 250 M
(else) s
/F-gs-font 7 7 SF
85.8 250 M
( {) s
18.6 242 M (34:) s
35.4 242 M
(        ) s
/Courier-Bold 7 7 SUF
69 242 M
(return) s
/F-gs-font 7 7 SF
94.2 242 M
( ) s
/Courier-Bold 7 7 SUF
98.4 242 M
(true) s
/F-gs-font 7 7 SF
115.2 242 M
(;) s
18.6 234 M (35:) s
35.4 234 M
(      }) s
18.6 226 M (36:) s
35.4 226 M
(    }) s
18.6 218 M (37:) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( ) s
/Courier-Bold 7 7 SUF
81.6 210 M
(false) s
/F-gs-font 7 7 SF
102.6 210 M
(;) s
18.6 202 M (39:) s
35.4 202 M
(  }) s
18.6 194 M (40:) s
35.4 194 M
(}) s
_R
S
%%Page: (1) 64
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/ValidSudoku.java) def
/fdir (./general) def
/ftail (ValidSudoku.java) def
% User defined strings:
/fmodstr (Fri Dec 21 02:01:27 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ValidSudoku.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validat) s
5 506 M
(ed according to the following rules:) s
/F-gs-font 7 7 SF
22.8 498 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 490 M
(  Each row must contain the digits 1-9 without repetition.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Each column must contain the digits 1-9 without repetition.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repeti) s
5 466 M
(tion.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  A partially filled sudoku which is valid.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  The Sudoku board could be partially filled, where empty cells are filled with the ) s
5 426 M
(character '.'.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  ["5","3",".",".","7",".",".",".","."],) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  ["6",".",".","1","9","5",".",".","."],) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  [".","9","8",".",".",".",".","6","."],) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  ["8",".",".",".","6",".",".",".","3"],) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  ["4",".",".","8",".","3",".",".","1"],) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  ["7",".",".",".","2",".",".",".","6"],) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [".","6",".",".",".",".","2","8","."],) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [".",".",".","4","1","9",".",".","5"],) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  [".",".",".",".","8",".",".","7","9"]) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  ]) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  [) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  ["8","3",".",".","7",".",".",".","."],) s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  ["6",".",".","1","9","5",".",".","."],) s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  [".","9","8",".",".",".",".","6","."],) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  ["8",".",".",".","6",".",".",".","3"],) s
/F-gs-font 7 7 SF
18.6 226 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  ["4",".",".","8",".","3",".",".","1"],) s
/F-gs-font 7 7 SF
18.6 218 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  ["7",".",".",".","2",".",".",".","6"],) s
/F-gs-font 7 7 SF
18.6 210 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  [".","6",".",".",".",".","2","8","."],) s
/F-gs-font 7 7 SF
18.6 202 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  [".",".",".","4","1","9",".",".","5"],) s
/F-gs-font 7 7 SF
18.6 194 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  [".",".",".",".","8",".",".","7","9"]) s
/F-gs-font 7 7 SF
18.6 186 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  ]) s
/F-gs-font 7 7 SF
18.6 178 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 170 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  Explanation: Same as Example 1, except with the 5 in the top left corner being ) s
/F-gs-font 7 7 SF
18.6 162 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
(  modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.) s
/F-gs-font 7 7 SF
18.6 154 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 146 M (45:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 138 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
(  A Sudoku board \(partially filled\) could be valid but is not necessarily solvable.) s
/F-gs-font 7 7 SF
18.6 130 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 130 M
(  Only the filled cells need to be validated according to the mentioned rules.) s
/F-gs-font 7 7 SF
18.6 122 M (48:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(  The given board contain only digits 1-9 and the character '.'.) s
/F-gs-font 7 7 SF
18.6 114 M (49:) s
/Courier-Oblique 7 7 SUF
35.4 114 M
(  The given board size is always 9x9.) s
/F-gs-font 7 7 SF
18.6 106 M (50:) s
/Courier-Oblique 7 7 SUF
35.4 106 M
(*/) s
/F-gs-font 7 7 SF
18.6 98 M (51:) s
18.6 90 M (52:) s
/Courier-Bold 7 7 SUF
35.4 90 M
(class) s
/F-gs-font 7 7 SF
56.4 90 M
( ValidSudoku {) s
18.6 82 M (53:) s
35.4 82 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 82 M
(public) s
/F-gs-font 7 7 SF
69 82 M
( ) s
/Courier-Bold 7 7 SUF
73.2 82 M
(boolean) s
/F-gs-font 7 7 SF
102.6 82 M
( isValidSudoku\() s
/Courier-Bold 7 7 SUF
165.6 82 M
(char) s
/F-gs-font 7 7 SF
182.4 82 M
([][] board\) {) s
18.6 74 M (54:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(int) s
/F-gs-font 7 7 SF
64.8 74 M
([] arr; ) s
/Courier-Oblique 7 7 SUF
98.4 74 M
(// row) s
/F-gs-font 7 7 SF
18.6 66 M (55:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(int) s
/F-gs-font 7 7 SF
64.8 66 M
([] arr2; ) s
/Courier-Oblique 7 7 SUF
102.6 66 M
(// column) s
/F-gs-font 7 7 SF
18.6 58 M (56:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(int) s
/F-gs-font 7 7 SF
64.8 58 M
([] arr3; ) s
/Courier-Oblique 7 7 SUF
102.6 58 M
(// 3x3) s
/F-gs-font 7 7 SF
18.6 50 M (57:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(for) s
/F-gs-font 7 7 SF
64.8 50 M
(\() s
/Courier-Bold 7 7 SUF
69 50 M
(int) s
/F-gs-font 7 7 SF
81.6 50 M
( i = 0; i < board.length; i++\) {) s
18.6 42 M (58:) s
35.4 42 M
(      arr = ) s
/Courier-Bold 7 7 SUF
85.8 42 M
(new) s
/F-gs-font 7 7 SF
98.4 42 M
( ) s
/Courier-Bold 7 7 SUF
102.6 42 M
(int) s
/F-gs-font 7 7 SF
115.2 42 M
([board.length];) s
18.6 34 M (59:) s
35.4 34 M
(      arr2 = ) s
/Courier-Bold 7 7 SUF
90 34 M
(new) s
/F-gs-font 7 7 SF
102.6 34 M
( ) s
/Courier-Bold 7 7 SUF
106.8 34 M
(int) s
/F-gs-font 7 7 SF
119.4 34 M
([board.length];) s
18.6 26 M (60:) s
35.4 26 M
(      arr3 = ) s
/Courier-Bold 7 7 SUF
90 26 M
(new) s
/F-gs-font 7 7 SF
102.6 26 M
( ) s
/Courier-Bold 7 7 SUF
106.8 26 M
(int) s
/F-gs-font 7 7 SF
119.4 26 M
([board.length];) s
18.6 18 M (61:) s
18.6 10 M (62:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(for) s
/F-gs-font 7 7 SF
73.2 10 M
(\() s
/Courier-Bold 7 7 SUF
77.4 10 M
(int) s
/F-gs-font 7 7 SF
90 10 M
( j = 0; j < board.length; j++\) {) s
18.6 2 M (63:) s
35.4 2 M
(        ) s
/Courier-Oblique 7 7 SUF
69 2 M
(// check row) s
/F-gs-font 7 7 SF
415.6 522 M (64:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 522 M
(        ) s
/Courier-Bold 7 7 SUF
466 522 M
(if) s
/F-gs-font 7 7 SF
474.4 522 M
(\(board[i][j] - ) s
/Courier-Bold 7 7 SUF
537.4 522 M
('1') s
/F-gs-font 7 7 SF
550 522 M
( >= 0\) {) s
415.6 514 M (65:) s
432.4 514 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 514 M
(if) s
/F-gs-font 7 7 SF
482.8 514 M
(\(arr[board[i][j] - ) s
/Courier-Bold 7 7 SUF
562.6 514 M
('1') s
/F-gs-font 7 7 SF
575.2 514 M
(] > 0\) ) s
/Courier-Bold 7 7 SUF
604.6 514 M
(return) s
/F-gs-font 7 7 SF
629.8 514 M
( ) s
/Courier-Bold 7 7 SUF
634 514 M
(false) s
/F-gs-font 7 7 SF
655 514 M
(;) s
415.6 506 M (66:) s
432.4 506 M
(          arr[board[i][j] - ) s
/Courier-Bold 7 7 SUF
550 506 M
('1') s
/F-gs-font 7 7 SF
562.6 506 M
(]++;) s
415.6 498 M (67:) s
432.4 498 M
(        }) s
415.6 490 M (68:) s
415.6 482 M (69:) s
432.4 482 M
(        ) s
/Courier-Oblique 7 7 SUF
466 482 M
(// check column) s
/F-gs-font 7 7 SF
415.6 474 M (70:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 474 M
(        ) s
/Courier-Bold 7 7 SUF
466 474 M
(if) s
/F-gs-font 7 7 SF
474.4 474 M
(\(board[j][i] - ) s
/Courier-Bold 7 7 SUF
537.4 474 M
('1') s
/F-gs-font 7 7 SF
550 474 M
( >= 0\) {) s
415.6 466 M (71:) s
432.4 466 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 466 M
(if) s
/F-gs-font 7 7 SF
482.8 466 M
(\(arr2[board[j][i] - ) s
/Courier-Bold 7 7 SUF
566.8 466 M
('1') s
/F-gs-font 7 7 SF
579.4 466 M
(] > 0\) ) s
/Courier-Bold 7 7 SUF
608.8 466 M
(return) s
/F-gs-font 7 7 SF
634 466 M
( ) s
/Courier-Bold 7 7 SUF
638.2 466 M
(false) s
/F-gs-font 7 7 SF
659.2 466 M
(;) s
415.6 458 M (72:) s
432.4 458 M
(          arr2[board[j][i] - ) s
/Courier-Bold 7 7 SUF
554.2 458 M
('1') s
/F-gs-font 7 7 SF
566.8 458 M
(]++;) s
415.6 450 M (73:) s
432.4 450 M
(        }) s
415.6 442 M (74:) s
432.4 442 M
(      }) s
415.6 434 M (75:) s
415.6 426 M (76:) s
432.4 426 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 426 M
(// 3 x 3) s
/F-gs-font 7 7 SF
415.6 418 M (77:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 418 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 418 M
(int) s
/F-gs-font 7 7 SF
470.2 418 M
( row = \(i / 3\) * 3;) s
415.6 410 M (78:) s
432.4 410 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 410 M
(int) s
/F-gs-font 7 7 SF
470.2 410 M
( col = \(i % 3\) * 3;) s
415.6 402 M (79:) s
432.4 402 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 402 M
(for) s
/F-gs-font 7 7 SF
470.2 402 M
(\() s
/Courier-Bold 7 7 SUF
474.4 402 M
(int) s
/F-gs-font 7 7 SF
487 402 M
( j = row; j < row + 3; j++\) {) s
415.6 394 M (80:) s
432.4 394 M
(        ) s
/Courier-Bold 7 7 SUF
466 394 M
(for) s
/F-gs-font 7 7 SF
478.6 394 M
(\() s
/Courier-Bold 7 7 SUF
482.8 394 M
(int) s
/F-gs-font 7 7 SF
495.4 394 M
( k = col; k < col + 3; k++\) {) s
415.6 386 M (81:) s
432.4 386 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 386 M
(if) s
/F-gs-font 7 7 SF
482.8 386 M
(\(board[j][k] - ) s
/Courier-Bold 7 7 SUF
545.8 386 M
('1') s
/F-gs-font 7 7 SF
558.4 386 M
( >= 0\) {) s
415.6 378 M (82:) s
432.4 378 M
(            ) s
/Courier-Bold 7 7 SUF
482.8 378 M
(if) s
/F-gs-font 7 7 SF
491.2 378 M
(\(arr3[board[j][k] - ) s
/Courier-Bold 7 7 SUF
575.2 378 M
('1') s
/F-gs-font 7 7 SF
587.8 378 M
(] > 0\) ) s
/Courier-Bold 7 7 SUF
617.2 378 M
(return) s
/F-gs-font 7 7 SF
642.4 378 M
( ) s
/Courier-Bold 7 7 SUF
646.6 378 M
(false) s
/F-gs-font 7 7 SF
667.6 378 M
(;) s
415.6 370 M (83:) s
432.4 370 M
(            arr3[board[j][k] - ) s
/Courier-Bold 7 7 SUF
562.6 370 M
('1') s
/F-gs-font 7 7 SF
575.2 370 M
(]++;) s
415.6 362 M (84:) s
432.4 362 M
(          }) s
415.6 354 M (85:) s
432.4 354 M
(        }) s
415.6 346 M (86:) s
432.4 346 M
(      }) s
415.6 338 M (87:) s
432.4 338 M
(    }) s
415.6 330 M (88:) s
415.6 322 M (89:) s
432.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 322 M
(return) s
/F-gs-font 7 7 SF
474.4 322 M
( ) s
/Courier-Bold 7 7 SUF
478.6 322 M
(true) s
/F-gs-font 7 7 SF
495.4 322 M
(;) s
415.6 314 M (90:) s
432.4 314 M
(  }) s
415.6 306 M (91:) s
432.4 306 M
(}) s
_R
S
%%Page: (1) 65
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/DeckPartition.java) def
/fdir (./general) def
/ftail (DeckPartition.java) def
% User defined strings:
/fmodstr (Sun Dec 09 01:17:26 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (DeckPartition.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(// Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 514 M
(// Runtime: 7 ms, faster than 90.07% of Java online submissions for X of a Kind in a) s
5 506 M
( Deck of Cards.) s
/F-gs-font 7 7 SF
22.8 498 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 490 M
(// In a deck of cards, each card has an integer written on it.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 482 M
(// Return true if and only if you can choose X >= 2 such that it is possible to spli) s
5 474 M
(t the) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 466 M
(// entire deck into 1 or more groups of cards, where:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 458 M
(//     1. Each group has exactly X cards.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 450 M
(//     2. All the cards in each group have the same integer.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(//  Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(//  Input: [1,2,3,4,4,3,2,1]) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 410 M
(//  Output: true) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 402 M
(//  Explanation: Possible partition [1,1],[2,2],[3,3],[4,4]) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(//  Example 2:) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 378 M
(//  Input: [1,1,1,2,2,2,3,3]) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 370 M
(//  Output: false) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 362 M
(//  Explanation: No possible partition.) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(//  Example 3:) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 338 M
(//  Input: [1]) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 330 M
(//  Output: false) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 322 M
(//  Explanation: No possible partition.) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(//  Example 4:) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 298 M
(//  Input: [1,1,2,2,2,2]) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 290 M
(//  Output: true) s
/F-gs-font 7 7 SF
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 282 M
(//  Explanation: Possible partition [1,1],[2,2],[2,2]) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(//  Note:) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 258 M
(//  1 <= deck.length <= 10000) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 250 M
(//  0 <= deck[i] < 10000) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 234 M (35:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(import) s
/F-gs-font 7 7 SF
60.6 234 M
( java.util.*;) s
18.6 226 M (36:) s
18.6 218 M (37:) s
/Courier-Bold 7 7 SUF
35.4 218 M
(class) s
/F-gs-font 7 7 SF
56.4 218 M
( PartitionDeck {) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(public) s
/F-gs-font 7 7 SF
77.4 210 M
( ) s
/Courier-Bold 7 7 SUF
81.6 210 M
(static) s
/F-gs-font 7 7 SF
106.8 210 M
( ) s
/Courier-Bold 7 7 SUF
111 210 M
(void) s
/F-gs-font 7 7 SF
127.8 210 M
( main\(String[] args\) {) s
18.6 202 M (39:) s
35.4 202 M
(        ) s
/Courier-Bold 7 7 SUF
69 202 M
(int) s
/F-gs-font 7 7 SF
81.6 202 M
([] deck = ) s
/Courier-Bold 7 7 SUF
123.6 202 M
(new) s
/F-gs-font 7 7 SF
136.2 202 M
( ) s
/Courier-Bold 7 7 SUF
140.4 202 M
(int) s
/F-gs-font 7 7 SF
153 202 M
([] { 1, 1, 2, 2, 3, 3 };) s
18.6 194 M (40:) s
35.4 194 M
(        hasGroupsSizeX\(deck\);) s
18.6 186 M (41:) s
35.4 186 M
(    }) s
18.6 178 M (42:) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(public) s
/F-gs-font 7 7 SF
77.4 170 M
( ) s
/Courier-Bold 7 7 SUF
81.6 170 M
(static) s
/F-gs-font 7 7 SF
106.8 170 M
( ) s
/Courier-Bold 7 7 SUF
111 170 M
(boolean) s
/F-gs-font 7 7 SF
140.4 170 M
( hasGroupsSizeX\() s
/Courier-Bold 7 7 SUF
207.6 170 M
(int) s
/F-gs-font 7 7 SF
220.2 170 M
([] deck\) {) s
18.6 162 M (44:) s
35.4 162 M
(        ) s
/Courier-Bold 7 7 SUF
69 162 M
(int) s
/F-gs-font 7 7 SF
81.6 162 M
([] counts = ) s
/Courier-Bold 7 7 SUF
132 162 M
(new) s
/F-gs-font 7 7 SF
144.6 162 M
( ) s
/Courier-Bold 7 7 SUF
148.8 162 M
(int) s
/F-gs-font 7 7 SF
161.4 162 M
([10000];) s
18.6 154 M (45:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(for) s
/F-gs-font 7 7 SF
81.6 154 M
(\() s
/Courier-Bold 7 7 SUF
85.8 154 M
(int) s
/F-gs-font 7 7 SF
98.4 154 M
( i: deck\) counts[i]++;) s
18.6 146 M (46:) s
18.6 138 M (47:) s
35.4 138 M
(        ) s
/Courier-Bold 7 7 SUF
69 138 M
(int) s
/F-gs-font 7 7 SF
81.6 138 M
( partition_length = 0;) s
18.6 130 M (48:) s
35.4 130 M
(        ) s
/Courier-Bold 7 7 SUF
69 130 M
(for) s
/F-gs-font 7 7 SF
81.6 130 M
(\() s
/Courier-Bold 7 7 SUF
85.8 130 M
(int) s
/F-gs-font 7 7 SF
98.4 130 M
( count: counts\) {) s
18.6 122 M (49:) s
35.4 122 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 122 M
(if) s
/F-gs-font 7 7 SF
94.2 122 M
(\(count == 0\) ) s
/Courier-Bold 7 7 SUF
148.8 122 M
(continue) s
/F-gs-font 7 7 SF
182.4 122 M
(;) s
18.6 114 M (50:) s
18.6 106 M (51:) s
35.4 106 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 106 M
(if) s
/F-gs-font 7 7 SF
94.2 106 M
(\(partition_length == 0\) {) s
18.6 98 M (52:) s
35.4 98 M
(                partition_length = count;) s
18.6 90 M (53:) s
35.4 90 M
(            } ) s
/Courier-Bold 7 7 SUF
94.2 90 M
(else) s
/F-gs-font 7 7 SF
111 90 M
( {) s
18.6 82 M (54:) s
35.4 82 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 82 M
(int) s
/F-gs-font 7 7 SF
115.2 82 M
( gcd = gcd\(count, partition_length\);) s
18.6 74 M (55:) s
35.4 74 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 74 M
(if) s
/F-gs-font 7 7 SF
111 74 M
(\(gcd <= 1\) ) s
/Courier-Bold 7 7 SUF
157.2 74 M
(return) s
/F-gs-font 7 7 SF
182.4 74 M
( ) s
/Courier-Bold 7 7 SUF
186.6 74 M
(false) s
/F-gs-font 7 7 SF
207.6 74 M
(;) s
18.6 66 M (56:) s
35.4 66 M
(            }) s
18.6 58 M (57:) s
35.4 58 M
(        }) s
18.6 50 M (58:) s
18.6 42 M (59:) s
35.4 42 M
(        ) s
/Courier-Bold 7 7 SUF
69 42 M
(return) s
/F-gs-font 7 7 SF
94.2 42 M
( partition_length >= 2;) s
18.6 34 M (60:) s
35.4 34 M
(    }) s
18.6 26 M (61:) s
18.6 18 M (62:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(public) s
/F-gs-font 7 7 SF
77.4 18 M
( ) s
/Courier-Bold 7 7 SUF
81.6 18 M
(static) s
/F-gs-font 7 7 SF
106.8 18 M
( ) s
/Courier-Bold 7 7 SUF
111 18 M
(int) s
/F-gs-font 7 7 SF
123.6 18 M
( gcd\() s
/Courier-Bold 7 7 SUF
144.6 18 M
(int) s
/F-gs-font 7 7 SF
157.2 18 M
( x, ) s
/Courier-Bold 7 7 SUF
174 18 M
(int) s
/F-gs-font 7 7 SF
186.6 18 M
( y\) {) s
18.6 10 M (63:) s
35.4 10 M
(        ) s
/Courier-Bold 7 7 SUF
69 10 M
(return) s
/F-gs-font 7 7 SF
94.2 10 M
( x == 0 ? y : gcd\(y%x, x\);) s
18.6 2 M (64:) s
35.4 2 M
(    }) s
415.6 522 M (65:) s
432.4 522 M
(}) s
_R
S
%%Page: (1) 66
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./general/HappyNumber.java) def
/fdir (./general) def
/ftail (HappyNumber.java) def
% User defined strings:
/fmodstr (Sun Dec 16 00:58:37 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (HappyNumber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Write an algorithm to determine if a number is "happy".) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  A happy number is a number defined by the following process: Starting with any pos) s
5 474 M
(itive integer, replace the number by the sum of the squares of its digits, and repeat the pr) s
5 466 M
(ocess until the number equals 1 \(where it will stay\), or it loops endlessly in a cycle which) s
5 458 M
( does not include 1. Those numbers for which this process ends in 1 are happy numbers.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: 19) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  1^2 + 9^2 = 82) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  8^2 + ^2^2 = 68) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  6^2 + 8^2 = 100) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  1^2 + 0^2 + 0^2 = 1) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
18.6 354 M (19:) s
/Courier-Bold 7 7 SUF
35.4 354 M
(class) s
/F-gs-font 7 7 SF
56.4 354 M
( HappyNumber {) s
18.6 346 M (20:) s
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( ) s
/Courier-Bold 7 7 SUF
73.2 346 M
(boolean) s
/F-gs-font 7 7 SF
102.6 346 M
( isHappy\() s
/Courier-Bold 7 7 SUF
140.4 346 M
(int) s
/F-gs-font 7 7 SF
153 346 M
( n\) {) s
18.6 338 M (21:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(return) s
/F-gs-font 7 7 SF
77.4 338 M
( isHappyRecursive\(n, ) s
/Courier-Bold 7 7 SUF
165.6 338 M
(new) s
/F-gs-font 7 7 SF
178.2 338 M
( HashSet<Integer>\(\)\);) s
18.6 330 M (22:) s
35.4 330 M
(  }) s
18.6 322 M (23:) s
18.6 314 M (24:) s
35.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 314 M
(public) s
/F-gs-font 7 7 SF
69 314 M
( ) s
/Courier-Bold 7 7 SUF
73.2 314 M
(boolean) s
/F-gs-font 7 7 SF
102.6 314 M
( isHappyRecursive\() s
/Courier-Bold 7 7 SUF
178.2 314 M
(int) s
/F-gs-font 7 7 SF
190.8 314 M
( n, HashSet<Integer> set\) {) s
18.6 306 M (25:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(int) s
/F-gs-font 7 7 SF
64.8 306 M
( sum = 0;) s
18.6 298 M (26:) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(while) s
/F-gs-font 7 7 SF
73.2 290 M
(\(n > 0\) {) s
18.6 282 M (28:) s
35.4 282 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 282 M
(int) s
/F-gs-font 7 7 SF
73.2 282 M
( x = n % 10;) s
18.6 274 M (29:) s
35.4 274 M
(      sum += x * x;) s
18.6 266 M (30:) s
35.4 266 M
(      n /= 10;) s
18.6 258 M (31:) s
35.4 258 M
(    }) s
18.6 250 M (32:) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(sum == 1\)) s
18.6 234 M (34:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(return) s
/F-gs-font 7 7 SF
85.8 234 M
( ) s
/Courier-Bold 7 7 SUF
90 234 M
(true) s
/F-gs-font 7 7 SF
106.8 234 M
(;) s
18.6 226 M (35:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(else) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(if) s
/F-gs-font 7 7 SF
81.6 226 M
(\(set.contains\(sum\)\)) s
18.6 218 M (36:) s
35.4 218 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 218 M
(return) s
/F-gs-font 7 7 SF
85.8 218 M
( ) s
/Courier-Bold 7 7 SUF
90 218 M
(false) s
/F-gs-font 7 7 SF
111 218 M
(;) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(else) s
/F-gs-font 7 7 SF
18.6 202 M (38:) s
35.4 202 M
(      set.add\(sum\);) s
18.6 194 M (39:) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(return) s
/F-gs-font 7 7 SF
77.4 186 M
( isHappyRecursive\(sum, set\);) s
18.6 178 M (41:) s
35.4 178 M
(  }) s
18.6 170 M (42:) s
35.4 170 M
(}) s
_R
S
%%Page: (1) 67
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/4Sum2.java) def
/fdir (./math) def
/ftail (4Sum2.java) def
% User defined strings:
/fmodstr (Sun Apr 07 13:47:02 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (4Sum2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given four lists A, B, C, D of integer values, compute how many tuples \(i, j, k, l) s
5 490 M
(\) there are such that A[i] + B[j] + C[k] + D[l] is zero.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  To make problem a bit easier, all A, B, C, D have same length of N where 0 \342\\211\244 ) s
5 466 M
(N \342\\211\244 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed ) s
5 458 M
(to be at most 231 - 1.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  A = [ 1, 2]) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  B = [-2,-1]) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  C = [-1, 2]) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  D = [ 0, 2]) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  2) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  The two tuples are:) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  1. \(0, 0, 0, 1\) -> A[0] + B[0] + C[0] + D[1] = 1 + \(-2\) + \(-1\) + 2 = 0) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  2. \(1, 1, 0, 0\) -> A[1] + B[1] + C[0] + D[0] = 2 + \(-1\) + \(-1\) + 0 = 0) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
18.6 306 M (25:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (26:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( fourSumCount\() s
/Courier-Bold 7 7 SUF
144.6 298 M
(int) s
/F-gs-font 7 7 SF
157.2 298 M
([] A, ) s
/Courier-Bold 7 7 SUF
182.4 298 M
(int) s
/F-gs-font 7 7 SF
195 298 M
([] B, ) s
/Courier-Bold 7 7 SUF
220.2 298 M
(int) s
/F-gs-font 7 7 SF
232.8 298 M
([] C, ) s
/Courier-Bold 7 7 SUF
258 298 M
(int) s
/F-gs-font 7 7 SF
270.6 298 M
([] D\) {) s
18.6 290 M (27:) s
35.4 290 M
(    HashMap<Integer, Integer> map = ) s
/Courier-Bold 7 7 SUF
186.6 290 M
(new) s
/F-gs-font 7 7 SF
199.2 290 M
( HashMap<>\(\);) s
18.6 282 M (28:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( count = 0;) s
18.6 274 M (29:) s
18.6 266 M (30:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( currentSum = 0;) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 250 M
(// calculate the sums of the first two tuples) s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(for) s
/F-gs-font 7 7 SF
64.8 242 M
(\() s
/Courier-Bold 7 7 SUF
69 242 M
(int) s
/F-gs-font 7 7 SF
81.6 242 M
( i = 0; i < A.length; i++\) {) s
18.6 234 M (34:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(for) s
/F-gs-font 7 7 SF
73.2 234 M
(\() s
/Courier-Bold 7 7 SUF
77.4 234 M
(int) s
/F-gs-font 7 7 SF
90 234 M
( j = 0; j < B.length; j++\) {) s
18.6 226 M (35:) s
35.4 226 M
(        currentSum = A[i] + B[j];) s
18.6 218 M (36:) s
35.4 218 M
(        map.put\(currentSum, map.getOrDefault\(currentSum, 0\) + 1\);) s
18.6 210 M (37:) s
35.4 210 M
(      }) s
18.6 202 M (38:) s
35.4 202 M
(    }) s
18.6 194 M (39:) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 186 M
(// calculate the complement of sum of the last two tuples) s
/F-gs-font 7 7 SF
18.6 178 M (41:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( i = 0; i < C.length; i++\) {) s
18.6 170 M (42:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(for) s
/F-gs-font 7 7 SF
73.2 170 M
(\() s
/Courier-Bold 7 7 SUF
77.4 170 M
(int) s
/F-gs-font 7 7 SF
90 170 M
( j = 0; j < D.length; j++\) {) s
18.6 162 M (43:) s
35.4 162 M
(        currentSum = -C[i] - D[j];) s
18.6 154 M (44:) s
35.4 154 M
(        count += map.getOrDefault\(currentSum, 0\);) s
18.6 146 M (45:) s
35.4 146 M
(      }) s
18.6 138 M (46:) s
35.4 138 M
(    }) s
18.6 130 M (47:) s
18.6 122 M (48:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( count;) s
18.6 114 M (49:) s
35.4 114 M
(  }) s
18.6 106 M (50:) s
35.4 106 M
(}) s
_R
S
%%Page: (1) 68
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/PermutationSequence.java) def
/fdir (./math) def
/ftail (PermutationSequence.java) def
% User defined strings:
/fmodstr (Sun Feb 10 22:24:00 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PermutationSequence.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  The set [1,2,3,...,n] contains a total of n! unique permutations.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  By listing and labeling all of the permutations in order, we get the following seq) s
5 474 M
(uence for n = 3:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  "123") s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  "132") s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  "213") s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  "231") s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  "312") s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  "321") s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Given n and k, return the kth permutation sequence.) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Given n will be between 1 and 9 inclusive.) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Given k will be between 1 and n! inclusive.) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input: n = 3, k = 3) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Output: "213") s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input: n = 4, k = 9) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Output: "2314") s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( */) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
18.6 282 M (30:) s
/Courier-Bold 7 7 SUF
35.4 282 M
(class) s
/F-gs-font 7 7 SF
56.4 282 M
( Solution {) s
18.6 274 M (31:) s
35.4 274 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 274 M
(// idea is 1234 is 1 + \(permutation of 234\)) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 266 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 266 M
(// there are n! \(where n is the number of digits\) possible permutations) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 258 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 258 M
(// do count/n! to get the digit to start) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 250 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 250 M
(// e.g. when count = 6 and n = 3, then the second index of [1,2,3] will start -> 3) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 242 M
(// repeat this until n downto 0) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( String getPermutation\() s
/Courier-Bold 7 7 SUF
165.6 234 M
(int) s
/F-gs-font 7 7 SF
178.2 234 M
( n, ) s
/Courier-Bold 7 7 SUF
195 234 M
(int) s
/F-gs-font 7 7 SF
207.6 234 M
( k\) {) s
18.6 226 M (37:) s
35.4 226 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
132 226 M
(new) s
/F-gs-font 7 7 SF
144.6 226 M
( StringBuilder\(\);) s
18.6 218 M (38:) s
18.6 210 M (39:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(int) s
/F-gs-font 7 7 SF
64.8 210 M
([] factorials = ) s
/Courier-Bold 7 7 SUF
132 210 M
(new) s
/F-gs-font 7 7 SF
144.6 210 M
( ) s
/Courier-Bold 7 7 SUF
148.8 210 M
(int) s
/F-gs-font 7 7 SF
161.4 210 M
([n];) s
18.6 202 M (40:) s
35.4 202 M
(    ArrayList<Integer> list = ) s
/Courier-Bold 7 7 SUF
161.4 202 M
(new) s
/F-gs-font 7 7 SF
174 202 M
( ArrayList<>\(\);) s
18.6 194 M (41:) s
18.6 186 M (42:) s
35.4 186 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 186 M
(// construct list of numbers) s
/F-gs-font 7 7 SF
18.6 178 M (43:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( i = 1; i <= n; i++\) list.add\(i\);) s
18.6 170 M (44:) s
18.6 162 M (45:) s
35.4 162 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 162 M
(// construct factorials) s
/F-gs-font 7 7 SF
18.6 154 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 154 M
(    factorials[0] = 1;) s
18.6 146 M (47:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(int) s
/F-gs-font 7 7 SF
64.8 146 M
( sum = 1;) s
18.6 138 M (48:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(for) s
/F-gs-font 7 7 SF
64.8 138 M
(\() s
/Courier-Bold 7 7 SUF
69 138 M
(int) s
/F-gs-font 7 7 SF
81.6 138 M
( i = 1; i < n; i++\) {) s
18.6 130 M (49:) s
35.4 130 M
(      sum *= i;) s
18.6 122 M (50:) s
35.4 122 M
(      factorials[i] = sum;) s
18.6 114 M (51:) s
35.4 114 M
(    }) s
18.6 106 M (52:) s
18.6 98 M (53:) s
35.4 98 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 98 M
(// decrement the repeat to start at 0) s
/F-gs-font 7 7 SF
18.6 90 M (54:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 90 M
(    k--;) s
18.6 82 M (55:) s
18.6 74 M (56:) s
35.4 74 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 74 M
(// last_index = count/n!) s
/F-gs-font 7 7 SF
18.6 66 M (57:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 66 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 66 M
(// decrement count with the last_index * n! for the next permutation) s
/F-gs-font 7 7 SF
18.6 58 M (58:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 58 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 58 M
(// when count == 0 then just exit the loop and dump the remaining sorted numbers) s
5 50 M
( to the result) s
/F-gs-font 7 7 SF
18.6 42 M (59:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(for) s
/F-gs-font 7 7 SF
64.8 42 M
(\() s
/Courier-Bold 7 7 SUF
69 42 M
(int) s
/F-gs-font 7 7 SF
81.6 42 M
( i = n-1; i >= 0; i--\) {) s
18.6 34 M (60:) s
35.4 34 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 34 M
(int) s
/F-gs-font 7 7 SF
73.2 34 M
( last_index = k / factorials[i];) s
18.6 26 M (61:) s
18.6 18 M (62:) s
35.4 18 M
(      sb.append\(list.get\(last_index\)\);) s
18.6 10 M (63:) s
35.4 10 M
(      list.remove\(last_index\);) s
18.6 2 M (64:) s
415.6 522 M (65:) s
432.4 522 M
(      k -= last_index * factorials[i];) s
415.6 514 M (66:) s
415.6 506 M (67:) s
432.4 506 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 506 M
(if) s
/F-gs-font 7 7 SF
466 506 M
(\(k == 0\) ) s
/Courier-Bold 7 7 SUF
503.8 506 M
(break) s
/F-gs-font 7 7 SF
524.8 506 M
(;) s
415.6 498 M (68:) s
432.4 498 M
(    }) s
415.6 490 M (69:) s
415.6 482 M (70:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(for) s
/F-gs-font 7 7 SF
461.8 482 M
(\() s
/Courier-Bold 7 7 SUF
466 482 M
(int) s
/F-gs-font 7 7 SF
478.6 482 M
( i = 0; i < list.size\(\); i++\) sb.append\(list.get\(i\)\);) s
415.6 474 M (71:) s
415.6 466 M (72:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(return) s
/F-gs-font 7 7 SF
474.4 466 M
( sb.toString\(\);) s
415.6 458 M (73:) s
432.4 458 M
(  }) s
415.6 450 M (74:) s
432.4 450 M
(}) s
_R
S
%%Page: (1) 69
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/FactorialTrailingZero.java) def
/fdir (./math) def
/ftail (FactorialTrailingZero.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:29:45 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FactorialTrailingZero.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an integer n, return the number of trailing zeroes in n!.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input: 3) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Output: 0) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Explanation: 3! = 6, no trailing zero.) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: 5) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation: 5! = 120, one trailing zero.) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Note: Your solution should be in logarithmic time complexity.) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
18.6 378 M (19:) s
/Courier-Bold 7 7 SUF
35.4 378 M
(class) s
/F-gs-font 7 7 SF
56.4 378 M
( FactorialTrailingZero {) s
18.6 370 M (20:) s
35.4 370 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 370 M
(// 5! = 120) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 362 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 362 M
(// 10! = 3628800) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// every multiple of 5 factorials, adds a trailing zero) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( ) s
/Courier-Bold 7 7 SUF
73.2 346 M
(int) s
/F-gs-font 7 7 SF
85.8 346 M
( trailingZeroes\() s
/Courier-Bold 7 7 SUF
153 346 M
(int) s
/F-gs-font 7 7 SF
165.6 346 M
( n\) {) s
18.6 338 M (24:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(int) s
/F-gs-font 7 7 SF
64.8 338 M
( count = 0;) s
18.6 330 M (25:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(while) s
/F-gs-font 7 7 SF
73.2 330 M
(\(n > 4\) {) s
18.6 322 M (26:) s
35.4 322 M
(      n /= 5;) s
18.6 314 M (27:) s
35.4 314 M
(      count += n;) s
18.6 306 M (28:) s
35.4 306 M
(    }) s
18.6 298 M (29:) s
18.6 290 M (30:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(return) s
/F-gs-font 7 7 SF
77.4 290 M
( count;) s
18.6 282 M (31:) s
35.4 282 M
(  }) s
18.6 274 M (32:) s
35.4 274 M
(}) s
_R
S
%%Page: (1) 70
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/TitleToNumber.java) def
/fdir (./math) def
/ftail (TitleToNumber.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:37:44 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (TitleToNumber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a column title as appear in an Excel sheet, return its corresponding column ) s
5 490 M
(number.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  A -> 1) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  B -> 2) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  C -> 3) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  ...) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Z -> 26) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  AA -> 27) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  AB -> 28 ) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  ...) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: "A") s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input: "AB") s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Output: 28) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input: "ZY") s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Output: 701) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( */) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
18.6 282 M (30:) s
/Courier-Bold 7 7 SUF
35.4 282 M
(class) s
/F-gs-font 7 7 SF
56.4 282 M
( TitleToNumber {) s
18.6 274 M (31:) s
35.4 274 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 274 M
(public) s
/F-gs-font 7 7 SF
69 274 M
( ) s
/Courier-Bold 7 7 SUF
73.2 274 M
(int) s
/F-gs-font 7 7 SF
85.8 274 M
( titleToNumber\(String s\) {) s
18.6 266 M (32:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( num = 0;) s
18.6 258 M (33:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(int) s
/F-gs-font 7 7 SF
64.8 258 M
( multiplier = 1;) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
(\() s
/Courier-Bold 7 7 SUF
69 250 M
(int) s
/F-gs-font 7 7 SF
81.6 250 M
( i = s.length\(\) - 1; i >= 0; i--\) {) s
18.6 242 M (35:) s
35.4 242 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 242 M
(int) s
/F-gs-font 7 7 SF
73.2 242 M
( char_to_num = s.charAt\(i\) - ) s
/Courier-Bold 7 7 SUF
195 242 M
('A') s
/F-gs-font 7 7 SF
207.6 242 M
( + 1;) s
18.6 234 M (36:) s
35.4 234 M
(      num += char_to_num * multiplier;) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(      multiplier *= 26;) s
18.6 210 M (39:) s
35.4 210 M
(    }) s
18.6 202 M (40:) s
18.6 194 M (41:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(return) s
/F-gs-font 7 7 SF
77.4 194 M
( num;) s
18.6 186 M (42:) s
35.4 186 M
(  }) s
18.6 178 M (43:) s
35.4 178 M
(}) s
_R
S
%%Page: (1) 71
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/Sqrt.java) def
/fdir (./math) def
/ftail (Sqrt.java) def
% User defined strings:
/fmodstr (Mon Dec 10 19:39:38 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (Sqrt.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Implement int sqrt\(int x\).) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Compute and return the square root of x, where x is guaranteed to be a non-n) s
5 474 M
(egative integer.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Since the return type is an integer, the decimal digits are truncated and on) s
5 450 M
(ly the integer part of the result is returned.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Input: 4) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output: 2) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Input: 8) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Output: 2) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Explanation: The square root of 8 is 2.82842..., and since) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        the decimal part is truncated, 2 is returned.) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( */) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
18.6 338 M (22:) s
/Courier-Bold 7 7 SUF
35.4 338 M
(class) s
/F-gs-font 7 7 SF
56.4 338 M
( Sqrt {) s
18.6 330 M (23:) s
35.4 330 M
(        ) s
/Courier-Bold 7 7 SUF
69 330 M
(public) s
/F-gs-font 7 7 SF
94.2 330 M
( ) s
/Courier-Bold 7 7 SUF
98.4 330 M
(static) s
/F-gs-font 7 7 SF
123.6 330 M
( ) s
/Courier-Bold 7 7 SUF
127.8 330 M
(void) s
/F-gs-font 7 7 SF
144.6 330 M
( main\(String[] args\) {) s
18.6 322 M (24:) s
35.4 322 M
(                mySqrt\(10\);) s
18.6 314 M (25:) s
35.4 314 M
(        }) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(static) s
/F-gs-font 7 7 SF
98.4 298 M
( ) s
/Courier-Bold 7 7 SUF
102.6 298 M
(int) s
/F-gs-font 7 7 SF
115.2 298 M
( mySqrt\() s
/Courier-Bold 7 7 SUF
148.8 298 M
(int) s
/F-gs-font 7 7 SF
161.4 298 M
( x\) {) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(long) s
/F-gs-font 7 7 SF
69 290 M
( l = 0;) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(long) s
/F-gs-font 7 7 SF
69 282 M
( r = x;) s
18.6 274 M (30:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(long) s
/F-gs-font 7 7 SF
69 274 M
( ans = 0;) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(while) s
/F-gs-font 7 7 SF
73.2 258 M
(\(l <= r\) {) s
18.6 250 M (33:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(long) s
/F-gs-font 7 7 SF
77.4 250 M
( mid = \(l+r\)/2;) s
18.6 242 M (34:) s
35.4 242 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 242 M
(long) s
/F-gs-font 7 7 SF
77.4 242 M
( square = mid*mid;) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(if) s
/F-gs-font 7 7 SF
69 226 M
(\(square < x\) {) s
18.6 218 M (37:) s
35.4 218 M
(        l = mid+1;) s
18.6 210 M (38:) s
35.4 210 M
(        ans = mid;) s
18.6 202 M (39:) s
35.4 202 M
(      } ) s
/Courier-Bold 7 7 SUF
69 202 M
(else) s
/F-gs-font 7 7 SF
85.8 202 M
( ) s
/Courier-Bold 7 7 SUF
90 202 M
(if) s
/F-gs-font 7 7 SF
98.4 202 M
(\(square > x\) {) s
18.6 194 M (40:) s
35.4 194 M
(        r = mid-1;) s
18.6 186 M (41:) s
35.4 186 M
(      } ) s
/Courier-Bold 7 7 SUF
69 186 M
(else) s
/F-gs-font 7 7 SF
85.8 186 M
( {) s
18.6 178 M (42:) s
35.4 178 M
(        ) s
/Courier-Bold 7 7 SUF
69 178 M
(return) s
/F-gs-font 7 7 SF
94.2 178 M
( \() s
/Courier-Bold 7 7 SUF
102.6 178 M
(int) s
/F-gs-font 7 7 SF
115.2 178 M
(\) mid;) s
18.6 170 M (43:) s
35.4 170 M
(      }) s
18.6 162 M (44:) s
35.4 162 M
(    }) s
18.6 154 M (45:) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(return) s
/F-gs-font 7 7 SF
77.4 146 M
( \() s
/Courier-Bold 7 7 SUF
85.8 146 M
(int) s
/F-gs-font 7 7 SF
98.4 146 M
(\) ans;) s
18.6 138 M (47:) s
35.4 138 M
(  }) s
18.6 130 M (48:) s
35.4 130 M
(}) s
_R
S
%%Page: (1) 72
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/FindMajority.java) def
/fdir (./math) def
/ftail (FindMajority.java) def
% User defined strings:
/fmodstr (Thu Dec 13 18:46:40 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindMajority.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of size n, find the majority element. The majority element is the e) s
5 490 M
(lement that appears more than \342\\214\\212 n/2 \342\\214\\213 times.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  You may assume that the array is non-empty and the majority element always exist i) s
5 466 M
(n the array.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: [3,2,3]) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: [2,2,1,1,1,2,2]) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( */) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
18.6 370 M (18:) s
/Courier-Bold 7 7 SUF
35.4 370 M
(class) s
/F-gs-font 7 7 SF
56.4 370 M
( FindMajority {) s
18.6 362 M (19:) s
35.4 362 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 362 M
(// sorting and get the middle) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(public) s
/F-gs-font 7 7 SF
69 354 M
( ) s
/Courier-Bold 7 7 SUF
73.2 354 M
(int) s
/F-gs-font 7 7 SF
85.8 354 M
( majorityElement\() s
/Courier-Bold 7 7 SUF
157.2 354 M
(int) s
/F-gs-font 7 7 SF
169.8 354 M
([] nums\) {) s
18.6 346 M (21:) s
35.4 346 M
(    Arrays.sort\(nums\);) s
18.6 338 M (22:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(return) s
/F-gs-font 7 7 SF
77.4 338 M
( nums[nums.length/2];) s
18.6 330 M (23:) s
35.4 330 M
(  }) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 314 M
(// Set a candidate and increment if candidate appears again) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 306 M
(// if not then decrement.) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 298 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 298 M
(// Because majority will always be +1, then the count will be > 0) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( ) s
/Courier-Bold 7 7 SUF
73.2 290 M
(int) s
/F-gs-font 7 7 SF
85.8 290 M
( majorityElement2\() s
/Courier-Bold 7 7 SUF
161.4 290 M
(int) s
/F-gs-font 7 7 SF
174 290 M
([] nums\) {) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( count = 0;) s
18.6 274 M (30:) s
35.4 274 M
(    Integer candidate = ) s
/Courier-Bold 7 7 SUF
136.2 274 M
(null) s
/F-gs-font 7 7 SF
153 274 M
(;) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(for) s
/F-gs-font 7 7 SF
64.8 258 M
( \() s
/Courier-Bold 7 7 SUF
73.2 258 M
(int) s
/F-gs-font 7 7 SF
85.8 258 M
( num : nums\) {) s
18.6 250 M (33:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(if) s
/F-gs-font 7 7 SF
69 250 M
( \(count == 0\) {) s
18.6 242 M (34:) s
35.4 242 M
(        candidate = num;) s
18.6 234 M (35:) s
35.4 234 M
(      }) s
18.6 226 M (36:) s
35.4 226 M
(      count += \(num == candidate\) ? 1 : -1;) s
18.6 218 M (37:) s
35.4 218 M
(    }) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( candidate;) s
18.6 194 M (40:) s
35.4 194 M
(  }) s
18.6 186 M (41:) s
35.4 186 M
(}) s
_R
S
%%Page: (1) 73
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/PowerOfThree.java) def
/fdir (./math) def
/ftail (PowerOfThree.java) def
% User defined strings:
/fmodstr (Mon Dec 10 23:41:30 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PowerOfThree.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Given an integer, write a function to determine if it is a power of three.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Input: 27) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Input: 0) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Example 3:) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Input: 9) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Example 4:) s
/F-gs-font 7 7 SF
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Input: 45) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Follow up:) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Could you do it without using any loop / recursion?) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (25:) s
18.6 322 M (26:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(import) s
/F-gs-font 7 7 SF
60.6 322 M
( java.lang.Math;) s
18.6 314 M (27:) s
18.6 306 M (28:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( PowerOfThree {) s
18.6 298 M (29:) s
35.4 298 M
(        ) s
/Courier-Bold 7 7 SUF
69 298 M
(public) s
/F-gs-font 7 7 SF
94.2 298 M
( ) s
/Courier-Bold 7 7 SUF
98.4 298 M
(static) s
/F-gs-font 7 7 SF
123.6 298 M
( ) s
/Courier-Bold 7 7 SUF
127.8 298 M
(void) s
/F-gs-font 7 7 SF
144.6 298 M
( main\(String[] args\) {) s
18.6 290 M (30:) s
35.4 290 M
(                isPowerOfThree\(9\);) s
18.6 282 M (31:) s
35.4 282 M
(        }) s
18.6 274 M (32:) s
18.6 266 M (33:) s
35.4 266 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 266 M
(// iterative) s
/F-gs-font 7 7 SF
18.6 258 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 258 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 258 M
(public) s
/F-gs-font 7 7 SF
69 258 M
( ) s
/Courier-Bold 7 7 SUF
73.2 258 M
(static) s
/F-gs-font 7 7 SF
98.4 258 M
( ) s
/Courier-Bold 7 7 SUF
102.6 258 M
(boolean) s
/F-gs-font 7 7 SF
132 258 M
( isPowerOfThree\() s
/Courier-Bold 7 7 SUF
199.2 258 M
(int) s
/F-gs-font 7 7 SF
211.8 258 M
( n\) {) s
18.6 250 M (35:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(long) s
/F-gs-font 7 7 SF
69 250 M
( i = 1;) s
18.6 242 M (36:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(while) s
/F-gs-font 7 7 SF
73.2 242 M
(\(i < n\) i *= 3;) s
18.6 234 M (37:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(return) s
/F-gs-font 7 7 SF
77.4 234 M
( i == n;) s
18.6 226 M (38:) s
35.4 226 M
(  }) s
18.6 218 M (39:) s
18.6 210 M (40:) s
35.4 210 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 210 M
(// base conversion with regex) s
/F-gs-font 7 7 SF
18.6 202 M (41:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 202 M
(public) s
/F-gs-font 7 7 SF
69 202 M
( ) s
/Courier-Bold 7 7 SUF
73.2 202 M
(static) s
/F-gs-font 7 7 SF
98.4 202 M
( ) s
/Courier-Bold 7 7 SUF
102.6 202 M
(boolean) s
/F-gs-font 7 7 SF
132 202 M
( isPowerOfThree\() s
/Courier-Bold 7 7 SUF
199.2 202 M
(int) s
/F-gs-font 7 7 SF
211.8 202 M
( n\) {) s
18.6 194 M (42:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(return) s
/F-gs-font 7 7 SF
77.4 194 M
( Integer.toString\(n, 3\).matches\() s
/Courier-Bold 7 7 SUF
211.8 194 M
("^10*$") s
/F-gs-font 7 7 SF
241.2 194 M
(\);) s
18.6 186 M (43:) s
35.4 186 M
(  }) s
18.6 178 M (44:) s
18.6 170 M (45:) s
35.4 170 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 170 M
(// log3\(n\) = log10\(n\)/log10\(3\)) s
/F-gs-font 7 7 SF
18.6 162 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( ) s
/Courier-Bold 7 7 SUF
73.2 162 M
(static) s
/F-gs-font 7 7 SF
98.4 162 M
( ) s
/Courier-Bold 7 7 SUF
102.6 162 M
(boolean) s
/F-gs-font 7 7 SF
132 162 M
( isPowerOfThree\() s
/Courier-Bold 7 7 SUF
199.2 162 M
(int) s
/F-gs-font 7 7 SF
211.8 162 M
( n\) {) s
18.6 154 M (47:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(return) s
/F-gs-font 7 7 SF
77.4 154 M
( \(Math.log10\(n\) / Math.log10\(3\)\) % 1 == 0;) s
18.6 146 M (48:) s
35.4 146 M
(  }) s
18.6 138 M (49:) s
18.6 130 M (50:) s
35.4 130 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 130 M
(// 1162261467 = log3\(Integer.MAX_VALUE\)) s
/F-gs-font 7 7 SF
18.6 122 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 122 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 122 M
(// because 3 is a prime number, the only divisor of 3^n is 3^n-1 to 3^1) s
/F-gs-font 7 7 SF
18.6 114 M (52:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 114 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 114 M
(public) s
/F-gs-font 7 7 SF
69 114 M
( ) s
/Courier-Bold 7 7 SUF
73.2 114 M
(static) s
/F-gs-font 7 7 SF
98.4 114 M
( ) s
/Courier-Bold 7 7 SUF
102.6 114 M
(boolean) s
/F-gs-font 7 7 SF
132 114 M
( isPowerOfThree\() s
/Courier-Bold 7 7 SUF
199.2 114 M
(int) s
/F-gs-font 7 7 SF
211.8 114 M
( n\) {) s
18.6 106 M (53:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(return) s
/F-gs-font 7 7 SF
77.4 106 M
( n > 0 && 1162261467 % n == 0;) s
18.6 98 M (54:) s
35.4 98 M
(  }) s
18.6 90 M (55:) s
35.4 90 M
(}) s
_R
S
%%Page: (1) 74
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/PlusOne.java) def
/fdir (./math) def
/ftail (PlusOne.java) def
% User defined strings:
/fmodstr (Mon Dec 10 23:51:40 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PlusOne.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(  Runtime: 0 ms, faster than 100.00% of Java online submissions for Plus One.) s
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 490 M
(        Given a non-empty array of digits representing a non-negative integer, plus ) s
5 482 M
(one to the integer.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        The digits are stored such that the most significant digit is at the head of) s
5 458 M
( the list, and each element in the array contain a single digit.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        You may assume the integer does not contain any leading zero, except the num) s
5 434 M
(ber 0 itself.) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Input: [1,2,3]) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        Output: [1,2,4]) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Explanation: The array represents the integer 123.) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Input: [4,3,2,1]) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Output: [4,3,2,2]) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Explanation: The array represents the integer 4321.) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
18.6 322 M (23:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( PlusOne {) s
18.6 314 M (24:) s
35.4 314 M
(        ) s
/Courier-Bold 7 7 SUF
69 314 M
(public) s
/F-gs-font 7 7 SF
94.2 314 M
( ) s
/Courier-Bold 7 7 SUF
98.4 314 M
(static) s
/F-gs-font 7 7 SF
123.6 314 M
( ) s
/Courier-Bold 7 7 SUF
127.8 314 M
(void) s
/F-gs-font 7 7 SF
144.6 314 M
( main\(String[] args\) {) s
18.6 306 M (25:) s
35.4 306 M
(                ) s
/Courier-Bold 7 7 SUF
102.6 306 M
(int) s
/F-gs-font 7 7 SF
115.2 306 M
([] digits = ) s
/Courier-Bold 7 7 SUF
165.6 306 M
(new) s
/F-gs-font 7 7 SF
178.2 306 M
( ) s
/Courier-Bold 7 7 SUF
182.4 306 M
(int) s
/F-gs-font 7 7 SF
195 306 M
([] { 4,3,2,1 };) s
18.6 298 M (26:) s
35.4 298 M
(                plusOne\(digits\);) s
18.6 290 M (27:) s
35.4 290 M
(        }) s
18.6 282 M (28:) s
18.6 274 M (29:) s
35.4 274 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 274 M
(public) s
/F-gs-font 7 7 SF
69 274 M
( ) s
/Courier-Bold 7 7 SUF
73.2 274 M
(static) s
/F-gs-font 7 7 SF
98.4 274 M
( ) s
/Courier-Bold 7 7 SUF
102.6 274 M
(int) s
/F-gs-font 7 7 SF
115.2 274 M
([] plusOne\() s
/Courier-Bold 7 7 SUF
161.4 274 M
(int) s
/F-gs-font 7 7 SF
174 274 M
([] digits\) {) s
18.6 266 M (30:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( carry = 1;) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
(\() s
/Courier-Bold 7 7 SUF
69 250 M
(int) s
/F-gs-font 7 7 SF
81.6 250 M
( i = digits.length-1; i >= 0; i--\) {) s
18.6 242 M (33:) s
35.4 242 M
(      digits[i] += carry;) s
18.6 234 M (34:) s
35.4 234 M
(      carry = digits[i] / 10;) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 218 M
(if) s
/F-gs-font 7 7 SF
69 218 M
(\(digits[i] >= 10\) digits[i] %= 10;) s
18.6 210 M (37:) s
35.4 210 M
(    }) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 194 M
(// the only possible case for this is: 9, 99, 999, 9999, ...) s
/F-gs-font 7 7 SF
18.6 186 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(if) s
/F-gs-font 7 7 SF
60.6 186 M
(\(carry == 1\) {) s
18.6 178 M (41:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(int) s
/F-gs-font 7 7 SF
73.2 178 M
([] result = ) s
/Courier-Bold 7 7 SUF
123.6 178 M
(new) s
/F-gs-font 7 7 SF
136.2 178 M
( ) s
/Courier-Bold 7 7 SUF
140.4 178 M
(int) s
/F-gs-font 7 7 SF
153 178 M
([digits.length+1];) s
18.6 170 M (42:) s
35.4 170 M
(      result[0] = 1;) s
18.6 162 M (43:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(return) s
/F-gs-font 7 7 SF
85.8 162 M
( result;) s
18.6 154 M (44:) s
35.4 154 M
(    }) s
18.6 146 M (45:) s
18.6 138 M (46:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(return) s
/F-gs-font 7 7 SF
77.4 138 M
( digits;) s
18.6 130 M (47:) s
35.4 130 M
(  }) s
18.6 122 M (48:) s
35.4 122 M
(}) s
_R
S
%%Page: (1) 75
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/ReverseInteger.java) def
/fdir (./math) def
/ftail (ReverseInteger.java) def
% User defined strings:
/fmodstr (Mon Dec 10 23:19:56 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ReverseInteger.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 22 ms, faster than 84.73% of Java online submissions for Reverse In) s
5 498 M
(teger.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a 32-bit signed integer, reverse digits of an integer.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Input: 123) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Output: 321) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Input: -123) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Output: -321) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Example 3:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Input: 120) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        Output: 21) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Assume we are dealing with an environment which could only store integers wi) s
5 354 M
(thin the 32-bit signed integer range: [\342\\210\\222231,  231 \342\\210\\222 1]. For the purpose of t) s
5 346 M
(his problem, assume that your function returns 0 when the reversed integer overflows.) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
18.6 322 M (23:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(import) s
/F-gs-font 7 7 SF
60.6 322 M
( java.lang.Math;) s
18.6 314 M (24:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(import) s
/F-gs-font 7 7 SF
60.6 314 M
( java.util.*;) s
18.6 306 M (25:) s
18.6 298 M (26:) s
/Courier-Bold 7 7 SUF
35.4 298 M
(class) s
/F-gs-font 7 7 SF
56.4 298 M
( ReverseInteger {) s
18.6 290 M (27:) s
35.4 290 M
(        ) s
/Courier-Bold 7 7 SUF
69 290 M
(public) s
/F-gs-font 7 7 SF
94.2 290 M
( ) s
/Courier-Bold 7 7 SUF
98.4 290 M
(static) s
/F-gs-font 7 7 SF
123.6 290 M
( ) s
/Courier-Bold 7 7 SUF
127.8 290 M
(void) s
/F-gs-font 7 7 SF
144.6 290 M
( main\(String[] args\) {) s
18.6 282 M (28:) s
35.4 282 M
(                reverse\(204\);) s
18.6 274 M (29:) s
35.4 274 M
(                reverse2\(204\);) s
18.6 266 M (30:) s
35.4 266 M
(        }) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ) s
/Courier-Bold 7 7 SUF
73.2 250 M
(static) s
/F-gs-font 7 7 SF
98.4 250 M
( ) s
/Courier-Bold 7 7 SUF
102.6 250 M
(int) s
/F-gs-font 7 7 SF
115.2 250 M
( reverse\() s
/Courier-Bold 7 7 SUF
153 250 M
(int) s
/F-gs-font 7 7 SF
165.6 250 M
( x\) {) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(long) s
/F-gs-font 7 7 SF
69 242 M
( result = 0;) s
18.6 234 M (34:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(while) s
/F-gs-font 7 7 SF
73.2 234 M
(\(x != 0\) {) s
18.6 226 M (35:) s
35.4 226 M
(      result = result * 10 + \(x % 10\);) s
18.6 218 M (36:) s
35.4 218 M
(      x /= 10;) s
18.6 210 M (37:) s
35.4 210 M
(    }) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(return) s
/F-gs-font 7 7 SF
77.4 194 M
( \(result > Integer.MAX_VALUE || result < Integer.MIN_VALUE\) ? 0 : \() s
/Courier-Bold 7 7 SUF
358.8 194 M
(int) s
/F-gs-font 7 7 SF
371.4 194 M
(\) re) s
5 186 M
(sult;) s
18.6 178 M (40:) s
35.4 178 M
(  }) s
18.6 170 M (41:) s
18.6 162 M (42:) s
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( ) s
/Courier-Bold 7 7 SUF
73.2 162 M
(static) s
/F-gs-font 7 7 SF
98.4 162 M
( ) s
/Courier-Bold 7 7 SUF
102.6 162 M
(int) s
/F-gs-font 7 7 SF
115.2 162 M
( reverse2\() s
/Courier-Bold 7 7 SUF
157.2 162 M
(int) s
/F-gs-font 7 7 SF
169.8 162 M
( x\) {) s
18.6 154 M (43:) s
35.4 154 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
132 154 M
(new) s
/F-gs-font 7 7 SF
144.6 154 M
( StringBuilder\(\);) s
18.6 146 M (44:) s
35.4 146 M
(    sb.append\(Math.abs\(x\)\);) s
18.6 138 M (45:) s
18.6 130 M (46:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(try) s
/F-gs-font 7 7 SF
64.8 130 M
( {) s
18.6 122 M (47:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(int) s
/F-gs-font 7 7 SF
73.2 122 M
( result = Integer.parseInt\(sb.reverse\(\).toString\(\)\);) s
18.6 114 M (48:) s
35.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 114 M
(return) s
/F-gs-font 7 7 SF
85.8 114 M
( x >= 0 ? result : -result;) s
18.6 106 M (49:) s
35.4 106 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(catch) s
/F-gs-font 7 7 SF
81.6 106 M
(\(Exception e\) {) s
18.6 98 M (50:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(return) s
/F-gs-font 7 7 SF
85.8 98 M
( 0;) s
18.6 90 M (51:) s
35.4 90 M
(    }) s
18.6 82 M (52:) s
35.4 82 M
(  }) s
18.6 74 M (53:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 76
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/ValidPerfectSquare.java) def
/fdir (./math) def
/ftail (ValidPerfectSquare.java) def
% User defined strings:
/fmodstr (Sun Dec 09 20:57:48 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ValidPerfectSquare.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 0 ms, faster than 100.00% of Java online submissions for Valid Perf) s
5 498 M
(ect Square.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Given a positive integer num, write a function which returns True if num is ) s
5 474 M
(a perfect square else False.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Note: Do not use any built-in library function such as sqrt.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Input: 16) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        Output: true) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        Input: 14) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Output: false) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
18.6 362 M (19:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( ValidPerfectSquare {) s
18.6 354 M (20:) s
35.4 354 M
(        ) s
/Courier-Bold 7 7 SUF
69 354 M
(public) s
/F-gs-font 7 7 SF
94.2 354 M
( ) s
/Courier-Bold 7 7 SUF
98.4 354 M
(static) s
/F-gs-font 7 7 SF
123.6 354 M
( ) s
/Courier-Bold 7 7 SUF
127.8 354 M
(void) s
/F-gs-font 7 7 SF
144.6 354 M
( main\(String[] args\) {) s
18.6 346 M (21:) s
35.4 346 M
(                isPerfectSquare\(16\);) s
18.6 338 M (22:) s
35.4 338 M
(        }) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(        ) s
/Courier-Oblique 7 7 SUF
69 322 M
(// using sqrt difference - O\(sqrt\(N\)\)) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 314 M
(        ) s
/Courier-Oblique 7 7 SUF
69 314 M
(// squares:    1 4 9 16 25 36) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(        ) s
/Courier-Oblique 7 7 SUF
69 306 M
(// difference: 3 5 7 9 11) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(static) s
/F-gs-font 7 7 SF
98.4 298 M
( ) s
/Courier-Bold 7 7 SUF
102.6 298 M
(boolean) s
/F-gs-font 7 7 SF
132 298 M
( isPerfectSquare\() s
/Courier-Bold 7 7 SUF
203.4 298 M
(int) s
/F-gs-font 7 7 SF
216 298 M
( num\) {) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
( \(num < 1\) ) s
/Courier-Bold 7 7 SUF
106.8 290 M
(return) s
/F-gs-font 7 7 SF
132 290 M
( ) s
/Courier-Bold 7 7 SUF
136.2 290 M
(false) s
/F-gs-font 7 7 SF
157.2 290 M
(;) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(for) s
/F-gs-font 7 7 SF
64.8 282 M
( \() s
/Courier-Bold 7 7 SUF
73.2 282 M
(int) s
/F-gs-font 7 7 SF
85.8 282 M
( i = 1; num > 0; i += 2\) num -= i;) s
18.6 274 M (30:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(return) s
/F-gs-font 7 7 SF
77.4 274 M
( num == 0;) s
18.6 266 M (31:) s
35.4 266 M
(  }) s
18.6 258 M (32:) s
18.6 250 M (33:) s
35.4 250 M
(        ) s
/Courier-Oblique 7 7 SUF
69 250 M
(// using BinarySearch - O\(log N\)) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 242 M
(public) s
/F-gs-font 7 7 SF
69 242 M
( ) s
/Courier-Bold 7 7 SUF
73.2 242 M
(static) s
/F-gs-font 7 7 SF
98.4 242 M
( ) s
/Courier-Bold 7 7 SUF
102.6 242 M
(boolean) s
/F-gs-font 7 7 SF
132 242 M
( isPerfectSquare2\() s
/Courier-Bold 7 7 SUF
207.6 242 M
(int) s
/F-gs-font 7 7 SF
220.2 242 M
( num\) {) s
18.6 234 M (35:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(if) s
/F-gs-font 7 7 SF
60.6 234 M
(\(num == 0\) ) s
/Courier-Bold 7 7 SUF
106.8 234 M
(return) s
/F-gs-font 7 7 SF
132 234 M
( ) s
/Courier-Bold 7 7 SUF
136.2 234 M
(false) s
/F-gs-font 7 7 SF
157.2 234 M
(;) s
18.6 226 M (36:) s
18.6 218 M (37:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(long) s
/F-gs-font 7 7 SF
69 218 M
( left = 0;) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(long) s
/F-gs-font 7 7 SF
69 210 M
( right = num;) s
18.6 202 M (39:) s
18.6 194 M (40:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(while) s
/F-gs-font 7 7 SF
73.2 194 M
(\(left <= right\) {) s
18.6 186 M (41:) s
35.4 186 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 186 M
(long) s
/F-gs-font 7 7 SF
77.4 186 M
( mid = \(left + right\)/2;) s
18.6 178 M (42:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(long) s
/F-gs-font 7 7 SF
77.4 178 M
( t = mid * mid;) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(if) s
/F-gs-font 7 7 SF
69 162 M
(\(t == num\) {) s
18.6 154 M (45:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(return) s
/F-gs-font 7 7 SF
94.2 154 M
( ) s
/Courier-Bold 7 7 SUF
98.4 154 M
(true) s
/F-gs-font 7 7 SF
115.2 154 M
(;) s
18.6 146 M (46:) s
35.4 146 M
(      } ) s
/Courier-Bold 7 7 SUF
69 146 M
(else) s
/F-gs-font 7 7 SF
85.8 146 M
( ) s
/Courier-Bold 7 7 SUF
90 146 M
(if) s
/F-gs-font 7 7 SF
98.4 146 M
(\(num > t\) {) s
18.6 138 M (47:) s
35.4 138 M
(        left = mid + 1;) s
18.6 130 M (48:) s
35.4 130 M
(      } ) s
/Courier-Bold 7 7 SUF
69 130 M
(else) s
/F-gs-font 7 7 SF
85.8 130 M
( {) s
18.6 122 M (49:) s
35.4 122 M
(        right = mid - 1;) s
18.6 114 M (50:) s
35.4 114 M
(      }) s
18.6 106 M (51:) s
35.4 106 M
(    }) s
18.6 98 M (52:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(return) s
/F-gs-font 7 7 SF
77.4 98 M
( ) s
/Courier-Bold 7 7 SUF
81.6 98 M
(false) s
/F-gs-font 7 7 SF
102.6 98 M
(;) s
18.6 90 M (53:) s
35.4 90 M
(  }) s
18.6 82 M (54:) s
18.6 74 M (55:) s
35.4 74 M
(        ) s
/Courier-Oblique 7 7 SUF
69 74 M
(// using Newton Method - almost constant time) s
/F-gs-font 7 7 SF
18.6 66 M (56:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 66 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 66 M
(public) s
/F-gs-font 7 7 SF
69 66 M
( ) s
/Courier-Bold 7 7 SUF
73.2 66 M
(static) s
/F-gs-font 7 7 SF
98.4 66 M
( ) s
/Courier-Bold 7 7 SUF
102.6 66 M
(boolean) s
/F-gs-font 7 7 SF
132 66 M
( isPerfectSquare3\() s
/Courier-Bold 7 7 SUF
207.6 66 M
(int) s
/F-gs-font 7 7 SF
220.2 66 M
( num\) {) s
18.6 58 M (57:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(if) s
/F-gs-font 7 7 SF
60.6 58 M
( \(num < 1\) ) s
/Courier-Bold 7 7 SUF
106.8 58 M
(return) s
/F-gs-font 7 7 SF
132 58 M
( ) s
/Courier-Bold 7 7 SUF
136.2 58 M
(false) s
/F-gs-font 7 7 SF
157.2 58 M
(;) s
18.6 50 M (58:) s
18.6 42 M (59:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(long) s
/F-gs-font 7 7 SF
69 42 M
( t = num / 2;) s
18.6 34 M (60:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(while) s
/F-gs-font 7 7 SF
73.2 34 M
( \(t * t > num\) {) s
18.6 26 M (61:) s
35.4 26 M
(      t = \(t + num / t\) / 2;) s
18.6 18 M (62:) s
35.4 18 M
(    }) s
18.6 10 M (63:) s
18.6 2 M (64:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(return) s
/F-gs-font 7 7 SF
77.4 2 M
( t * t == num;) s
415.6 522 M (65:) s
432.4 522 M
(  }) s
415.6 514 M (66:) s
432.4 514 M
(}) s
_R
S
%%Page: (1) 77
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/RomanInt.java) def
/fdir (./math) def
/ftail (RomanInt.java) def
% User defined strings:
/fmodstr (Mon Dec 10 20:13:17 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RomanInt.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 37 ms, faster than 95.48% of Java online submissions for Roman to I) s
5 498 M
(nteger.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Roman numerals are represented by seven different symbols: I, V, X, L, C, D ) s
5 474 M
(and M.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Symbol       Value) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        I             1) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        V             5) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        X             10) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        L             50) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        C             100) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        D             500) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        M             1000) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        For example, two is written as II in Roman numeral, just two one's added tog) s
5 386 M
(ether. Twelve is written as, XII, which is simply X + II. The number twenty seven is written) s
5 378 M
( as XXVII, which is XX + V + II.) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Roman numerals are usually written largest to smallest from left to right. H) s
5 354 M
(owever, the numeral for four is not IIII. Instead, the number four is written as IV. Because) s
5 346 M
( the one is before the five we subtract it making four. The same principle applies to the nu) s
5 338 M
(mber nine, which is written as IX. There are six instances where subtraction is used:) s
/F-gs-font 7 7 SF
18.6 330 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(        I can be placed before V \(5\) and X \(10\) to make 4 and 9. ) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(        X can be placed before L \(50\) and C \(100\) to make 40 and 90. ) s
/F-gs-font 7 7 SF
18.6 306 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        C can be placed before D \(500\) and M \(1000\) to make 400 and 900.) s
/F-gs-font 7 7 SF
18.6 298 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(        Given a roman numeral, convert it to an integer. Input is guaranteed to be w) s
5 290 M
(ithin the range from 1 to 3999.) s
/F-gs-font 7 7 SF
18.6 282 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 274 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 266 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 258 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(        Input: "III") s
/F-gs-font 7 7 SF
18.6 250 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(        Output: 3) s
/F-gs-font 7 7 SF
18.6 242 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 234 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 226 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(        Input: "IV") s
/F-gs-font 7 7 SF
18.6 218 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(        Output: 4) s
/F-gs-font 7 7 SF
18.6 210 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(        Example 3:) s
/F-gs-font 7 7 SF
18.6 202 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 194 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(        Input: "IX") s
/F-gs-font 7 7 SF
18.6 186 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(        Output: 9) s
/F-gs-font 7 7 SF
18.6 178 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(        Example 4:) s
/F-gs-font 7 7 SF
18.6 170 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 162 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
(        Input: "LVIII") s
/F-gs-font 7 7 SF
18.6 154 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
(        Output: 58) s
/F-gs-font 7 7 SF
18.6 146 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
(        Explanation: L = 50, V= 5, III = 3.) s
/F-gs-font 7 7 SF
18.6 138 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
(        Example 5:) s
/F-gs-font 7 7 SF
18.6 130 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 122 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(        Input: "MCMXCIV") s
/F-gs-font 7 7 SF
18.6 114 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 114 M
(        Output: 1994) s
/F-gs-font 7 7 SF
18.6 106 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 106 M
(        Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.) s
/F-gs-font 7 7 SF
18.6 98 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 98 M
( */) s
/F-gs-font 7 7 SF
18.6 90 M (47:) s
18.6 82 M (48:) s
/Courier-Bold 7 7 SUF
35.4 82 M
(class) s
/F-gs-font 7 7 SF
56.4 82 M
( RomanInt {) s
18.6 74 M (49:) s
35.4 74 M
(        ) s
/Courier-Bold 7 7 SUF
69 74 M
(public) s
/F-gs-font 7 7 SF
94.2 74 M
( ) s
/Courier-Bold 7 7 SUF
98.4 74 M
(static) s
/F-gs-font 7 7 SF
123.6 74 M
( ) s
/Courier-Bold 7 7 SUF
127.8 74 M
(void) s
/F-gs-font 7 7 SF
144.6 74 M
( main\(String[] args\) {) s
18.6 66 M (50:) s
35.4 66 M
(                romanToInt\() s
/Courier-Bold 7 7 SUF
148.8 66 M
("III") s
/F-gs-font 7 7 SF
169.8 66 M
(\);) s
18.6 58 M (51:) s
35.4 58 M
(        }) s
18.6 50 M (52:) s
18.6 42 M (53:) s
35.4 42 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 42 M
(public) s
/F-gs-font 7 7 SF
69 42 M
( ) s
/Courier-Bold 7 7 SUF
73.2 42 M
(static) s
/F-gs-font 7 7 SF
98.4 42 M
( ) s
/Courier-Bold 7 7 SUF
102.6 42 M
(int) s
/F-gs-font 7 7 SF
115.2 42 M
( romanToInt\(String s\) {) s
18.6 34 M (54:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(int) s
/F-gs-font 7 7 SF
64.8 34 M
([] dict = ) s
/Courier-Bold 7 7 SUF
106.8 34 M
(new) s
/F-gs-font 7 7 SF
119.4 34 M
( ) s
/Courier-Bold 7 7 SUF
123.6 34 M
(int) s
/F-gs-font 7 7 SF
136.2 34 M
([26];) s
18.6 26 M (55:) s
35.4 26 M
(    dict[) s
/Courier-Bold 7 7 SUF
73.2 26 M
('I') s
/F-gs-font 7 7 SF
85.8 26 M
(-) s
/Courier-Bold 7 7 SUF
90 26 M
('A') s
/F-gs-font 7 7 SF
102.6 26 M
(] = 1;) s
18.6 18 M (56:) s
35.4 18 M
(    dict[) s
/Courier-Bold 7 7 SUF
73.2 18 M
('V') s
/F-gs-font 7 7 SF
85.8 18 M
(-) s
/Courier-Bold 7 7 SUF
90 18 M
('A') s
/F-gs-font 7 7 SF
102.6 18 M
(] = 5;) s
18.6 10 M (57:) s
35.4 10 M
(    dict[) s
/Courier-Bold 7 7 SUF
73.2 10 M
('X') s
/F-gs-font 7 7 SF
85.8 10 M
(-) s
/Courier-Bold 7 7 SUF
90 10 M
('A') s
/F-gs-font 7 7 SF
102.6 10 M
(] = 10;) s
18.6 2 M (58:) s
35.4 2 M
(    dict[) s
/Courier-Bold 7 7 SUF
73.2 2 M
('L') s
/F-gs-font 7 7 SF
85.8 2 M
(-) s
/Courier-Bold 7 7 SUF
90 2 M
('A') s
/F-gs-font 7 7 SF
102.6 2 M
(] = 50;) s
415.6 522 M (59:) s
432.4 522 M
(    dict[) s
/Courier-Bold 7 7 SUF
470.2 522 M
('C') s
/F-gs-font 7 7 SF
482.8 522 M
(-) s
/Courier-Bold 7 7 SUF
487 522 M
('A') s
/F-gs-font 7 7 SF
499.6 522 M
(] = 100;) s
415.6 514 M (60:) s
432.4 514 M
(    dict[) s
/Courier-Bold 7 7 SUF
470.2 514 M
('D') s
/F-gs-font 7 7 SF
482.8 514 M
(-) s
/Courier-Bold 7 7 SUF
487 514 M
('A') s
/F-gs-font 7 7 SF
499.6 514 M
(] = 500;) s
415.6 506 M (61:) s
432.4 506 M
(    dict[) s
/Courier-Bold 7 7 SUF
470.2 506 M
('M') s
/F-gs-font 7 7 SF
482.8 506 M
(-) s
/Courier-Bold 7 7 SUF
487 506 M
('A') s
/F-gs-font 7 7 SF
499.6 506 M
(] = 1000;) s
415.6 498 M (62:) s
415.6 490 M (63:) s
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(int) s
/F-gs-font 7 7 SF
461.8 490 M
( result = 0;) s
415.6 482 M (64:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(int) s
/F-gs-font 7 7 SF
461.8 482 M
( previous_value = Integer.MAX_VALUE;) s
415.6 474 M (65:) s
432.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(for) s
/F-gs-font 7 7 SF
461.8 474 M
(\() s
/Courier-Bold 7 7 SUF
466 474 M
(char) s
/F-gs-font 7 7 SF
482.8 474 M
( c: s.toCharArray\(\)\) {) s
415.6 466 M (66:) s
432.4 466 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 466 M
(int) s
/F-gs-font 7 7 SF
470.2 466 M
( current = dict[c-) s
/Courier-Bold 7 7 SUF
545.8 466 M
('A') s
/F-gs-font 7 7 SF
558.4 466 M
(];) s
415.6 458 M (67:) s
432.4 458 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 458 M
(if) s
/F-gs-font 7 7 SF
466 458 M
(\(dict[c-) s
/Courier-Bold 7 7 SUF
499.6 458 M
('A') s
/F-gs-font 7 7 SF
512.2 458 M
(] > previous_value\) result -= previous_value*2;) s
415.6 450 M (68:) s
415.6 442 M (69:) s
432.4 442 M
(      result += current;) s
415.6 434 M (70:) s
432.4 434 M
(      previous_value = current;) s
415.6 426 M (71:) s
432.4 426 M
(    }) s
415.6 418 M (72:) s
415.6 410 M (73:) s
432.4 410 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 410 M
(return) s
/F-gs-font 7 7 SF
474.4 410 M
( result;) s
415.6 402 M (74:) s
432.4 402 M
(  }) s
415.6 394 M (75:) s
432.4 394 M
(}) s
_R
S
%%Page: (1) 78
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/NumberOfBits.java) def
/fdir (./math) def
/ftail (NumberOfBits.java) def
% User defined strings:
/fmodstr (Tue Dec 11 00:28:24 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (NumberOfBits.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Write a function that takes an unsigned integer and returns the number of '1) s
5 490 M
(' bits it has \(also known as the Hamming weight\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Input: 11) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Output: 3) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Explanation: Integer 11 has binary representation 00000000000000000000000000) s
5 434 M
(001011 ) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Input: 128) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Output: 1) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(        Explanation: Integer 128 has binary representation 0000000000000000000000001) s
5 386 M
(0000000) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
18.6 362 M (18:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(public) s
/F-gs-font 7 7 SF
60.6 362 M
( ) s
/Courier-Bold 7 7 SUF
64.8 362 M
(class) s
/F-gs-font 7 7 SF
85.8 362 M
( NumberOfBits {) s
18.6 354 M (19:) s
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(/*) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(                Instead of checking every bit of the number, we repeatedly flip the) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(                least-significant 11-bit of the number to 00, and add 11 to the sum.) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(                As soon as the number becomes 00, we know that it does not have any ) s
5 322 M
(') s
/F-gs-font 7 7 SF
18.6 314 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(                more 11-bits, and we return the sum.) s
/F-gs-font 7 7 SF
18.6 306 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 298 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(                The key idea here is to realize that for any number nn, doing a bit-) s
5 290 M
(wise) s
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(                AND of nn and n - 1n\342\\210\\2221 flips the least-significant 11-bit in) s
5 274 M
( nn to 00.) s
/F-gs-font 7 7 SF
18.6 266 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(                Why? Consider the binary representations of nn and n - 1n\342\\210\\2221.) s
/F-gs-font 7 7 SF
18.6 258 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  */) s
/F-gs-font 7 7 SF
18.6 250 M (29:) s
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ) s
/Courier-Bold 7 7 SUF
73.2 250 M
(int) s
/F-gs-font 7 7 SF
85.8 250 M
( hammingWeight\() s
/Courier-Bold 7 7 SUF
148.8 250 M
(int) s
/F-gs-font 7 7 SF
161.4 250 M
( n\) {) s
18.6 242 M (30:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(int) s
/F-gs-font 7 7 SF
64.8 242 M
( count = 0;) s
18.6 234 M (31:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(while) s
/F-gs-font 7 7 SF
73.2 234 M
(\(n != 0\) {) s
18.6 226 M (32:) s
35.4 226 M
(      count++;) s
18.6 218 M (33:) s
35.4 218 M
(      n &= n-1;) s
18.6 210 M (34:) s
35.4 210 M
(    }) s
18.6 202 M (35:) s
18.6 194 M (36:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(return) s
/F-gs-font 7 7 SF
77.4 194 M
( count;) s
18.6 186 M (37:) s
35.4 186 M
(  }) s
18.6 178 M (38:) s
35.4 178 M
(}) s
_R
S
%%Page: (1) 79
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./math/WaterAndJugProblem.java) def
/fdir (./math) def
/ftail (WaterAndJugProblem.java) def
% User defined strings:
/fmodstr (Sun Feb 24 13:07:05 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (WaterAndJugProblem.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given two jugs with capacities x and y litres. There is an infinite amount) s
5 490 M
( of water supply available. You need to determine whether it is possible to measure exactly ) s
5 482 M
(z litres using these two jugs.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  If z liters of water is measurable, you must have z liters of water contained with) s
5 458 M
(in one or both buckets by the end.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Operations allowed:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Fill any of the jugs completely with water.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Empty any of the jugs.) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Pour water from one jug into another till the other jug is completely full or the ) s
5 402 M
(first jug itself is empty.) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 1: \(From the famous "Die Hard" example\)) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: x = 3, y = 5, z = 4) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: True) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input: x = 2, y = 6, z = 5) s
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Output: False) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( */) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
18.6 314 M (23:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( Solution {) s
18.6 306 M (24:) s
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( ) s
/Courier-Bold 7 7 SUF
73.2 306 M
(boolean) s
/F-gs-font 7 7 SF
102.6 306 M
( canMeasureWater\() s
/Courier-Bold 7 7 SUF
174 306 M
(int) s
/F-gs-font 7 7 SF
186.6 306 M
( x, ) s
/Courier-Bold 7 7 SUF
203.4 306 M
(int) s
/F-gs-font 7 7 SF
216 306 M
( y, ) s
/Courier-Bold 7 7 SUF
232.8 306 M
(int) s
/F-gs-font 7 7 SF
245.4 306 M
( z\) {) s
18.6 298 M (25:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(if) s
/F-gs-font 7 7 SF
60.6 298 M
(\(z == x || z == y || z == x + y || z == 0\) ) s
/Courier-Bold 7 7 SUF
241.2 298 M
(return) s
/F-gs-font 7 7 SF
266.4 298 M
( ) s
/Courier-Bold 7 7 SUF
270.6 298 M
(true) s
/F-gs-font 7 7 SF
287.4 298 M
(;) s
18.6 290 M (26:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(z > x + y\) ) s
/Courier-Bold 7 7 SUF
111 290 M
(return) s
/F-gs-font 7 7 SF
136.2 290 M
( ) s
/Courier-Bold 7 7 SUF
140.4 290 M
(false) s
/F-gs-font 7 7 SF
161.4 290 M
(;) s
18.6 282 M (27:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(if) s
/F-gs-font 7 7 SF
60.6 282 M
(\(x == 0 || y == 0\) ) s
/Courier-Bold 7 7 SUF
140.4 282 M
(return) s
/F-gs-font 7 7 SF
165.6 282 M
( ) s
/Courier-Bold 7 7 SUF
169.8 282 M
(false) s
/F-gs-font 7 7 SF
190.8 282 M
(;) s
18.6 274 M (28:) s
18.6 266 M (29:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( bigger = Math.max\(x, y\);) s
18.6 258 M (30:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(int) s
/F-gs-font 7 7 SF
64.8 258 M
( smaller = Math.min\(x, y\);) s
18.6 250 M (31:) s
18.6 242 M (32:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(int) s
/F-gs-font 7 7 SF
64.8 242 M
( curr = 0;) s
18.6 234 M (33:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(while) s
/F-gs-font 7 7 SF
73.2 234 M
(\(curr < smaller\) {) s
18.6 226 M (34:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(if) s
/F-gs-font 7 7 SF
69 226 M
(\(smaller - \(\(bigger - curr\) % smaller\) == z\) ) s
/Courier-Bold 7 7 SUF
258 226 M
(return) s
/F-gs-font 7 7 SF
283.2 226 M
( ) s
/Courier-Bold 7 7 SUF
287.4 226 M
(true) s
/F-gs-font 7 7 SF
304.2 226 M
(;) s
18.6 218 M (35:) s
35.4 218 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 218 M
(if) s
/F-gs-font 7 7 SF
69 218 M
(\(smaller - \(\(bigger - curr\) % smaller\) + smaller == z\) ) s
/Courier-Bold 7 7 SUF
300 218 M
(return) s
/F-gs-font 7 7 SF
325.2 218 M
( ) s
/Courier-Bold 7 7 SUF
329.4 218 M
(true) s
/F-gs-font 7 7 SF
346.2 218 M
(;) s
18.6 210 M (36:) s
35.4 210 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 210 M
(if) s
/F-gs-font 7 7 SF
69 210 M
(\(smaller - \(\(bigger - curr\) % smaller\) + bigger == z\) ) s
/Courier-Bold 7 7 SUF
295.8 210 M
(return) s
/F-gs-font 7 7 SF
321 210 M
( ) s
/Courier-Bold 7 7 SUF
325.2 210 M
(true) s
/F-gs-font 7 7 SF
342 210 M
(;) s
18.6 202 M (37:) s
18.6 194 M (38:) s
35.4 194 M
(      curr = smaller - \(\(bigger - curr\) % smaller\);) s
18.6 186 M (39:) s
35.4 186 M
(    }) s
18.6 178 M (40:) s
18.6 170 M (41:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(return) s
/F-gs-font 7 7 SF
77.4 170 M
( ) s
/Courier-Bold 7 7 SUF
81.6 170 M
(false) s
/F-gs-font 7 7 SF
102.6 170 M
(;) s
18.6 162 M (42:) s
35.4 162 M
(  }) s
18.6 154 M (43:) s
35.4 154 M
(}) s
_R
S
%%Page: (1) 80
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./bits/SumOfTwoIntegers.java) def
/fdir (./bits) def
/ftail (SumOfTwoIntegers.java) def
% User defined strings:
/fmodstr (Mon Dec 10 02:21:59 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SumOfTwoIntegers.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 0 ms, faster than 100.00% of Java online submissions for Sum of Two) s
5 498 M
( Integers.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Calculate the sum of two integers a and b, but you are not allowed to use th) s
5 474 M
(e operator + and -.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Input: a = 1, b = 2) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Output: 3) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(        Input: a = -2, b = 3) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Output: 1) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
18.6 378 M (17:) s
/Courier-Bold 7 7 SUF
35.4 378 M
(class) s
/F-gs-font 7 7 SF
56.4 378 M
( SumOfTwoIntegers {) s
18.6 370 M (18:) s
35.4 370 M
(        ) s
/Courier-Bold 7 7 SUF
69 370 M
(public) s
/F-gs-font 7 7 SF
94.2 370 M
( ) s
/Courier-Bold 7 7 SUF
98.4 370 M
(static) s
/F-gs-font 7 7 SF
123.6 370 M
( ) s
/Courier-Bold 7 7 SUF
127.8 370 M
(void) s
/F-gs-font 7 7 SF
144.6 370 M
( main\(String[] args\) {) s
18.6 362 M (19:) s
35.4 362 M
(                getSum\(2, 3\);) s
18.6 354 M (20:) s
35.4 354 M
(        }) s
18.6 346 M (21:) s
18.6 338 M (22:) s
35.4 338 M
(        ) s
/Courier-Bold 7 7 SUF
69 338 M
(public) s
/F-gs-font 7 7 SF
94.2 338 M
( ) s
/Courier-Bold 7 7 SUF
98.4 338 M
(static) s
/F-gs-font 7 7 SF
123.6 338 M
( ) s
/Courier-Bold 7 7 SUF
127.8 338 M
(int) s
/F-gs-font 7 7 SF
140.4 338 M
( getSum\() s
/Courier-Bold 7 7 SUF
174 338 M
(int) s
/F-gs-font 7 7 SF
186.6 338 M
( a, ) s
/Courier-Bold 7 7 SUF
203.4 338 M
(int) s
/F-gs-font 7 7 SF
216 338 M
( b\) {) s
18.6 330 M (23:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(if) s
/F-gs-font 7 7 SF
60.6 330 M
(\(b == 0\) ) s
/Courier-Bold 7 7 SUF
98.4 330 M
(return) s
/F-gs-font 7 7 SF
123.6 330 M
( a;) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(int) s
/F-gs-font 7 7 SF
64.8 314 M
( partialSum = a ^ b;) s
18.6 306 M (26:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(int) s
/F-gs-font 7 7 SF
64.8 306 M
( carry = \(a & b\) << 1;) s
18.6 298 M (27:) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(return) s
/F-gs-font 7 7 SF
77.4 290 M
( getSum\(partialSum, carry\);) s
18.6 282 M (29:) s
35.4 282 M
(  }) s
18.6 274 M (30:) s
18.6 266 M (31:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( ) s
/Courier-Bold 7 7 SUF
73.2 266 M
(static) s
/F-gs-font 7 7 SF
98.4 266 M
( ) s
/Courier-Bold 7 7 SUF
102.6 266 M
(int) s
/F-gs-font 7 7 SF
115.2 266 M
( getSum2\() s
/Courier-Bold 7 7 SUF
153 266 M
(int) s
/F-gs-font 7 7 SF
165.6 266 M
( a, ) s
/Courier-Bold 7 7 SUF
182.4 266 M
(int) s
/F-gs-font 7 7 SF
195 266 M
( b\) {) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(boolean) s
/F-gs-font 7 7 SF
81.6 258 M
([] bits_a = ) s
/Courier-Bold 7 7 SUF
132 258 M
(new) s
/F-gs-font 7 7 SF
144.6 258 M
( ) s
/Courier-Bold 7 7 SUF
148.8 258 M
(boolean) s
/F-gs-font 7 7 SF
178.2 258 M
([32];) s
18.6 250 M (33:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(boolean) s
/F-gs-font 7 7 SF
81.6 250 M
([] bits_b = ) s
/Courier-Bold 7 7 SUF
132 250 M
(new) s
/F-gs-font 7 7 SF
144.6 250 M
( ) s
/Courier-Bold 7 7 SUF
148.8 250 M
(boolean) s
/F-gs-font 7 7 SF
178.2 250 M
([32];) s
18.6 242 M (34:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(boolean) s
/F-gs-font 7 7 SF
81.6 242 M
([] result_arr = ) s
/Courier-Bold 7 7 SUF
148.8 242 M
(new) s
/F-gs-font 7 7 SF
161.4 242 M
( ) s
/Courier-Bold 7 7 SUF
165.6 242 M
(boolean) s
/F-gs-font 7 7 SF
195 242 M
([32];) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(for) s
/F-gs-font 7 7 SF
64.8 226 M
(\() s
/Courier-Bold 7 7 SUF
69 226 M
(int) s
/F-gs-font 7 7 SF
81.6 226 M
( i = 0; i < 32; i++\) {) s
18.6 218 M (37:) s
35.4 218 M
(      bits_a[i] = \(a & 1\) == 1;) s
18.6 210 M (38:) s
35.4 210 M
(      a = a >> 1;) s
18.6 202 M (39:) s
35.4 202 M
(    }) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(for) s
/F-gs-font 7 7 SF
64.8 186 M
(\() s
/Courier-Bold 7 7 SUF
69 186 M
(int) s
/F-gs-font 7 7 SF
81.6 186 M
( i = 0; i < 32; i++\) {) s
18.6 178 M (42:) s
35.4 178 M
(      bits_b[i] = \(b & 1\) == 1;) s
18.6 170 M (43:) s
35.4 170 M
(      b = b >> 1;) s
18.6 162 M (44:) s
35.4 162 M
(    }) s
18.6 154 M (45:) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(boolean) s
/F-gs-font 7 7 SF
81.6 146 M
( carry = ) s
/Courier-Bold 7 7 SUF
119.4 146 M
(false) s
/F-gs-font 7 7 SF
140.4 146 M
(;) s
18.6 138 M (47:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(for) s
/F-gs-font 7 7 SF
64.8 138 M
(\() s
/Courier-Bold 7 7 SUF
69 138 M
(int) s
/F-gs-font 7 7 SF
81.6 138 M
( i = 0; i < bits_a.length; i++\) {) s
18.6 130 M (48:) s
35.4 130 M
(      result_arr[i] = bits_a[i] ^ bits_b[i] ^ carry;) s
18.6 122 M (49:) s
35.4 122 M
(      carry = \(bits_a[i] && bits_b[i]\) || \(bits_a[i] && carry\) || \(bits_b[i] && carr) s
5 114 M
(y\);) s
18.6 106 M (50:) s
35.4 106 M
(    }) s
18.6 98 M (51:) s
18.6 90 M (52:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(int) s
/F-gs-font 7 7 SF
64.8 90 M
( result = 0;) s
18.6 82 M (53:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(for) s
/F-gs-font 7 7 SF
64.8 82 M
(\() s
/Courier-Bold 7 7 SUF
69 82 M
(int) s
/F-gs-font 7 7 SF
81.6 82 M
( i = result_arr.length-1; i >= 0; i--\) {) s
18.6 74 M (54:) s
35.4 74 M
(      result = result << 1;) s
18.6 66 M (55:) s
35.4 66 M
(      result |= result_arr[i] ? 1 : 0;) s
18.6 58 M (56:) s
35.4 58 M
(    }) s
18.6 50 M (57:) s
18.6 42 M (58:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(return) s
/F-gs-font 7 7 SF
77.4 42 M
( result;) s
18.6 34 M (59:) s
35.4 34 M
(  }) s
18.6 26 M (60:) s
35.4 26 M
(}) s
_R
S
%%Page: (1) 81
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./bits/CountBits.java) def
/fdir (./bits) def
/ftail (CountBits.java) def
% User defined strings:
/fmodstr (Mon Apr 08 01:30:13 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (CountBits.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a non negative integer number num. For every numbers i in the range 0 \342\\211\244) s
5 490 M
( i \342\\211\244 num calculate the number of 1's in their binary representation and return them as ) s
5 482 M
(an array.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Input: 2) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Output: [0,1,1]) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: 5) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: [0,1,1,2,1,2]) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( */) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
18.6 386 M (16:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(class) s
/F-gs-font 7 7 SF
56.4 386 M
( Solution {) s
18.6 378 M (17:) s
35.4 378 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 378 M
(public) s
/F-gs-font 7 7 SF
69 378 M
( ) s
/Courier-Bold 7 7 SUF
73.2 378 M
(int) s
/F-gs-font 7 7 SF
85.8 378 M
([] countBits\() s
/Courier-Bold 7 7 SUF
140.4 378 M
(int) s
/F-gs-font 7 7 SF
153 378 M
( num\) {) s
18.6 370 M (18:) s
35.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 370 M
(int) s
/F-gs-font 7 7 SF
64.8 370 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 370 M
(new) s
/F-gs-font 7 7 SF
111 370 M
( ) s
/Courier-Bold 7 7 SUF
115.2 370 M
(int) s
/F-gs-font 7 7 SF
127.8 370 M
([num + 1];) s
18.6 362 M (19:) s
35.4 362 M
(    dp[0] = 0;) s
18.6 354 M (20:) s
18.6 346 M (21:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(if) s
/F-gs-font 7 7 SF
60.6 346 M
(\(num > 0\) dp[1] = 1;) s
18.6 338 M (22:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(if) s
/F-gs-font 7 7 SF
60.6 338 M
(\(num > 1\) dp[2] = 1;) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
( lastPowerOf2 = 2;) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\() s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( i = 3; i <= num; i++\) {) s
18.6 306 M (26:) s
35.4 306 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 306 M
(if) s
/F-gs-font 7 7 SF
69 306 M
(\(isPowerOf2\(i\)\) {) s
18.6 298 M (27:) s
35.4 298 M
(        dp[i] = 1;) s
18.6 290 M (28:) s
35.4 290 M
(        lastPowerOf2 = i;) s
18.6 282 M (29:) s
35.4 282 M
(      } ) s
/Courier-Bold 7 7 SUF
69 282 M
(else) s
/F-gs-font 7 7 SF
85.8 282 M
( {) s
18.6 274 M (30:) s
35.4 274 M
(        dp[i] = dp[lastPowerOf2] + dp[i - lastPowerOf2];) s
18.6 266 M (31:) s
35.4 266 M
(      }) s
18.6 258 M (32:) s
35.4 258 M
(    }) s
18.6 250 M (33:) s
18.6 242 M (34:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(return) s
/F-gs-font 7 7 SF
77.4 242 M
( dp;) s
18.6 234 M (35:) s
35.4 234 M
(  }) s
18.6 226 M (36:) s
18.6 218 M (37:) s
35.4 218 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 218 M
(public) s
/F-gs-font 7 7 SF
69 218 M
( ) s
/Courier-Bold 7 7 SUF
73.2 218 M
(boolean) s
/F-gs-font 7 7 SF
102.6 218 M
( isPowerOf2\() s
/Courier-Bold 7 7 SUF
153 218 M
(int) s
/F-gs-font 7 7 SF
165.6 218 M
( n\) {) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( \(n & \(n - 1\)\) == 0;) s
18.6 202 M (39:) s
35.4 202 M
(  }) s
18.6 194 M (40:) s
35.4 194 M
(}) s
_R
S
%%Page: (1) 82
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./sets/UniqueMorseCodeWords.java) def
/fdir (./sets) def
/ftail (UniqueMorseCodeWords.java) def
% User defined strings:
/fmodstr (Sun Dec 09 23:29:52 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniqueMorseCodeWords.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        International Morse Code defines a standard encoding where each letter is ma) s
5 490 M
(pped to a series of dots and dashes, as follows: "a" maps to ".-", "b" maps to "-...", "c" m) s
5 482 M
(aps to "-.-.", and so on.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        For convenience, the full table for the 26 letters of the English alphabet i) s
5 458 M
(s given below:) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        [".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..",") s
5 434 M
(--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        Now, given a list of words, each word can be written as a concatenation of t) s
5 418 M
(he Morse code of each letter. For example, "cba" can be written as "-.-..--...", \(which is t) s
5 410 M
(he concatenation "-.-." + "-..." + ".-"\). We'll call such a concatenation, the transformatio) s
5 402 M
(n of a word.) s
/F-gs-font 7 7 SF
18.6 394 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Return the number of different transformations among all words we have.) s
/F-gs-font 7 7 SF
18.6 378 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Example:) s
/F-gs-font 7 7 SF
18.6 362 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(        Input: words = ["gin", "zen", "gig", "msg"]) s
/F-gs-font 7 7 SF
18.6 354 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Output: 2) s
/F-gs-font 7 7 SF
18.6 346 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Explanation: ) s
/F-gs-font 7 7 SF
18.6 338 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(        The transformation of each word is:) s
/F-gs-font 7 7 SF
18.6 330 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(        "gin" -> "--...-.") s
/F-gs-font 7 7 SF
18.6 322 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(        "zen" -> "--...-.") s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(        "gig" -> "--...--.") s
/F-gs-font 7 7 SF
18.6 306 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        "msg" -> "--...--.") s
/F-gs-font 7 7 SF
18.6 298 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 290 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(        There are 2 different transformations, "--...-." and "--...--.".) s
/F-gs-font 7 7 SF
18.6 282 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 274 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(        The length of words will be at most 100.) s
/F-gs-font 7 7 SF
18.6 258 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(        Each words[i] will have length in range [1, 12].) s
/F-gs-font 7 7 SF
18.6 250 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(        words[i] will only consist of lowercase letters.) s
/F-gs-font 7 7 SF
18.6 242 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (30:) s
18.6 226 M (31:) s
/Courier-Bold 7 7 SUF
35.4 226 M
(import) s
/F-gs-font 7 7 SF
60.6 226 M
( java.util.*;) s
18.6 218 M (32:) s
18.6 210 M (33:) s
/Courier-Bold 7 7 SUF
35.4 210 M
(class) s
/F-gs-font 7 7 SF
56.4 210 M
( UniqueMorseCodeWords {) s
18.6 202 M (34:) s
35.4 202 M
(        ) s
/Courier-Bold 7 7 SUF
69 202 M
(public) s
/F-gs-font 7 7 SF
94.2 202 M
( ) s
/Courier-Bold 7 7 SUF
98.4 202 M
(static) s
/F-gs-font 7 7 SF
123.6 202 M
( ) s
/Courier-Bold 7 7 SUF
127.8 202 M
(void) s
/F-gs-font 7 7 SF
144.6 202 M
( main\(String[] args\) {) s
18.6 194 M (35:) s
35.4 194 M
(                String[] words = ) s
/Courier-Bold 7 7 SUF
174 194 M
(new) s
/F-gs-font 7 7 SF
186.6 194 M
( String[] { ) s
/Courier-Bold 7 7 SUF
237 194 M
("obed") s
/F-gs-font 7 7 SF
262.2 194 M
(, ) s
/Courier-Bold 7 7 SUF
270.6 194 M
("josiah") s
/F-gs-font 7 7 SF
304.2 194 M
(, ) s
/Courier-Bold 7 7 SUF
312.6 194 M
("tandadjaja") s
/F-gs-font 7 7 SF
363 194 M
( };) s
18.6 186 M (36:) s
35.4 186 M
(                uniqueMorseRepresentations\(words\);) s
18.6 178 M (37:) s
35.4 178 M
(        }) s
18.6 170 M (38:) s
18.6 162 M (39:) s
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( ) s
/Courier-Bold 7 7 SUF
73.2 162 M
(static) s
/F-gs-font 7 7 SF
98.4 162 M
( ) s
/Courier-Bold 7 7 SUF
102.6 162 M
(int) s
/F-gs-font 7 7 SF
115.2 162 M
( uniqueMorseRepresentations\(String[] words\) {) s
18.6 154 M (40:) s
35.4 154 M
(    String[] codes = ) s
/Courier-Bold 7 7 SUF
123.6 154 M
(new) s
/F-gs-font 7 7 SF
136.2 154 M
( String[] {) s
18.6 146 M (41:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(".-") s
/F-gs-font 7 7 SF
77.4 146 M
(,) s
/Courier-Bold 7 7 SUF
81.6 146 M
("-...") s
/F-gs-font 7 7 SF
106.8 146 M
(,) s
/Courier-Bold 7 7 SUF
111 146 M
("-.-.") s
/F-gs-font 7 7 SF
136.2 146 M
(,) s
/Courier-Bold 7 7 SUF
140.4 146 M
("-..") s
/F-gs-font 7 7 SF
161.4 146 M
(,) s
/Courier-Bold 7 7 SUF
165.6 146 M
(".") s
/F-gs-font 7 7 SF
178.2 146 M
(,) s
/Courier-Bold 7 7 SUF
182.4 146 M
("..-.") s
/F-gs-font 7 7 SF
207.6 146 M
(,) s
/Courier-Bold 7 7 SUF
211.8 146 M
("--.") s
/F-gs-font 7 7 SF
232.8 146 M
(,) s
/Courier-Bold 7 7 SUF
237 146 M
("....") s
/F-gs-font 7 7 SF
262.2 146 M
(,) s
/Courier-Bold 7 7 SUF
266.4 146 M
("..") s
/F-gs-font 7 7 SF
283.2 146 M
(,) s
/Courier-Bold 7 7 SUF
287.4 146 M
(".---") s
/F-gs-font 7 7 SF
312.6 146 M
(,) s
/Courier-Bold 7 7 SUF
316.8 146 M
("-.-") s
/F-gs-font 7 7 SF
337.8 146 M
(,) s
/Courier-Bold 7 7 SUF
342 146 M
(".-..") s
/F-gs-font 7 7 SF
367.2 146 M
(,) s
18.6 138 M (42:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
("--") s
/F-gs-font 7 7 SF
77.4 138 M
(,) s
/Courier-Bold 7 7 SUF
81.6 138 M
("-.") s
/F-gs-font 7 7 SF
98.4 138 M
(,) s
/Courier-Bold 7 7 SUF
102.6 138 M
("---") s
/F-gs-font 7 7 SF
123.6 138 M
(,) s
/Courier-Bold 7 7 SUF
127.8 138 M
(".--.") s
/F-gs-font 7 7 SF
153 138 M
(,) s
/Courier-Bold 7 7 SUF
157.2 138 M
("--.-") s
/F-gs-font 7 7 SF
182.4 138 M
(,) s
/Courier-Bold 7 7 SUF
186.6 138 M
(".-.") s
/F-gs-font 7 7 SF
207.6 138 M
(,) s
/Courier-Bold 7 7 SUF
211.8 138 M
("...") s
/F-gs-font 7 7 SF
232.8 138 M
(,) s
/Courier-Bold 7 7 SUF
237 138 M
("-") s
/F-gs-font 7 7 SF
249.6 138 M
(,) s
/Courier-Bold 7 7 SUF
253.8 138 M
("..-") s
/F-gs-font 7 7 SF
274.8 138 M
(,) s
/Courier-Bold 7 7 SUF
279 138 M
("...-") s
/F-gs-font 7 7 SF
304.2 138 M
(,) s
/Courier-Bold 7 7 SUF
308.4 138 M
(".--") s
/F-gs-font 7 7 SF
329.4 138 M
(,) s
/Courier-Bold 7 7 SUF
333.6 138 M
("-..-") s
/F-gs-font 7 7 SF
358.8 138 M
(,) s
18.6 130 M (43:) s
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
("-.--") s
/F-gs-font 7 7 SF
85.8 130 M
(,) s
/Courier-Bold 7 7 SUF
90 130 M
("--..") s
/F-gs-font 7 7 SF
18.6 122 M (44:) s
35.4 122 M
(    };) s
18.6 114 M (45:) s
35.4 114 M
(    HashSet<String> set = ) s
/Courier-Bold 7 7 SUF
144.6 114 M
(new) s
/F-gs-font 7 7 SF
157.2 114 M
( HashSet<>\(\);) s
18.6 106 M (46:) s
18.6 98 M (47:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(for) s
/F-gs-font 7 7 SF
64.8 98 M
(\() s
/Courier-Bold 7 7 SUF
69 98 M
(int) s
/F-gs-font 7 7 SF
81.6 98 M
( i = 0; i < words.length; i++\) {) s
18.6 90 M (48:) s
35.4 90 M
(      String word = words[i];) s
18.6 82 M (49:) s
18.6 74 M (50:) s
35.4 74 M
(      String converted_word = ) s
/Courier-Bold 7 7 SUF
161.4 74 M
("") s
/F-gs-font 7 7 SF
169.8 74 M
(;) s
18.6 66 M (51:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(for) s
/F-gs-font 7 7 SF
73.2 66 M
(\() s
/Courier-Bold 7 7 SUF
77.4 66 M
(char) s
/F-gs-font 7 7 SF
94.2 66 M
( c: word.toCharArray\(\)\) converted_word += codes[c-) s
/Courier-Bold 7 7 SUF
304.2 66 M
('a') s
/F-gs-font 7 7 SF
316.8 66 M
(];) s
18.6 58 M (52:) s
35.4 58 M
(      set.add\(converted_word\);) s
18.6 50 M (53:) s
35.4 50 M
(    }) s
18.6 42 M (54:) s
18.6 34 M (55:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(return) s
/F-gs-font 7 7 SF
77.4 34 M
( set.size\(\);) s
18.6 26 M (56:) s
35.4 26 M
(  }) s
18.6 18 M (57:) s
35.4 18 M
(}) s
_R
S
%%Page: (1) 83
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./sets/ContainsDuplicate.java) def
/fdir (./sets) def
/ftail (ContainsDuplicate.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:56:25 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ContainsDuplicate.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of integers, find if the array contains any duplicates.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Your function should return true if any value appears at least twice in the array,) s
5 474 M
( and it should return false if every element is distinct.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input: [1,2,3,1]) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [1,2,3,4]) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: [1,1,1,3,3,4,3,2,4,2]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Bold 7 7 SUF
35.4 346 M
(class) s
/F-gs-font 7 7 SF
56.4 346 M
( ContainsDuplicate {) s
18.6 338 M (23:) s
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( ) s
/Courier-Bold 7 7 SUF
73.2 338 M
(boolean) s
/F-gs-font 7 7 SF
102.6 338 M
( containsDuplicate\() s
/Courier-Bold 7 7 SUF
182.4 338 M
(int) s
/F-gs-font 7 7 SF
195 338 M
([] nums\) {) s
18.6 330 M (24:) s
35.4 330 M
(    HashSet<Integer> set = ) s
/Courier-Bold 7 7 SUF
148.8 330 M
(new) s
/F-gs-font 7 7 SF
161.4 330 M
( HashSet<>\(\);) s
18.6 322 M (25:) s
18.6 314 M (26:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\() s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( i : nums\)) s
18.6 306 M (27:) s
35.4 306 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 306 M
(if) s
/F-gs-font 7 7 SF
69 306 M
(\(set.contains\(i\)\) ) s
/Courier-Bold 7 7 SUF
144.6 306 M
(return) s
/F-gs-font 7 7 SF
169.8 306 M
( ) s
/Courier-Bold 7 7 SUF
174 306 M
(true) s
/F-gs-font 7 7 SF
190.8 306 M
(;) s
18.6 298 M (28:) s
35.4 298 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 298 M
(else) s
/F-gs-font 7 7 SF
77.4 298 M
( set.add\(i\);) s
18.6 290 M (29:) s
18.6 282 M (30:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(return) s
/F-gs-font 7 7 SF
77.4 282 M
( ) s
/Courier-Bold 7 7 SUF
81.6 282 M
(false) s
/F-gs-font 7 7 SF
102.6 282 M
(;) s
18.6 274 M (31:) s
35.4 274 M
(  }) s
18.6 266 M (32:) s
35.4 266 M
(}) s
_R
S
%%Page: (1) 84
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./sets/UniqueEmailAddresses.java) def
/fdir (./sets) def
/ftail (UniqueEmailAddresses.java) def
% User defined strings:
/fmodstr (Mon Dec 10 00:05:48 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniqueEmailAddresses.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 40 ms, faster than 48.01% of Java online submissions for Unique Ema) s
5 498 M
(il Addresses.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Every email consists of a local name and a domain name, separated by the @ s) s
5 474 M
(ign.) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        For example, in alice@leetcode.com, alice is the local name, and leetcode.co) s
5 450 M
(m is the domain name.) s
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Besides lowercase letters, these emails may contain '.'s or '+'s.) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        If you add periods \('.'\) between some characters in the local name part of a) s
5 410 M
(n email address, mail sent there will be forwarded to the same address without dots in the l) s
5 402 M
(ocal name.  For example, "alice.z@leetcode.com" and "alicez@leetcode.com" forward to the sam) s
5 394 M
(e email address.  \(Note that this rule does not apply for domain names.\)) s
/F-gs-font 7 7 SF
18.6 386 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(        If you add a plus \('+'\) in the local name, everything after the first plus s) s
5 370 M
(ign will be ignored. This allows certain emails to be filtered, for example m.y+name@email.c) s
5 362 M
(om will be forwarded to my@email.com.  \(Again, this rule does not apply for domain names.\)) s
/F-gs-font 7 7 SF
18.6 354 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        It is possible to use both of these rules at the same time.) s
/F-gs-font 7 7 SF
18.6 338 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(        Given a list of emails, we send one email to each address in the list.  How ) s
5 322 M
(many different addresses actually receive mails?) s
/F-gs-font 7 7 SF
18.6 314 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 298 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 290 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(        Input: ["test.email+alex@leetcode.com","test.e.mail+bob.cathy@leetcode.com",) s
5 282 M
("testemail+david@lee.tcode.com"]) s
/F-gs-font 7 7 SF
18.6 274 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(        Output: 2) s
/F-gs-font 7 7 SF
18.6 266 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(        Explanation: "testemail@leetcode.com" and "testemail@lee.tcode.com" actually) s
5 258 M
( receive mails) s
/F-gs-font 7 7 SF
18.6 250 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 242 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(        Note:) s
/F-gs-font 7 7 SF
18.6 234 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 226 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(        1 <= emails[i].length <= 100) s
/F-gs-font 7 7 SF
18.6 218 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(        1 <= emails.length <= 100) s
/F-gs-font 7 7 SF
18.6 210 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(        Each emails[i] contains exactly one '@' character.) s
/F-gs-font 7 7 SF
18.6 202 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( */) s
/F-gs-font 7 7 SF
18.6 194 M (31:) s
18.6 186 M (32:) s
/Courier-Bold 7 7 SUF
35.4 186 M
(import) s
/F-gs-font 7 7 SF
60.6 186 M
( java.util.*;) s
18.6 178 M (33:) s
18.6 170 M (34:) s
/Courier-Bold 7 7 SUF
35.4 170 M
(class) s
/F-gs-font 7 7 SF
56.4 170 M
( Solution {) s
18.6 162 M (35:) s
35.4 162 M
(        ) s
/Courier-Bold 7 7 SUF
69 162 M
(public) s
/F-gs-font 7 7 SF
94.2 162 M
( ) s
/Courier-Bold 7 7 SUF
98.4 162 M
(static) s
/F-gs-font 7 7 SF
123.6 162 M
( ) s
/Courier-Bold 7 7 SUF
127.8 162 M
(void) s
/F-gs-font 7 7 SF
144.6 162 M
( main\(String[] args\) {) s
18.6 154 M (36:) s
35.4 154 M
(                String[] emails = ) s
/Courier-Bold 7 7 SUF
178.2 154 M
(new) s
/F-gs-font 7 7 SF
190.8 154 M
( String[] { };) s
18.6 146 M (37:) s
35.4 146 M
(                numUniqueEmails\(emails\);) s
18.6 138 M (38:) s
35.4 138 M
(        }) s
18.6 130 M (39:) s
18.6 122 M (40:) s
35.4 122 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 122 M
(public) s
/F-gs-font 7 7 SF
69 122 M
( ) s
/Courier-Bold 7 7 SUF
73.2 122 M
(static) s
/F-gs-font 7 7 SF
98.4 122 M
( ) s
/Courier-Bold 7 7 SUF
102.6 122 M
(int) s
/F-gs-font 7 7 SF
115.2 122 M
( numUniqueEmails\(String[] emails\) {) s
18.6 114 M (41:) s
35.4 114 M
(    HashSet<String> set = ) s
/Courier-Bold 7 7 SUF
144.6 114 M
(new) s
/F-gs-font 7 7 SF
157.2 114 M
( HashSet<>\(\);) s
18.6 106 M (42:) s
18.6 98 M (43:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(for) s
/F-gs-font 7 7 SF
64.8 98 M
(\(String email: emails\) {) s
18.6 90 M (44:) s
35.4 90 M
(      String[] parts = email.split\() s
/Courier-Bold 7 7 SUF
182.4 90 M
("@") s
/F-gs-font 7 7 SF
195 90 M
(\);) s
18.6 82 M (45:) s
35.4 82 M
(      parts[0] = parts[0].substring\(0, parts[0].indexOf\() s
/Courier-Bold 7 7 SUF
270.6 82 M
('+') s
/F-gs-font 7 7 SF
283.2 82 M
(\)\).replaceAll\() s
/Courier-Bold 7 7 SUF
342 82 M
("\\\\.") s
/F-gs-font 7 7 SF
363 82 M
(, ) s
/Courier-Bold 7 7 SUF
371.4 82 M
("") s
/F-gs-font 7 7 SF
379.8 82 M
(\);) s
18.6 74 M (46:) s
35.4 74 M
(      set.add\(parts[0] + ) s
/Courier-Bold 7 7 SUF
140.4 74 M
("@") s
/F-gs-font 7 7 SF
153 74 M
( + parts[1]\);) s
18.6 66 M (47:) s
35.4 66 M
(    }) s
18.6 58 M (48:) s
18.6 50 M (49:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(return) s
/F-gs-font 7 7 SF
77.4 50 M
( set.size\(\);) s
18.6 42 M (50:) s
35.4 42 M
(  }) s
18.6 34 M (51:) s
35.4 34 M
(}) s
_R
S
%%Page: (1) 85
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./sets/VowelSpellchecker.java) def
/fdir (./sets) def
/ftail (VowelSpellchecker.java) def
% User defined strings:
/fmodstr (Sun Feb 24 15:56:59 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (VowelSpellchecker.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a wordlist, we want to implement a spellchecker that converts a query word i) s
5 490 M
(nto a correct word.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For a given query word, the spell checker handles two categories of spelling mista) s
5 466 M
(kes:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Capitalization: If the query matches a word in the wordlist \(case-insensitive\), th) s
5 442 M
(en the query word is returned with the same case as the case in the wordlist.) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example: wordlist = ["yellow"], query = "YellOw": correct = "yellow") s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example: wordlist = ["Yellow"], query = "yellow": correct = "Yellow") s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example: wordlist = ["yellow"], query = "yellow": correct = "yellow") s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Vowel Errors: If after replacing the vowels \('a', 'e', 'i', 'o', 'u'\) of the query) s
5 402 M
( word with any vowel individually, it matches a word in the wordlist \(case-insensitive\), the) s
5 394 M
(n the query word is returned with the same case as the match in the wordlist.) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example: wordlist = ["YellOw"], query = "yollow": correct = "YellOw") s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example: wordlist = ["YellOw"], query = "yeellow": correct = "" \(no match\)) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example: wordlist = ["YellOw"], query = "yllw": correct = "" \(no match\)) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  In addition, the spell checker operates under the following precedence rules:) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  When the query exactly matches a word in the wordlist \(case-sensitive\), you should) s
5 338 M
( return the same word back.) s
/F-gs-font 7 7 SF
18.6 330 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  When the query matches a word up to capitlization, you should return the first suc) s
5 322 M
(h match in the wordlist.) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  When the query matches a word up to vowel errors, you should return the first such) s
5 306 M
( match in the wordlist.) s
/F-gs-font 7 7 SF
18.6 298 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  If the query has no matches in the wordlist, you should return the empty string.) s
/F-gs-font 7 7 SF
18.6 290 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Given some queries, return a list of words answer, where answer[i] is the correct ) s
5 282 M
(word for query = queries[i].) s
/F-gs-font 7 7 SF
18.6 274 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( ) s
/F-gs-font 7 7 SF
18.6 258 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 250 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 242 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 234 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Input: wordlist = ["KiTe","kite","hare","Hare"], queries = ["kite","Kite","KiTe",") s
5 226 M
(Hare","HARE","Hear","hear","keti","keet","keto"]) s
/F-gs-font 7 7 SF
18.6 218 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Output: ["kite","KiTe","KiTe","Hare","hare","","","KiTe","","KiTe"]) s
/F-gs-font 7 7 SF
18.6 210 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( ) s
/F-gs-font 7 7 SF
18.6 202 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 194 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 186 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 178 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  1 <= wordlist.length <= 5000) s
/F-gs-font 7 7 SF
18.6 170 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  1 <= queries.length <= 5000) s
/F-gs-font 7 7 SF
18.6 162 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
(  1 <= wordlist[i].length <= 7) s
/F-gs-font 7 7 SF
18.6 154 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
(  1 <= queries[i].length <= 7) s
/F-gs-font 7 7 SF
18.6 146 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
(  All strings in wordlist and queries consist only of english letters.) s
/F-gs-font 7 7 SF
18.6 138 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
( */) s
/F-gs-font 7 7 SF
18.6 130 M (40:) s
18.6 122 M (41:) s
/Courier-Bold 7 7 SUF
35.4 122 M
(class) s
/F-gs-font 7 7 SF
56.4 122 M
( Solution {) s
18.6 114 M (42:) s
35.4 114 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 114 M
(public) s
/F-gs-font 7 7 SF
69 114 M
( String[] spellchecker\(String[] wordlist, String[] queries\) {) s
18.6 106 M (43:) s
35.4 106 M
(    String[] result = ) s
/Courier-Bold 7 7 SUF
127.8 106 M
(new) s
/F-gs-font 7 7 SF
140.4 106 M
( String[queries.length];) s
18.6 98 M (44:) s
18.6 90 M (45:) s
35.4 90 M
(    HashSet<String> set = ) s
/Courier-Bold 7 7 SUF
144.6 90 M
(new) s
/F-gs-font 7 7 SF
157.2 90 M
( HashSet<>\(\);) s
18.6 82 M (46:) s
35.4 82 M
(    HashMap<String, String> map = ) s
/Courier-Bold 7 7 SUF
178.2 82 M
(new) s
/F-gs-font 7 7 SF
190.8 82 M
( HashMap<>\(\);) s
18.6 74 M (47:) s
18.6 66 M (48:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(for) s
/F-gs-font 7 7 SF
64.8 66 M
(\(String word : wordlist\) {) s
18.6 58 M (49:) s
35.4 58 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 58 M
(// insert the word as is) s
/F-gs-font 7 7 SF
18.6 50 M (50:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 50 M
(      set.add\(word\);) s
18.6 42 M (51:) s
18.6 34 M (52:) s
35.4 34 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 34 M
(// insert word lower cased) s
/F-gs-font 7 7 SF
18.6 26 M (53:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 26 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 26 M
(if) s
/F-gs-font 7 7 SF
69 26 M
(\(!map.containsKey\(word.toLowerCase\(\)\)\)) s
18.6 18 M (54:) s
35.4 18 M
(        map.put\(word.toLowerCase\(\), word\);) s
18.6 10 M (55:) s
18.6 2 M (56:) s
35.4 2 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 2 M
(// insert word without vowels) s
/F-gs-font 7 7 SF
415.6 522 M (57:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 522 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 522 M
(char) s
/F-gs-font 7 7 SF
474.4 522 M
([] charArray = word.toLowerCase\(\).toCharArray\(\);) s
415.6 514 M (58:) s
432.4 514 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 514 M
(for) s
/F-gs-font 7 7 SF
470.2 514 M
(\() s
/Courier-Bold 7 7 SUF
474.4 514 M
(int) s
/F-gs-font 7 7 SF
487 514 M
( i = 0; i < charArray.length; i++\) {) s
415.6 506 M (59:) s
432.4 506 M
(        ) s
/Courier-Bold 7 7 SUF
466 506 M
(if) s
/F-gs-font 7 7 SF
474.4 506 M
(\(charArray[i] == ) s
/Courier-Bold 7 7 SUF
545.8 506 M
('a') s
/F-gs-font 7 7 SF
558.4 506 M
( ||) s
415.6 498 M (60:) s
432.4 498 M
(           charArray[i] == ) s
/Courier-Bold 7 7 SUF
545.8 498 M
('e') s
/F-gs-font 7 7 SF
558.4 498 M
( ||) s
415.6 490 M (61:) s
432.4 490 M
(           charArray[i] == ) s
/Courier-Bold 7 7 SUF
545.8 490 M
('i') s
/F-gs-font 7 7 SF
558.4 490 M
( ||) s
415.6 482 M (62:) s
432.4 482 M
(           charArray[i] == ) s
/Courier-Bold 7 7 SUF
545.8 482 M
('o') s
/F-gs-font 7 7 SF
558.4 482 M
( ||) s
415.6 474 M (63:) s
432.4 474 M
(           charArray[i] == ) s
/Courier-Bold 7 7 SUF
545.8 474 M
('u') s
/F-gs-font 7 7 SF
558.4 474 M
(\)) s
415.6 466 M (64:) s
432.4 466 M
(          charArray[i] = ) s
/Courier-Bold 7 7 SUF
537.4 466 M
('*') s
/F-gs-font 7 7 SF
550 466 M
(;) s
415.6 458 M (65:) s
432.4 458 M
(      }) s
415.6 450 M (66:) s
432.4 450 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 450 M
(if) s
/F-gs-font 7 7 SF
466 450 M
(\(!map.containsKey\(String.valueOf\(charArray\)\)\)) s
415.6 442 M (67:) s
432.4 442 M
(        map.put\(String.valueOf\(charArray\), word\);) s
415.6 434 M (68:) s
432.4 434 M
(    }) s
415.6 426 M (69:) s
415.6 418 M (70:) s
432.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 418 M
(for) s
/F-gs-font 7 7 SF
461.8 418 M
(\() s
/Courier-Bold 7 7 SUF
466 418 M
(int) s
/F-gs-font 7 7 SF
478.6 418 M
( i = 0; i < queries.length; i++\) {) s
415.6 410 M (71:) s
432.4 410 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 410 M
(if) s
/F-gs-font 7 7 SF
466 410 M
(\(set.contains\(queries[i]\)\) {) s
415.6 402 M (72:) s
432.4 402 M
(        result[i] = queries[i];) s
415.6 394 M (73:) s
432.4 394 M
(        ) s
/Courier-Bold 7 7 SUF
466 394 M
(continue) s
/F-gs-font 7 7 SF
499.6 394 M
(;) s
415.6 386 M (74:) s
432.4 386 M
(      } ) s
/Courier-Bold 7 7 SUF
466 386 M
(else) s
/F-gs-font 7 7 SF
482.8 386 M
( ) s
/Courier-Bold 7 7 SUF
487 386 M
(if) s
/F-gs-font 7 7 SF
495.4 386 M
(\(map.containsKey\(queries[i].toLowerCase\(\)\)\) {) s
415.6 378 M (75:) s
432.4 378 M
(        result[i] = map.get\(queries[i].toLowerCase\(\)\);) s
415.6 370 M (76:) s
432.4 370 M
(        ) s
/Courier-Bold 7 7 SUF
466 370 M
(continue) s
/F-gs-font 7 7 SF
499.6 370 M
(;) s
415.6 362 M (77:) s
432.4 362 M
(      } ) s
/Courier-Bold 7 7 SUF
466 362 M
(else) s
/F-gs-font 7 7 SF
482.8 362 M
( {) s
415.6 354 M (78:) s
432.4 354 M
(        ) s
/Courier-Bold 7 7 SUF
466 354 M
(char) s
/F-gs-font 7 7 SF
482.8 354 M
([] charArray = queries[i].toLowerCase\(\).toCharArray\(\);) s
415.6 346 M (79:) s
432.4 346 M
(        ) s
/Courier-Bold 7 7 SUF
466 346 M
(for) s
/F-gs-font 7 7 SF
478.6 346 M
(\() s
/Courier-Bold 7 7 SUF
482.8 346 M
(int) s
/F-gs-font 7 7 SF
495.4 346 M
( j = 0; j < charArray.length; j++\) {) s
415.6 338 M (80:) s
432.4 338 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 338 M
(if) s
/F-gs-font 7 7 SF
482.8 338 M
(\(charArray[j] == ) s
/Courier-Bold 7 7 SUF
554.2 338 M
('a') s
/F-gs-font 7 7 SF
566.8 338 M
( ||) s
415.6 330 M (81:) s
432.4 330 M
(           charArray[j] == ) s
/Courier-Bold 7 7 SUF
545.8 330 M
('e') s
/F-gs-font 7 7 SF
558.4 330 M
( ||) s
415.6 322 M (82:) s
432.4 322 M
(           charArray[j] == ) s
/Courier-Bold 7 7 SUF
545.8 322 M
('i') s
/F-gs-font 7 7 SF
558.4 322 M
( ||) s
415.6 314 M (83:) s
432.4 314 M
(           charArray[j] == ) s
/Courier-Bold 7 7 SUF
545.8 314 M
('o') s
/F-gs-font 7 7 SF
558.4 314 M
( ||) s
415.6 306 M (84:) s
432.4 306 M
(           charArray[j] == ) s
/Courier-Bold 7 7 SUF
545.8 306 M
('u') s
/F-gs-font 7 7 SF
558.4 306 M
(\)) s
415.6 298 M (85:) s
432.4 298 M
(          charArray[j] = ) s
/Courier-Bold 7 7 SUF
537.4 298 M
('*') s
/F-gs-font 7 7 SF
550 298 M
(;) s
415.6 290 M (86:) s
432.4 290 M
(        }) s
415.6 282 M (87:) s
432.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
466 282 M
(if) s
/F-gs-font 7 7 SF
474.4 282 M
(\(map.containsKey\(String.valueOf\(charArray\)\)\)) s
415.6 274 M (88:) s
432.4 274 M
(          result[i] = map.get\(String.valueOf\(charArray\)\);) s
415.6 266 M (89:) s
432.4 266 M
(        ) s
/Courier-Bold 7 7 SUF
466 266 M
(else) s
/F-gs-font 7 7 SF
415.6 258 M (90:) s
432.4 258 M
(          result[i] = ) s
/Courier-Bold 7 7 SUF
524.8 258 M
("") s
/F-gs-font 7 7 SF
533.2 258 M
(;) s
415.6 250 M (91:) s
432.4 250 M
(      }) s
415.6 242 M (92:) s
432.4 242 M
(    }) s
415.6 234 M (93:) s
415.6 226 M (94:) s
432.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 226 M
(return) s
/F-gs-font 7 7 SF
474.4 226 M
( result;) s
415.6 218 M (95:) s
432.4 218 M
(  }) s
415.6 210 M (96:) s
432.4 210 M
(}) s
_R
S
%%Page: (1) 86
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./recursions/PredictTheWinner.java) def
/fdir (./recursions) def
/ftail (PredictTheWinner.java) def
% User defined strings:
/fmodstr (Wed Feb 13 16:09:03 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PredictTheWinner.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of scores that are non-negative integers. Player 1 picks one of the) s
5 490 M
( numbers from either end of the array followed by the player 2 and then player 1 and so on. ) s
5 482 M
(Each time a player picks a number, that number will not be available for the next player. Th) s
5 474 M
(is continues until all the scores have been chosen. The player with the maximum score wins.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Given an array of scores, predict whether player 1 is the winner. You can assume e) s
5 450 M
(ach player plays to maximize his score.) s
/F-gs-font 7 7 SF
22.8 442 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: [1, 5, 2]) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: False) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation: Initially, player 1 can choose between 1 and 2. ) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  If he chooses 2 \(or 1\), then player 2 can choose from 1 \(or 2\) and 5. If player 2 ) s
5 394 M
(chooses 5, then player 1 will be left with 1 \(or 2\). ) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. ) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Hence, player 1 will never be the winner and you need to return False.) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: [1, 5, 233, 7]) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Output: True) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Explanation: Player 1 first chooses 1. Then player 2 have to choose between 5 and ) s
5 338 M
(7. No matter which number player 2 choose, player 1 can choose 233.) s
/F-gs-font 7 7 SF
18.6 330 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Finally, player 1 has more score \(234\) than player 2 \(12\), so you need to return T) s
5 322 M
(rue representing player1 can win.) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 306 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  1 <= length of the array <= 20.) s
/F-gs-font 7 7 SF
18.6 298 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Any scores in the given array are non-negative integers and will not exceed 10,000) s
5 290 M
(,000.) s
/F-gs-font 7 7 SF
18.6 282 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  If the scores of both players are equal, then player 1 is still the winner.) s
/F-gs-font 7 7 SF
18.6 274 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( */) s
/F-gs-font 7 7 SF
18.6 266 M (25:) s
18.6 258 M (26:) s
/Courier-Bold 7 7 SUF
35.4 258 M
(class) s
/F-gs-font 7 7 SF
56.4 258 M
( Solution {) s
18.6 250 M (27:) s
35.4 250 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 250 M
(// approach: make player 1 have positive number) s
/F-gs-font 7 7 SF
18.6 242 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 242 M
(//           make plater 2 have negative number) s
/F-gs-font 7 7 SF
18.6 234 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 234 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 234 M
(public) s
/F-gs-font 7 7 SF
69 234 M
( ) s
/Courier-Bold 7 7 SUF
73.2 234 M
(boolean) s
/F-gs-font 7 7 SF
102.6 234 M
( PredictTheWinner\() s
/Courier-Bold 7 7 SUF
178.2 234 M
(int) s
/F-gs-font 7 7 SF
190.8 234 M
([] nums\) {) s
18.6 226 M (30:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( winner\(nums, 0, nums.length - 1, 1\) >= 0;) s
18.6 218 M (31:) s
35.4 218 M
(  }) s
18.6 210 M (32:) s
18.6 202 M (33:) s
35.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 202 M
(public) s
/F-gs-font 7 7 SF
69 202 M
( ) s
/Courier-Bold 7 7 SUF
73.2 202 M
(int) s
/F-gs-font 7 7 SF
85.8 202 M
( winner\() s
/Courier-Bold 7 7 SUF
119.4 202 M
(int) s
/F-gs-font 7 7 SF
132 202 M
([] nums, ) s
/Courier-Bold 7 7 SUF
169.8 202 M
(int) s
/F-gs-font 7 7 SF
182.4 202 M
( start, ) s
/Courier-Bold 7 7 SUF
216 202 M
(int) s
/F-gs-font 7 7 SF
228.6 202 M
( end, ) s
/Courier-Bold 7 7 SUF
253.8 202 M
(int) s
/F-gs-font 7 7 SF
266.4 202 M
( turn\) {) s
18.6 194 M (34:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(if) s
/F-gs-font 7 7 SF
60.6 194 M
(\(start == end\) ) s
/Courier-Bold 7 7 SUF
123.6 194 M
(return) s
/F-gs-font 7 7 SF
148.8 194 M
( turn * nums[start];) s
18.6 186 M (35:) s
18.6 178 M (36:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(int) s
/F-gs-font 7 7 SF
64.8 178 M
( takeFirst = turn * nums[start] + winner\(nums, start + 1, end, -turn\);) s
18.6 170 M (37:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(int) s
/F-gs-font 7 7 SF
64.8 170 M
( takeLast = turn * nums[end] + winner\(nums, start, end - 1, -turn\);) s
18.6 162 M (38:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(return) s
/F-gs-font 7 7 SF
77.4 162 M
( turn * Math.max\(turn * takeFirst, turn * takeLast\);) s
18.6 154 M (39:) s
35.4 154 M
(  }) s
18.6 146 M (40:) s
18.6 138 M (41:) s
35.4 138 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 138 M
(// approach: we only care about the difference between player 1 and player 2) s
/F-gs-font 7 7 SF
18.6 130 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 130 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 130 M
(//           if difference is more than 0 then player 1 wins) s
/F-gs-font 7 7 SF
18.6 122 M (43:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 122 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 122 M
(public) s
/F-gs-font 7 7 SF
69 122 M
( ) s
/Courier-Bold 7 7 SUF
73.2 122 M
(boolean) s
/F-gs-font 7 7 SF
102.6 122 M
( PredictTheWinner2\() s
/Courier-Bold 7 7 SUF
182.4 122 M
(int) s
/F-gs-font 7 7 SF
195 122 M
([] nums\) {) s
18.6 114 M (44:) s
35.4 114 M
(    Integer[][] memo = ) s
/Courier-Bold 7 7 SUF
132 114 M
(new) s
/F-gs-font 7 7 SF
144.6 114 M
( Integer[nums.length][nums.length];) s
18.6 106 M (45:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(return) s
/F-gs-font 7 7 SF
77.4 106 M
( winner2\(nums, 0, nums.length - 1, memo\) >= 0;) s
18.6 98 M (46:) s
35.4 98 M
(  }) s
18.6 90 M (47:) s
18.6 82 M (48:) s
35.4 82 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 82 M
(public) s
/F-gs-font 7 7 SF
69 82 M
( ) s
/Courier-Bold 7 7 SUF
73.2 82 M
(int) s
/F-gs-font 7 7 SF
85.8 82 M
( winner2\() s
/Courier-Bold 7 7 SUF
123.6 82 M
(int) s
/F-gs-font 7 7 SF
136.2 82 M
([] nums, ) s
/Courier-Bold 7 7 SUF
174 82 M
(int) s
/F-gs-font 7 7 SF
186.6 82 M
( start, ) s
/Courier-Bold 7 7 SUF
220.2 82 M
(int) s
/F-gs-font 7 7 SF
232.8 82 M
( end, Integer[][] memo\) {) s
18.6 74 M (49:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(if) s
/F-gs-font 7 7 SF
60.6 74 M
( \(start == end\) ) s
/Courier-Bold 7 7 SUF
127.8 74 M
(return) s
/F-gs-font 7 7 SF
153 74 M
( nums[start];) s
18.6 66 M (50:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(if) s
/F-gs-font 7 7 SF
60.6 66 M
( \(memo[start][end] != ) s
/Courier-Bold 7 7 SUF
153 66 M
(null) s
/F-gs-font 7 7 SF
169.8 66 M
(\) ) s
/Courier-Bold 7 7 SUF
178.2 66 M
(return) s
/F-gs-font 7 7 SF
203.4 66 M
( memo[start][end];) s
18.6 58 M (51:) s
18.6 50 M (52:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(int) s
/F-gs-font 7 7 SF
64.8 50 M
( takeFirst = nums[start] - winner\(nums, start + 1, end, memo\);) s
18.6 42 M (53:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(int) s
/F-gs-font 7 7 SF
64.8 42 M
( takeLast = nums[end] - winner\(nums, start, end - 1, memo\);) s
18.6 34 M (54:) s
18.6 26 M (55:) s
35.4 26 M
(    memo[start][end] = Math.max\(takeFirst, takeLast\);) s
18.6 18 M (56:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(return) s
/F-gs-font 7 7 SF
77.4 18 M
( memo[start][end];) s
18.6 10 M (57:) s
35.4 10 M
(  }) s
18.6 2 M (58:) s
35.4 2 M
(}) s
_R
S
%%Page: (1) 87
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./recursions/RegularExpressionMatching.java) def
/fdir (./recursions) def
/ftail (RegularExpressionMatching.java) def
% User defined strings:
/fmodstr (Fri Feb 22 00:10:25 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RegularExpressionMatching.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Hard) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(  ) s
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an input string \(s\) and a pattern \(p\), implement regular expression matching) s
5 490 M
( with support for '.' and '*'.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  '.' Matches any single character.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  '*' Matches zero or more of the preceding element.) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  The matching should cover the entire input string \(not partial\).) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  s could be empty and contains only lowercase letters a-z.) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  p could be empty and contains only lowercase letters a-z, and characters like . or) s
5 410 M
( *.) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  s = "aa") s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  p = "a") s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Explanation: "a" does not match the entire string "aa".) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  s = "aa") s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  p = "a*") s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Explanation: '*' means zero or more of the precedeng element, 'a'. Therefore, by r) s
5 290 M
(epeating 'a' once, it becomes "aa".) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  s = "ab") s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  p = ".*") s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Explanation: ".*" means "zero or more \(*\) of any character \(.\)".) s
/F-gs-font 7 7 SF
18.6 226 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 218 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 210 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 202 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  s = "aab") s
/F-gs-font 7 7 SF
18.6 194 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  p = "c*a*b") s
/F-gs-font 7 7 SF
18.6 186 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 178 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore it mat) s
5 170 M
(ches "aab".) s
/F-gs-font 7 7 SF
18.6 162 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
(  Example 5:) s
/F-gs-font 7 7 SF
18.6 154 M (43:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 146 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 146 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 138 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
(  s = "mississippi") s
/F-gs-font 7 7 SF
18.6 130 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 130 M
(  p = "mis*is*p*.") s
/F-gs-font 7 7 SF
18.6 122 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 114 M (48:) s
/Courier-Oblique 7 7 SUF
35.4 114 M
( */) s
/F-gs-font 7 7 SF
18.6 106 M (49:) s
18.6 98 M (50:) s
/Courier-Bold 7 7 SUF
35.4 98 M
(class) s
/F-gs-font 7 7 SF
56.4 98 M
( Solution {) s
18.6 90 M (51:) s
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(public) s
/F-gs-font 7 7 SF
69 90 M
( ) s
/Courier-Bold 7 7 SUF
73.2 90 M
(boolean) s
/F-gs-font 7 7 SF
102.6 90 M
( isMatch\(String s, String p\) {) s
18.6 82 M (52:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(return) s
/F-gs-font 7 7 SF
77.4 82 M
( matching\(s, p, 0, 0\);) s
18.6 74 M (53:) s
35.4 74 M
(  }) s
18.6 66 M (54:) s
18.6 58 M (55:) s
35.4 58 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 58 M
(public) s
/F-gs-font 7 7 SF
69 58 M
( ) s
/Courier-Bold 7 7 SUF
73.2 58 M
(boolean) s
/F-gs-font 7 7 SF
102.6 58 M
( matching\(String s, String p, ) s
/Courier-Bold 7 7 SUF
228.6 58 M
(int) s
/F-gs-font 7 7 SF
241.2 58 M
( s_i, ) s
/Courier-Bold 7 7 SUF
266.4 58 M
(int) s
/F-gs-font 7 7 SF
279 58 M
( p_i\) {) s
18.6 50 M (56:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(if) s
/F-gs-font 7 7 SF
60.6 50 M
(\(p.length\(\) == p_i\) ) s
/Courier-Bold 7 7 SUF
144.6 50 M
(return) s
/F-gs-font 7 7 SF
169.8 50 M
( s.length\(\) == s_i;) s
18.6 42 M (57:) s
18.6 34 M (58:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(if) s
/F-gs-font 7 7 SF
60.6 34 M
(\(s.length\(\) == s_i || !isEqual\(p.charAt\(p_i\), s.charAt\(s_i\)\)\) {) s
18.6 26 M (59:) s
35.4 26 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 26 M
(if) s
/F-gs-font 7 7 SF
69 26 M
(\(p_i + 1 < p.length\(\) && p.charAt\(p_i + 1\) == ) s
/Courier-Bold 7 7 SUF
262.2 26 M
('*') s
/F-gs-font 7 7 SF
274.8 26 M
(\)) s
18.6 18 M (60:) s
35.4 18 M
(        ) s
/Courier-Bold 7 7 SUF
69 18 M
(return) s
/F-gs-font 7 7 SF
94.2 18 M
( matching\(s, p, s_i, p_i + 2\);) s
18.6 10 M (61:) s
18.6 2 M (62:) s
35.4 2 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 2 M
(return) s
/F-gs-font 7 7 SF
85.8 2 M
( ) s
/Courier-Bold 7 7 SUF
90 2 M
(false) s
/F-gs-font 7 7 SF
111 2 M
(;) s
415.6 522 M (63:) s
432.4 522 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 522 M
(else) s
/F-gs-font 7 7 SF
474.4 522 M
( {) s
415.6 514 M (64:) s
432.4 514 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 514 M
(if) s
/F-gs-font 7 7 SF
466 514 M
(\(p_i + 1 < p.length\(\) && p.charAt\(p_i + 1\) == ) s
/Courier-Bold 7 7 SUF
659.2 514 M
('*') s
/F-gs-font 7 7 SF
671.8 514 M
(\) {) s
415.6 506 M (65:) s
432.4 506 M
(        ) s
/Courier-Bold 7 7 SUF
466 506 M
(if) s
/F-gs-font 7 7 SF
474.4 506 M
(\(matching\(s, p, s_i + 1, p_i\)\) ) s
/Courier-Bold 7 7 SUF
604.6 506 M
(return) s
/F-gs-font 7 7 SF
629.8 506 M
( ) s
/Courier-Bold 7 7 SUF
634 506 M
(true) s
/F-gs-font 7 7 SF
650.8 506 M
(;) s
415.6 498 M (66:) s
432.4 498 M
(        ) s
/Courier-Bold 7 7 SUF
466 498 M
(if) s
/F-gs-font 7 7 SF
474.4 498 M
(\(matching\(s, p, s_i, p_i + 2\)\) ) s
/Courier-Bold 7 7 SUF
604.6 498 M
(return) s
/F-gs-font 7 7 SF
629.8 498 M
( ) s
/Courier-Bold 7 7 SUF
634 498 M
(true) s
/F-gs-font 7 7 SF
650.8 498 M
(;) s
415.6 490 M (67:) s
432.4 490 M
(      }) s
415.6 482 M (68:) s
415.6 474 M (69:) s
432.4 474 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 474 M
(return) s
/F-gs-font 7 7 SF
482.8 474 M
( matching\(s, p, s_i + 1, p_i + 1\);) s
415.6 466 M (70:) s
432.4 466 M
(    }) s
415.6 458 M (71:) s
432.4 458 M
(  }) s
415.6 450 M (72:) s
415.6 442 M (73:) s
432.4 442 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 442 M
(public) s
/F-gs-font 7 7 SF
466 442 M
( ) s
/Courier-Bold 7 7 SUF
470.2 442 M
(boolean) s
/F-gs-font 7 7 SF
499.6 442 M
( isEqual\() s
/Courier-Bold 7 7 SUF
537.4 442 M
(char) s
/F-gs-font 7 7 SF
554.2 442 M
( c1, ) s
/Courier-Bold 7 7 SUF
575.2 442 M
(char) s
/F-gs-font 7 7 SF
592 442 M
( c2\) {) s
415.6 434 M (74:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(if) s
/F-gs-font 7 7 SF
457.6 434 M
(\(c1 == ) s
/Courier-Bold 7 7 SUF
487 434 M
('.') s
/F-gs-font 7 7 SF
499.6 434 M
( || c2 == ) s
/Courier-Bold 7 7 SUF
541.6 434 M
('.') s
/F-gs-font 7 7 SF
554.2 434 M
(\) ) s
/Courier-Bold 7 7 SUF
562.6 434 M
(return) s
/F-gs-font 7 7 SF
587.8 434 M
( ) s
/Courier-Bold 7 7 SUF
592 434 M
(true) s
/F-gs-font 7 7 SF
608.8 434 M
(;) s
415.6 426 M (75:) s
415.6 418 M (76:) s
432.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 418 M
(return) s
/F-gs-font 7 7 SF
474.4 418 M
( c1 == c2;) s
415.6 410 M (77:) s
432.4 410 M
(  }) s
415.6 402 M (78:) s
432.4 402 M
(}) s
_R
S
%%Page: (1) 88
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./recursions/DecodeString.java) def
/fdir (./recursions) def
/ftail (DecodeString.java) def
% User defined strings:
/fmodstr (Fri Mar 08 18:45:58 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (DecodeString.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an encoded string, return it's decoded string.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  The encoding rule is: k[encoded_string], where the encoded_string inside the squar) s
5 474 M
(e brackets is being repeated exactly k times. Note that k is guaranteed to be a positive int) s
5 466 M
(eger.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  You may assume that the input string is always valid; No extra white spaces, squar) s
5 442 M
(e brackets are well-formed, etc.) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Furthermore, you may assume that the original data does not contain any digits and) s
5 418 M
( that digits are only for those repeat numbers, k. For example, there won't be input like 3a) s
5 410 M
( or 2[4].) s
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Examples:) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  s = "3[a]2[bc]", return "aaabcbc".) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  s = "3[a2[c]]", return "accaccacc".) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  s = "2[abc]3[cd]ef", return "abcabccdcdcdef".) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( */) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
18.6 338 M (19:) s
/Courier-Bold 7 7 SUF
35.4 338 M
(class) s
/F-gs-font 7 7 SF
56.4 338 M
( Solution {) s
18.6 330 M (20:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( String decodeString\(String s\) {) s
18.6 322 M (21:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(return) s
/F-gs-font 7 7 SF
77.4 322 M
( decode\(s, 0\).str;) s
18.6 314 M (22:) s
35.4 314 M
(  }) s
18.6 306 M (23:) s
18.6 298 M (24:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( Result decode\(String s, ) s
/Courier-Bold 7 7 SUF
174 298 M
(int) s
/F-gs-font 7 7 SF
186.6 298 M
( index\) {) s
18.6 290 M (25:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(index >= s.length\(\)\) ) s
/Courier-Bold 7 7 SUF
153 290 M
(return) s
/F-gs-font 7 7 SF
178.2 290 M
( ) s
/Courier-Bold 7 7 SUF
182.4 290 M
(new) s
/F-gs-font 7 7 SF
195 290 M
( Result\() s
/Courier-Bold 7 7 SUF
228.6 290 M
("") s
/F-gs-font 7 7 SF
237 290 M
(, index\);) s
18.6 282 M (26:) s
18.6 274 M (27:) s
35.4 274 M
(    StringBuilder result = ) s
/Courier-Bold 7 7 SUF
148.8 274 M
(new) s
/F-gs-font 7 7 SF
161.4 274 M
( StringBuilder\(\);) s
18.6 266 M (28:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(while) s
/F-gs-font 7 7 SF
73.2 266 M
(\(index < s.length\(\)\) {) s
18.6 258 M (29:) s
35.4 258 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 258 M
(if) s
/F-gs-font 7 7 SF
69 258 M
(\(Character.isLetter\(s.charAt\(index\)\)\) {) s
18.6 250 M (30:) s
35.4 250 M
(        String str = getString\(s, index\);) s
18.6 242 M (31:) s
35.4 242 M
(        index += str.length\(\);) s
18.6 234 M (32:) s
35.4 234 M
(        result.append\(str\);) s
18.6 226 M (33:) s
35.4 226 M
(      } ) s
/Courier-Bold 7 7 SUF
69 226 M
(else) s
/F-gs-font 7 7 SF
85.8 226 M
( ) s
/Courier-Bold 7 7 SUF
90 226 M
(if) s
/F-gs-font 7 7 SF
98.4 226 M
(\(Character.isDigit\(s.charAt\(index\)\)\){) s
18.6 218 M (34:) s
35.4 218 M
(        ) s
/Courier-Bold 7 7 SUF
69 218 M
(int) s
/F-gs-font 7 7 SF
81.6 218 M
( repetition = getNumber\(s, index\);) s
18.6 210 M (35:) s
18.6 202 M (36:) s
35.4 202 M
(        index += String.valueOf\(repetition\).length\(\);) s
18.6 194 M (37:) s
35.4 194 M
(        index++; ) s
/Courier-Oblique 7 7 SUF
106.8 194 M
(// skip [) s
/F-gs-font 7 7 SF
18.6 186 M (38:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 178 M (39:) s
35.4 178 M
(        Result childResult = decode\(s, index\);) s
18.6 170 M (40:) s
35.4 170 M
(        index = childResult.index;) s
18.6 162 M (41:) s
18.6 154 M (42:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(while) s
/F-gs-font 7 7 SF
90 154 M
(\(repetition >= 1\) {) s
18.6 146 M (43:) s
35.4 146 M
(          result.append\(childResult.str\);) s
18.6 138 M (44:) s
35.4 138 M
(          repetition--;) s
18.6 130 M (45:) s
35.4 130 M
(        }) s
18.6 122 M (46:) s
18.6 114 M (47:) s
35.4 114 M
(        index++; ) s
/Courier-Oblique 7 7 SUF
106.8 114 M
(// skip ]) s
/F-gs-font 7 7 SF
18.6 106 M (48:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 106 M
(      } ) s
/Courier-Bold 7 7 SUF
69 106 M
(else) s
/F-gs-font 7 7 SF
85.8 106 M
( {) s
18.6 98 M (49:) s
35.4 98 M
(        ) s
/Courier-Bold 7 7 SUF
69 98 M
(break) s
/F-gs-font 7 7 SF
90 98 M
(;) s
18.6 90 M (50:) s
35.4 90 M
(      }) s
18.6 82 M (51:) s
35.4 82 M
(    }) s
18.6 74 M (52:) s
18.6 66 M (53:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(return) s
/F-gs-font 7 7 SF
77.4 66 M
( ) s
/Courier-Bold 7 7 SUF
81.6 66 M
(new) s
/F-gs-font 7 7 SF
94.2 66 M
( Result\(result.toString\(\), index\);) s
18.6 58 M (54:) s
35.4 58 M
(  }) s
18.6 50 M (55:) s
18.6 42 M (56:) s
35.4 42 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 42 M
(public) s
/F-gs-font 7 7 SF
69 42 M
( String getString\(String s, ) s
/Courier-Bold 7 7 SUF
186.6 42 M
(int) s
/F-gs-font 7 7 SF
199.2 42 M
( index\) {) s
18.6 34 M (57:) s
35.4 34 M
(    StringBuilder sb = ) s
/Courier-Bold 7 7 SUF
132 34 M
(new) s
/F-gs-font 7 7 SF
144.6 34 M
( StringBuilder\(\);) s
18.6 26 M (58:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(while) s
/F-gs-font 7 7 SF
73.2 26 M
(\(index < s.length\(\) && Character.isLetter\(s.charAt\(index\)\)\) {) s
18.6 18 M (59:) s
35.4 18 M
(      sb.append\(s.charAt\(index\)\);) s
18.6 10 M (60:) s
35.4 10 M
(      index++;) s
18.6 2 M (61:) s
35.4 2 M
(    }) s
415.6 522 M (62:) s
415.6 514 M (63:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(return) s
/F-gs-font 7 7 SF
474.4 514 M
( sb.toString\(\);) s
415.6 506 M (64:) s
432.4 506 M
(  }) s
415.6 498 M (65:) s
415.6 490 M (66:) s
432.4 490 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 490 M
(public) s
/F-gs-font 7 7 SF
466 490 M
( ) s
/Courier-Bold 7 7 SUF
470.2 490 M
(int) s
/F-gs-font 7 7 SF
482.8 490 M
( getNumber\(String s, ) s
/Courier-Bold 7 7 SUF
571 490 M
(int) s
/F-gs-font 7 7 SF
583.6 490 M
( index\) {) s
415.6 482 M (67:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(int) s
/F-gs-font 7 7 SF
461.8 482 M
( num = 0;) s
415.6 474 M (68:) s
432.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(while) s
/F-gs-font 7 7 SF
470.2 474 M
(\(index < s.length\(\) && Character.isDigit\(s.charAt\(index\)\)\) {) s
415.6 466 M (69:) s
432.4 466 M
(      num *= 10;) s
415.6 458 M (70:) s
432.4 458 M
(      num += \(s.charAt\(index\) - ) s
/Courier-Bold 7 7 SUF
566.8 458 M
('0') s
/F-gs-font 7 7 SF
579.4 458 M
(\);) s
415.6 450 M (71:) s
432.4 450 M
(      index++;) s
415.6 442 M (72:) s
432.4 442 M
(    }) s
415.6 434 M (73:) s
415.6 426 M (74:) s
432.4 426 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 426 M
(return) s
/F-gs-font 7 7 SF
474.4 426 M
( num;) s
415.6 418 M (75:) s
432.4 418 M
(  }) s
415.6 410 M (76:) s
415.6 402 M (77:) s
432.4 402 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 402 M
(public) s
/F-gs-font 7 7 SF
466 402 M
( ) s
/Courier-Bold 7 7 SUF
470.2 402 M
(class) s
/F-gs-font 7 7 SF
491.2 402 M
( Result {) s
415.6 394 M (78:) s
432.4 394 M
(    String str;) s
415.6 386 M (79:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(int) s
/F-gs-font 7 7 SF
461.8 386 M
( index;) s
415.6 378 M (80:) s
415.6 370 M (81:) s
432.4 370 M
(    Result\(String str, ) s
/Courier-Bold 7 7 SUF
529 370 M
(int) s
/F-gs-font 7 7 SF
541.6 370 M
( index\) {) s
415.6 362 M (82:) s
432.4 362 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 362 M
(this) s
/F-gs-font 7 7 SF
474.4 362 M
(.str = str;) s
415.6 354 M (83:) s
432.4 354 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 354 M
(this) s
/F-gs-font 7 7 SF
474.4 354 M
(.index = index;) s
415.6 346 M (84:) s
432.4 346 M
(    }) s
415.6 338 M (85:) s
432.4 338 M
(  }) s
415.6 330 M (86:) s
432.4 330 M
(}) s
_R
S
%%Page: (1) 89
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/RangeSumQuery2DImmutable.java) def
/fdir (./arrays) def
/ftail (RangeSumQuery2DImmutable.java) def
% User defined strings:
/fmodstr (Sat Mar 09 00:55:00 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RangeSumQuery2DImmutable.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a 2D matrix matrix, find the sum of the elements inside the rectangle define) s
5 490 M
(d by its upper left corner \(row1, col1\) and lower right corner \(row2, col2\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Range Sum Query 2D) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  The above rectangle \(with the red border\) is defined by \(row1, col1\) = \(2, 1\) and ) s
5 458 M
(\(row2, col2\) = \(4, 3\), which contains sum = 8.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Given matrix = [) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [3, 0, 1, 4, 2],) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [5, 6, 3, 2, 1],) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [1, 2, 0, 1, 5],) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [4, 1, 0, 1, 7],) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [1, 0, 3, 0, 5]) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  ]) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  sumRegion\(2, 1, 4, 3\) -> 8) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  sumRegion\(1, 1, 2, 2\) -> 11) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  sumRegion\(1, 2, 2, 4\) -> 12) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  You may assume that the matrix does not change.) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  There are many calls to sumRegion function.) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  You may assume that row1 \342\\211\244 row2 and col1 \342\\211\244 col2.) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
18.6 298 M (27:) s
/Courier-Bold 7 7 SUF
35.4 298 M
(class) s
/F-gs-font 7 7 SF
56.4 298 M
( NumMatrix {) s
18.6 290 M (28:) s
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(int) s
/F-gs-font 7 7 SF
56.4 290 M
([][] matrix;) s
18.6 282 M (29:) s
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(int) s
/F-gs-font 7 7 SF
56.4 282 M
([][] cache;) s
18.6 274 M (30:) s
18.6 266 M (31:) s
35.4 266 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 266 M
(public) s
/F-gs-font 7 7 SF
69 266 M
( NumMatrix\() s
/Courier-Bold 7 7 SUF
115.2 266 M
(int) s
/F-gs-font 7 7 SF
127.8 266 M
([][] matrix\) {) s
18.6 258 M (32:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(this) s
/F-gs-font 7 7 SF
69 258 M
(.matrix = matrix;) s
18.6 250 M (33:) s
18.6 242 M (34:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(matrix.length > 0\) {) s
18.6 234 M (35:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(this) s
/F-gs-font 7 7 SF
77.4 234 M
(.cache = ) s
/Courier-Bold 7 7 SUF
115.2 234 M
(new) s
/F-gs-font 7 7 SF
127.8 234 M
( ) s
/Courier-Bold 7 7 SUF
132 234 M
(int) s
/F-gs-font 7 7 SF
144.6 234 M
([matrix.length + 1][matrix[0].length + 1];) s
18.6 226 M (36:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(for) s
/F-gs-font 7 7 SF
73.2 226 M
(\() s
/Courier-Bold 7 7 SUF
77.4 226 M
(int) s
/F-gs-font 7 7 SF
90 226 M
( i = 0; i < matrix.length; i++\) {) s
18.6 218 M (37:) s
35.4 218 M
(        ) s
/Courier-Bold 7 7 SUF
69 218 M
(for) s
/F-gs-font 7 7 SF
81.6 218 M
(\() s
/Courier-Bold 7 7 SUF
85.8 218 M
(int) s
/F-gs-font 7 7 SF
98.4 218 M
( j = 0; j < matrix[i].length; j++\) {) s
18.6 210 M (38:) s
35.4 210 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 210 M
(this) s
/F-gs-font 7 7 SF
94.2 210 M
(.cache[i + 1][j + 1] =) s
18.6 202 M (39:) s
35.4 202 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 202 M
(this) s
/F-gs-font 7 7 SF
102.6 202 M
(.cache[i][j + 1] +) s
18.6 194 M (40:) s
35.4 194 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 194 M
(this) s
/F-gs-font 7 7 SF
102.6 194 M
(.cache[i + 1][j] -) s
18.6 186 M (41:) s
35.4 186 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 186 M
(this) s
/F-gs-font 7 7 SF
102.6 186 M
(.cache[i][j] +) s
18.6 178 M (42:) s
35.4 178 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 178 M
(this) s
/F-gs-font 7 7 SF
102.6 178 M
(.matrix[i][j];) s
18.6 170 M (43:) s
35.4 170 M
(        }) s
18.6 162 M (44:) s
35.4 162 M
(      }) s
18.6 154 M (45:) s
35.4 154 M
(    }) s
18.6 146 M (46:) s
35.4 146 M
(  }) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 130 M
(public) s
/F-gs-font 7 7 SF
69 130 M
( ) s
/Courier-Bold 7 7 SUF
73.2 130 M
(int) s
/F-gs-font 7 7 SF
85.8 130 M
( sumRegion\() s
/Courier-Bold 7 7 SUF
132 130 M
(int) s
/F-gs-font 7 7 SF
144.6 130 M
( row1, ) s
/Courier-Bold 7 7 SUF
174 130 M
(int) s
/F-gs-font 7 7 SF
186.6 130 M
( col1, ) s
/Courier-Bold 7 7 SUF
216 130 M
(int) s
/F-gs-font 7 7 SF
228.6 130 M
( row2, ) s
/Courier-Bold 7 7 SUF
258 130 M
(int) s
/F-gs-font 7 7 SF
270.6 130 M
( col2\) {) s
18.6 122 M (49:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(if) s
/F-gs-font 7 7 SF
60.6 122 M
(\(row1 < 0 || row1 >= ) s
/Courier-Bold 7 7 SUF
148.8 122 M
(this) s
/F-gs-font 7 7 SF
165.6 122 M
(.matrix.length || row2 < 0 || row2 >= ) s
/Courier-Bold 7 7 SUF
325.2 122 M
(this) s
/F-gs-font 7 7 SF
342 122 M
(.matrix.len) s
5 114 M
(gth\) ) s
/Courier-Bold 7 7 SUF
26 114 M
(return) s
/F-gs-font 7 7 SF
51.2 114 M
( -1;) s
18.6 106 M (50:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(if) s
/F-gs-font 7 7 SF
60.6 106 M
(\(col1 < 0 || col1 >= ) s
/Courier-Bold 7 7 SUF
148.8 106 M
(this) s
/F-gs-font 7 7 SF
165.6 106 M
(.matrix[0].length || col2 < 0 || col2 >= ) s
/Courier-Bold 7 7 SUF
337.8 106 M
(this) s
/F-gs-font 7 7 SF
354.6 106 M
(.matrix[) s
5 98 M
(0].length\) ) s
/Courier-Bold 7 7 SUF
51.2 98 M
(return) s
/F-gs-font 7 7 SF
76.4 98 M
( -1;) s
18.6 90 M (51:) s
18.6 82 M (52:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(return) s
/F-gs-font 7 7 SF
18.6 74 M (53:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(this) s
/F-gs-font 7 7 SF
77.4 74 M
(.cache[row2 + 1][col2 + 1] +) s
18.6 66 M (54:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(this) s
/F-gs-font 7 7 SF
77.4 66 M
(.cache[row1][col1] -) s
18.6 58 M (55:) s
35.4 58 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 58 M
(this) s
/F-gs-font 7 7 SF
77.4 58 M
(.cache[row2 + 1][col1] -) s
18.6 50 M (56:) s
35.4 50 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 50 M
(this) s
/F-gs-font 7 7 SF
77.4 50 M
(.cache[row1][col2 + 1];) s
18.6 42 M (57:) s
35.4 42 M
(  }) s
18.6 34 M (58:) s
35.4 34 M
(}) s
18.6 26 M (59:) s
18.6 18 M (60:) s
/Courier-Oblique 7 7 SUF
35.4 18 M
(/**) s
/F-gs-font 7 7 SF
18.6 10 M (61:) s
/Courier-Oblique 7 7 SUF
35.4 10 M
( * Your NumMatrix object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
18.6 2 M (62:) s
/Courier-Oblique 7 7 SUF
35.4 2 M
( * NumMatrix obj = new NumMatrix\(matrix\);) s
/F-gs-font 7 7 SF
415.6 522 M (63:) s
/Courier-Oblique 7 7 SUF
432.4 522 M
( * int param_1 = obj.sumRegion\(row1,col1,row2,col2\);) s
/F-gs-font 7 7 SF
415.6 514 M (64:) s
/Courier-Oblique 7 7 SUF
432.4 514 M
( */) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 90
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/KthSmallestElementInSortedMatrix.java) def
/fdir (./arrays) def
/ftail (KthSmallestElementInSortedMatrix.java) def
% User defined strings:
/fmodstr (Fri Mar 08 00:09:42 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (KthSmallestElementInSortedMatrix.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a n x n matrix where each of the rows and columns are sorted in ascending or) s
5 490 M
(der, find the kth smallest element in the matrix.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note that it is the kth smallest element in the sorted order, not the kth distinct) s
5 466 M
( element.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  matrix = [) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [ 1,  5,  9],) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [10, 11, 13],) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [12, 13, 15]) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  ],) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  k = 8,) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  return 13.) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
18.6 354 M (20:) s
/Courier-Bold 7 7 SUF
35.4 354 M
(class) s
/F-gs-font 7 7 SF
56.4 354 M
( Solution {) s
18.6 346 M (21:) s
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( ) s
/Courier-Bold 7 7 SUF
73.2 346 M
(int) s
/F-gs-font 7 7 SF
85.8 346 M
( kthSmallest\() s
/Courier-Bold 7 7 SUF
140.4 346 M
(int) s
/F-gs-font 7 7 SF
153 346 M
([][] matrix, ) s
/Courier-Bold 7 7 SUF
207.6 346 M
(int) s
/F-gs-font 7 7 SF
220.2 346 M
( k\) {) s
18.6 338 M (22:) s
35.4 338 M
(    PriorityQueue<Integer> q = ) s
/Courier-Bold 7 7 SUF
165.6 338 M
(new) s
/F-gs-font 7 7 SF
178.2 338 M
( PriorityQueue<Integer>\(Collections.reverseOrder\(\)) s
5 330 M
(\);) s
18.6 322 M (23:) s
18.6 314 M (24:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\() s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( i = 0; i < matrix.length; i++\) {) s
18.6 306 M (25:) s
35.4 306 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 306 M
(for) s
/F-gs-font 7 7 SF
73.2 306 M
(\() s
/Courier-Bold 7 7 SUF
77.4 306 M
(int) s
/F-gs-font 7 7 SF
90 306 M
( j = 0; j < matrix.length; j++\) {) s
18.6 298 M (26:) s
35.4 298 M
(        q.add\(matrix[i][j]\);) s
18.6 290 M (27:) s
35.4 290 M
(      }) s
18.6 282 M (28:) s
35.4 282 M
(    }) s
18.6 274 M (29:) s
18.6 266 M (30:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(while) s
/F-gs-font 7 7 SF
73.2 266 M
(\(q.size\(\) > k\) q.poll\(\);) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(return) s
/F-gs-font 7 7 SF
77.4 250 M
( q.poll\(\);) s
18.6 242 M (33:) s
35.4 242 M
(  }) s
18.6 234 M (34:) s
35.4 234 M
(}) s
_R
S
%%Page: (1) 91
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/SetZeroes.java) def
/fdir (./arrays) def
/ftail (SetZeroes.java) def
% User defined strings:
/fmodstr (Wed Mar 06 22:07:02 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SetZeroes.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do i) s
5 490 M
(t in-place.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  [) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  [1,1,1],) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  [1,0,1],) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [1,1,1]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  ]) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [1,0,1],) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [0,0,0],) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  [1,0,1]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  ]) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [0,1,2,0],) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [3,4,5,2],) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  [1,3,1,5]) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  ]) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  [) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  [0,0,0,0],) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  [0,4,5,0],) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  [0,3,1,0]) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  ]) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  A straight forward solution using O\(mn\) space is probably a bad idea.) s
/F-gs-font 7 7 SF
18.6 226 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  A simple improvement uses O\(m + n\) space, but still not the best solution.) s
/F-gs-font 7 7 SF
18.6 218 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Could you devise a constant space solution?) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( */) s
/F-gs-font 7 7 SF
18.6 202 M (40:) s
18.6 194 M (41:) s
/Courier-Bold 7 7 SUF
35.4 194 M
(class) s
/F-gs-font 7 7 SF
56.4 194 M
( Solution {) s
18.6 186 M (42:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(void) s
/F-gs-font 7 7 SF
90 186 M
( setZeroes\() s
/Courier-Bold 7 7 SUF
136.2 186 M
(int) s
/F-gs-font 7 7 SF
148.8 186 M
([][] matrix\) {) s
18.6 178 M (43:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(matrix.length == 0\) ) s
/Courier-Bold 7 7 SUF
148.8 178 M
(return) s
/F-gs-font 7 7 SF
174 178 M
(;) s
18.6 170 M (44:) s
18.6 162 M (45:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(boolean) s
/F-gs-font 7 7 SF
81.6 162 M
( firstRowHasZero = ) s
/Courier-Bold 7 7 SUF
161.4 162 M
(false) s
/F-gs-font 7 7 SF
182.4 162 M
(;) s
18.6 154 M (46:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(boolean) s
/F-gs-font 7 7 SF
81.6 154 M
( firstColHasZero = ) s
/Courier-Bold 7 7 SUF
161.4 154 M
(false) s
/F-gs-font 7 7 SF
182.4 154 M
(;) s
18.6 146 M (47:) s
18.6 138 M (48:) s
35.4 138 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 138 M
(// first row) s
/F-gs-font 7 7 SF
18.6 130 M (49:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(for) s
/F-gs-font 7 7 SF
64.8 130 M
(\() s
/Courier-Bold 7 7 SUF
69 130 M
(int) s
/F-gs-font 7 7 SF
81.6 130 M
( i = 0; i < matrix[0].length; i++\) {) s
18.6 122 M (50:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(if) s
/F-gs-font 7 7 SF
69 122 M
(\(matrix[0][i] == 0\) {) s
18.6 114 M (51:) s
35.4 114 M
(        firstRowHasZero = ) s
/Courier-Bold 7 7 SUF
144.6 114 M
(true) s
/F-gs-font 7 7 SF
161.4 114 M
(;) s
18.6 106 M (52:) s
35.4 106 M
(        ) s
/Courier-Bold 7 7 SUF
69 106 M
(break) s
/F-gs-font 7 7 SF
90 106 M
(;) s
18.6 98 M (53:) s
35.4 98 M
(      }) s
18.6 90 M (54:) s
35.4 90 M
(    }) s
18.6 82 M (55:) s
18.6 74 M (56:) s
35.4 74 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 74 M
(// first col) s
/F-gs-font 7 7 SF
18.6 66 M (57:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(for) s
/F-gs-font 7 7 SF
64.8 66 M
(\() s
/Courier-Bold 7 7 SUF
69 66 M
(int) s
/F-gs-font 7 7 SF
81.6 66 M
( i = 0; i < matrix.length; i++\) {) s
18.6 58 M (58:) s
35.4 58 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 58 M
(if) s
/F-gs-font 7 7 SF
69 58 M
(\(matrix[i][0] == 0\) {) s
18.6 50 M (59:) s
35.4 50 M
(        firstColHasZero = ) s
/Courier-Bold 7 7 SUF
144.6 50 M
(true) s
/F-gs-font 7 7 SF
161.4 50 M
(;) s
18.6 42 M (60:) s
35.4 42 M
(        ) s
/Courier-Bold 7 7 SUF
69 42 M
(break) s
/F-gs-font 7 7 SF
90 42 M
(;) s
18.6 34 M (61:) s
35.4 34 M
(      }) s
18.6 26 M (62:) s
35.4 26 M
(    }) s
18.6 18 M (63:) s
18.6 10 M (64:) s
35.4 10 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 10 M
(// check entire matrix for zeroes) s
/F-gs-font 7 7 SF
18.6 2 M (65:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(for) s
/F-gs-font 7 7 SF
64.8 2 M
(\() s
/Courier-Bold 7 7 SUF
69 2 M
(int) s
/F-gs-font 7 7 SF
81.6 2 M
( i = 1; i < matrix.length; i++\) {) s
415.6 522 M (66:) s
432.4 522 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 522 M
(for) s
/F-gs-font 7 7 SF
470.2 522 M
(\() s
/Courier-Bold 7 7 SUF
474.4 522 M
(int) s
/F-gs-font 7 7 SF
487 522 M
( j = 1; j < matrix[0].length; j++\) {) s
415.6 514 M (67:) s
432.4 514 M
(        ) s
/Courier-Bold 7 7 SUF
466 514 M
(if) s
/F-gs-font 7 7 SF
474.4 514 M
(\(matrix[i][j] == 0\) {) s
415.6 506 M (68:) s
432.4 506 M
(          matrix[0][j] = 0;) s
415.6 498 M (69:) s
432.4 498 M
(          matrix[i][0] = 0;) s
415.6 490 M (70:) s
432.4 490 M
(        }) s
415.6 482 M (71:) s
432.4 482 M
(      }) s
415.6 474 M (72:) s
432.4 474 M
(    }) s
415.6 466 M (73:) s
415.6 458 M (74:) s
432.4 458 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 458 M
(// fill in horizontal) s
/F-gs-font 7 7 SF
415.6 450 M (75:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(for) s
/F-gs-font 7 7 SF
461.8 450 M
(\() s
/Courier-Bold 7 7 SUF
466 450 M
(int) s
/F-gs-font 7 7 SF
478.6 450 M
( i = 1; i < matrix.length; i++\) {) s
415.6 442 M (76:) s
432.4 442 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 442 M
(if) s
/F-gs-font 7 7 SF
466 442 M
(\(matrix[i][0] == 0\) {) s
415.6 434 M (77:) s
432.4 434 M
(        ) s
/Courier-Bold 7 7 SUF
466 434 M
(for) s
/F-gs-font 7 7 SF
478.6 434 M
(\() s
/Courier-Bold 7 7 SUF
482.8 434 M
(int) s
/F-gs-font 7 7 SF
495.4 434 M
( j = 1; j < matrix[i].length; j++\)) s
415.6 426 M (78:) s
432.4 426 M
(          matrix[i][j] = 0;) s
415.6 418 M (79:) s
432.4 418 M
(      }) s
415.6 410 M (80:) s
432.4 410 M
(    }) s
415.6 402 M (81:) s
415.6 394 M (82:) s
432.4 394 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 394 M
(// fill in vertical) s
/F-gs-font 7 7 SF
415.6 386 M (83:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(for) s
/F-gs-font 7 7 SF
461.8 386 M
(\() s
/Courier-Bold 7 7 SUF
466 386 M
(int) s
/F-gs-font 7 7 SF
478.6 386 M
( i = 1; i < matrix[0].length; i++\) {) s
415.6 378 M (84:) s
432.4 378 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 378 M
(if) s
/F-gs-font 7 7 SF
466 378 M
(\(matrix[0][i] == 0\) {) s
415.6 370 M (85:) s
432.4 370 M
(        ) s
/Courier-Bold 7 7 SUF
466 370 M
(for) s
/F-gs-font 7 7 SF
478.6 370 M
(\() s
/Courier-Bold 7 7 SUF
482.8 370 M
(int) s
/F-gs-font 7 7 SF
495.4 370 M
( j = 1; j < matrix.length; j++\)) s
415.6 362 M (86:) s
432.4 362 M
(          matrix[j][i] = 0;) s
415.6 354 M (87:) s
432.4 354 M
(      }) s
415.6 346 M (88:) s
432.4 346 M
(    }) s
415.6 338 M (89:) s
415.6 330 M (90:) s
432.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 330 M
(if) s
/F-gs-font 7 7 SF
457.6 330 M
(\(firstRowHasZero\)) s
415.6 322 M (91:) s
432.4 322 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 322 M
(for) s
/F-gs-font 7 7 SF
470.2 322 M
(\() s
/Courier-Bold 7 7 SUF
474.4 322 M
(int) s
/F-gs-font 7 7 SF
487 322 M
( i = 0; i < matrix[0].length; i++\)) s
415.6 314 M (92:) s
432.4 314 M
(        matrix[0][i] = 0;) s
415.6 306 M (93:) s
415.6 298 M (94:) s
432.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 298 M
(if) s
/F-gs-font 7 7 SF
457.6 298 M
(\(firstColHasZero\)) s
415.6 290 M (95:) s
432.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 290 M
(for) s
/F-gs-font 7 7 SF
470.2 290 M
(\() s
/Courier-Bold 7 7 SUF
474.4 290 M
(int) s
/F-gs-font 7 7 SF
487 290 M
( i = 0; i < matrix.length; i++\)) s
415.6 282 M (96:) s
432.4 282 M
(        matrix[i][0] = 0;) s
415.6 274 M (97:) s
432.4 274 M
(  }) s
415.6 266 M (98:) s
432.4 266 M
(}) s
_R
S
%%Page: (1) 92
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/GameOfLife.java) def
/fdir (./arrays) def
/ftail (GameOfLife.java) def
% User defined strings:
/fmodstr (Sun Apr 07 01:49:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (GameOfLife.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  According to the Wikipedia's article: "The Game of Life, also known simply as Life) s
5 490 M
(, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.") s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Given a board with m by n cells, each cell has an initial state live \(1\) or dead \() s
5 466 M
(0\). Each cell interacts with its eight neighbors \(horizontal, vertical, diagonal\) using the ) s
5 458 M
(following four rules \(taken from the above Wikipedia article\):) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Any live cell with fewer than two live neighbors dies, as if caused by under-popul) s
5 434 M
(ation.) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Any live cell with two or three live neighbors lives on to the next generation.) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Any live cell with more than three live neighbors dies, as if by over-population..) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Any dead cell with exactly three live neighbors becomes a live cell, as if by repr) s
5 402 M
(oduction.) s
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Write a function to compute the next state \(after one update\) of the board given i) s
5 386 M
(ts current state. The next state is created by applying the above rules simultaneously to ev) s
5 378 M
(ery cell in the current state, where births and deaths occur simultaneously.) s
/F-gs-font 7 7 SF
18.6 370 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 354 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 338 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [) s
/F-gs-font 7 7 SF
18.6 330 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [0,1,0],) s
/F-gs-font 7 7 SF
18.6 322 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [0,0,1],) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  [1,1,1],) s
/F-gs-font 7 7 SF
18.6 306 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  [0,0,0]) s
/F-gs-font 7 7 SF
18.6 298 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  ]) s
/F-gs-font 7 7 SF
18.6 290 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 282 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  [) s
/F-gs-font 7 7 SF
18.6 274 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  [0,0,0],) s
/F-gs-font 7 7 SF
18.6 266 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  [1,0,1],) s
/F-gs-font 7 7 SF
18.6 258 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  [0,1,1],) s
/F-gs-font 7 7 SF
18.6 250 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  [0,1,0]) s
/F-gs-font 7 7 SF
18.6 242 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  ]) s
/F-gs-font 7 7 SF
18.6 234 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 226 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 218 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Could you solve it in-place? Remember that the board needs to be updated at the sa) s
5 210 M
(me time: You cannot update some cells first and then use their updated values to update othe) s
5 202 M
(r cells.) s
/F-gs-font 7 7 SF
18.6 194 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  In this question, we represent the board using a 2D array. In principle, the board) s
5 186 M
( is infinite, which would cause problems when the active area encroaches the border of the a) s
5 178 M
(rray. How would you address these problems?) s
/F-gs-font 7 7 SF
18.6 170 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
( */) s
/F-gs-font 7 7 SF
18.6 162 M (35:) s
18.6 154 M (36:) s
/Courier-Bold 7 7 SUF
35.4 154 M
(class) s
/F-gs-font 7 7 SF
56.4 154 M
( Solution {) s
18.6 146 M (37:) s
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( ) s
/Courier-Bold 7 7 SUF
73.2 146 M
(void) s
/F-gs-font 7 7 SF
90 146 M
( gameOfLife\() s
/Courier-Bold 7 7 SUF
140.4 146 M
(int) s
/F-gs-font 7 7 SF
153 146 M
([][] board\) {) s
18.6 138 M (38:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(for) s
/F-gs-font 7 7 SF
64.8 138 M
(\() s
/Courier-Bold 7 7 SUF
69 138 M
(int) s
/F-gs-font 7 7 SF
81.6 138 M
( i = 0; i < board.length; i++\)) s
18.6 130 M (39:) s
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
(for) s
/F-gs-font 7 7 SF
73.2 130 M
(\() s
/Courier-Bold 7 7 SUF
77.4 130 M
(int) s
/F-gs-font 7 7 SF
90 130 M
( j = 0; j < board[i].length; j++\)) s
18.6 122 M (40:) s
35.4 122 M
(        board[i][j] = helper\(board, i, j\);) s
18.6 114 M (41:) s
18.6 106 M (42:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(for) s
/F-gs-font 7 7 SF
64.8 106 M
(\() s
/Courier-Bold 7 7 SUF
69 106 M
(int) s
/F-gs-font 7 7 SF
81.6 106 M
( i = 0; i < board.length; i++\)) s
18.6 98 M (43:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(for) s
/F-gs-font 7 7 SF
73.2 98 M
(\() s
/Courier-Bold 7 7 SUF
77.4 98 M
(int) s
/F-gs-font 7 7 SF
90 98 M
( j = 0; j < board[i].length; j++\)) s
18.6 90 M (44:) s
35.4 90 M
(        board[i][j] %= 2;) s
18.6 82 M (45:) s
35.4 82 M
(  }) s
18.6 74 M (46:) s
18.6 66 M (47:) s
35.4 66 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 66 M
(public) s
/F-gs-font 7 7 SF
69 66 M
( ) s
/Courier-Bold 7 7 SUF
73.2 66 M
(int) s
/F-gs-font 7 7 SF
85.8 66 M
( helper\() s
/Courier-Bold 7 7 SUF
119.4 66 M
(int) s
/F-gs-font 7 7 SF
132 66 M
([][] board, ) s
/Courier-Bold 7 7 SUF
182.4 66 M
(int) s
/F-gs-font 7 7 SF
195 66 M
( row, ) s
/Courier-Bold 7 7 SUF
220.2 66 M
(int) s
/F-gs-font 7 7 SF
232.8 66 M
( col\) {) s
18.6 58 M (48:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(int) s
/F-gs-font 7 7 SF
64.8 58 M
( liveNeighbors = 0;) s
18.6 50 M (49:) s
18.6 42 M (50:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(if) s
/F-gs-font 7 7 SF
60.6 42 M
(\(getNeighbor\(board, row - 1, col - 1\) == 1\) liveNeighbors++;) s
18.6 34 M (51:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(if) s
/F-gs-font 7 7 SF
60.6 34 M
(\(getNeighbor\(board, row - 1, col\) == 1\) liveNeighbors++;) s
18.6 26 M (52:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(if) s
/F-gs-font 7 7 SF
60.6 26 M
(\(getNeighbor\(board, row - 1, col + 1\) == 1\) liveNeighbors++;) s
18.6 18 M (53:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(if) s
/F-gs-font 7 7 SF
60.6 18 M
(\(getNeighbor\(board, row, col - 1\) == 1\) liveNeighbors++;) s
18.6 10 M (54:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(if) s
/F-gs-font 7 7 SF
60.6 10 M
(\(getNeighbor\(board, row, col + 1\) == 1\) liveNeighbors++;) s
18.6 2 M (55:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(if) s
/F-gs-font 7 7 SF
60.6 2 M
(\(getNeighbor\(board, row + 1, col - 1\) == 1\) liveNeighbors++;) s
415.6 522 M (56:) s
432.4 522 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 522 M
(if) s
/F-gs-font 7 7 SF
457.6 522 M
(\(getNeighbor\(board, row + 1, col\) == 1\) liveNeighbors++;) s
415.6 514 M (57:) s
432.4 514 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 514 M
(if) s
/F-gs-font 7 7 SF
457.6 514 M
(\(getNeighbor\(board, row + 1, col + 1\) == 1\) liveNeighbors++;) s
415.6 506 M (58:) s
415.6 498 M (59:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(if) s
/F-gs-font 7 7 SF
457.6 498 M
(\(liveNeighbors < 2 && board[row][col] == 1\) { ) s
/Courier-Oblique 7 7 SUF
650.8 498 M
(// dead if less than 2 neighbors) s
/F-gs-font 7 7 SF
415.6 490 M (60:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 490 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 490 M
(return) s
/F-gs-font 7 7 SF
482.8 490 M
( 2;) s
415.6 482 M (61:) s
432.4 482 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 482 M
(else) s
/F-gs-font 7 7 SF
474.4 482 M
( ) s
/Courier-Bold 7 7 SUF
478.6 482 M
(if) s
/F-gs-font 7 7 SF
487 482 M
(\(liveNeighbors == 3 && board[row][col] == 0\) { ) s
/Courier-Oblique 7 7 SUF
684.4 482 M
(// live if exactly 3 nei) s
402 474 M
(ghbors) s
/F-gs-font 7 7 SF
415.6 466 M (62:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 466 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 466 M
(return) s
/F-gs-font 7 7 SF
482.8 466 M
( 3;) s
415.6 458 M (63:) s
432.4 458 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 458 M
(else) s
/F-gs-font 7 7 SF
474.4 458 M
( ) s
/Courier-Bold 7 7 SUF
478.6 458 M
(if) s
/F-gs-font 7 7 SF
487 458 M
(\(liveNeighbors > 3 && board[row][col] == 1\) { ) s
/Courier-Oblique 7 7 SUF
680.2 458 M
(// dead if more than 3 ne) s
402 450 M
(ighbors) s
/F-gs-font 7 7 SF
415.6 442 M (64:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 442 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 442 M
(return) s
/F-gs-font 7 7 SF
482.8 442 M
( 2;) s
415.6 434 M (65:) s
432.4 434 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 434 M
(else) s
/F-gs-font 7 7 SF
474.4 434 M
( { ) s
/Courier-Oblique 7 7 SUF
487 434 M
(// do nothing) s
/F-gs-font 7 7 SF
415.6 426 M (66:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 426 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 426 M
(return) s
/F-gs-font 7 7 SF
482.8 426 M
( board[row][col];) s
415.6 418 M (67:) s
432.4 418 M
(    }) s
415.6 410 M (68:) s
432.4 410 M
(  }) s
415.6 402 M (69:) s
415.6 394 M (70:) s
432.4 394 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 394 M
(// 2 = used to live, now dead) s
/F-gs-font 7 7 SF
415.6 386 M (71:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 386 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 386 M
(// 3 = used to be dead, now live) s
/F-gs-font 7 7 SF
415.6 378 M (72:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 378 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 378 M
(// this function needs to return the former state so that the calculation is based) s
402 370 M
( on) s
/F-gs-font 7 7 SF
415.6 362 M (73:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 362 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 362 M
(// former state) s
/F-gs-font 7 7 SF
415.6 354 M (74:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 354 M
(public) s
/F-gs-font 7 7 SF
466 354 M
( ) s
/Courier-Bold 7 7 SUF
470.2 354 M
(int) s
/F-gs-font 7 7 SF
482.8 354 M
( getNeighbor\() s
/Courier-Bold 7 7 SUF
537.4 354 M
(int) s
/F-gs-font 7 7 SF
550 354 M
([][] board, ) s
/Courier-Bold 7 7 SUF
600.4 354 M
(int) s
/F-gs-font 7 7 SF
613 354 M
( row, ) s
/Courier-Bold 7 7 SUF
638.2 354 M
(int) s
/F-gs-font 7 7 SF
650.8 354 M
( col\) {) s
415.6 346 M (75:) s
432.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 346 M
(if) s
/F-gs-font 7 7 SF
457.6 346 M
(\(row < 0 || row >= board.length || col < 0 || col >= board[row].length\)) s
415.6 338 M (76:) s
432.4 338 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 338 M
(return) s
/F-gs-font 7 7 SF
482.8 338 M
( 0;) s
415.6 330 M (77:) s
415.6 322 M (78:) s
432.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 322 M
(if) s
/F-gs-font 7 7 SF
457.6 322 M
(\(board[row][col] < 2\) ) s
/Courier-Bold 7 7 SUF
550 322 M
(return) s
/F-gs-font 7 7 SF
575.2 322 M
( board[row][col];) s
415.6 314 M (79:) s
432.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 314 M
(else) s
/F-gs-font 7 7 SF
466 314 M
( ) s
/Courier-Bold 7 7 SUF
470.2 314 M
(return) s
/F-gs-font 7 7 SF
495.4 314 M
( board[row][col] == 2 ? 1 : 0;) s
415.6 306 M (80:) s
432.4 306 M
(  }) s
415.6 298 M (81:) s
432.4 298 M
(}) s
_R
S
%%Page: (1) 93
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/ShuffleArray.java) def
/fdir (./arrays) def
/ftail (ShuffleArray.java) def
% User defined strings:
/fmodstr (Wed Mar 06 21:46:02 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ShuffleArray.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Shuffle a set of numbers without duplicates.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  // Init an array with set 1, 2, and 3.) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  int[] nums = {1,2,3};) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Solution solution = new Solution\(nums\);) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  // Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] mus) s
5 426 M
(t equally likely to be returned.) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  solution.shuffle\(\);) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  // Resets the array back to its original configuration [1,2,3].) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  solution.reset\(\);) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  // Returns the random shuffling of array [1,2,3].) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  solution.shuffle\(\);) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(// Idea is to pick a number out of a hat...) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 338 M
(// Once you pick a number, you cannot repick it) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 330 M
(// So we do random for an index and random anything from index + 1 to length) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( Solution {) s
18.6 306 M (27:) s
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(int) s
/F-gs-font 7 7 SF
56.4 306 M
([] original;) s
18.6 298 M (28:) s
18.6 290 M (29:) s
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( Solution\() s
/Courier-Bold 7 7 SUF
111 290 M
(int) s
/F-gs-font 7 7 SF
123.6 290 M
([] nums\) {) s
18.6 282 M (30:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(this) s
/F-gs-font 7 7 SF
69 282 M
(.original = nums;) s
18.6 274 M (31:) s
35.4 274 M
(  }) s
18.6 266 M (32:) s
18.6 258 M (33:) s
35.4 258 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 258 M
(/** Resets the array to its original configuration and return it. */) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ) s
/Courier-Bold 7 7 SUF
73.2 250 M
(int) s
/F-gs-font 7 7 SF
85.8 250 M
([] reset\(\) {) s
18.6 242 M (35:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(return) s
/F-gs-font 7 7 SF
77.4 242 M
( ) s
/Courier-Bold 7 7 SUF
81.6 242 M
(this) s
/F-gs-font 7 7 SF
98.4 242 M
(.original;) s
18.6 234 M (36:) s
35.4 234 M
(  }) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 218 M
(/** Returns a random shuffling of the array. */) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
35.4 210 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 210 M
(public) s
/F-gs-font 7 7 SF
69 210 M
( ) s
/Courier-Bold 7 7 SUF
73.2 210 M
(int) s
/F-gs-font 7 7 SF
85.8 210 M
([] shuffle\(\) {) s
18.6 202 M (40:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
([] shuffled = ) s
/Courier-Bold 7 7 SUF
123.6 202 M
(this) s
/F-gs-font 7 7 SF
140.4 202 M
(.original.clone\(\);) s
18.6 194 M (41:) s
18.6 186 M (42:) s
35.4 186 M
(    Random rand = ) s
/Courier-Bold 7 7 SUF
111 186 M
(new) s
/F-gs-font 7 7 SF
123.6 186 M
( Random\(\);) s
18.6 178 M (43:) s
18.6 170 M (44:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(for) s
/F-gs-font 7 7 SF
64.8 170 M
(\() s
/Courier-Bold 7 7 SUF
69 170 M
(int) s
/F-gs-font 7 7 SF
81.6 170 M
( i = 0; i < shuffled.length; i++\) {) s
18.6 162 M (45:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(int) s
/F-gs-font 7 7 SF
73.2 162 M
( swapIndex = rand.nextInt\(shuffled.length - i\) + i;) s
18.6 154 M (46:) s
18.6 146 M (47:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(int) s
/F-gs-font 7 7 SF
73.2 146 M
( temp = shuffled[i];) s
18.6 138 M (48:) s
35.4 138 M
(      shuffled[i] = shuffled[swapIndex];) s
18.6 130 M (49:) s
35.4 130 M
(      shuffled[swapIndex] = temp;) s
18.6 122 M (50:) s
35.4 122 M
(    }) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(return) s
/F-gs-font 7 7 SF
77.4 106 M
( shuffled;) s
18.6 98 M (53:) s
35.4 98 M
(  }) s
18.6 90 M (54:) s
35.4 90 M
(}) s
18.6 82 M (55:) s
18.6 74 M (56:) s
/Courier-Oblique 7 7 SUF
35.4 74 M
(/**) s
/F-gs-font 7 7 SF
18.6 66 M (57:) s
/Courier-Oblique 7 7 SUF
35.4 66 M
( * Your Solution object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
18.6 58 M (58:) s
/Courier-Oblique 7 7 SUF
35.4 58 M
( * Solution obj = new Solution\(nums\);) s
/F-gs-font 7 7 SF
18.6 50 M (59:) s
/Courier-Oblique 7 7 SUF
35.4 50 M
( * int[] param_1 = obj.reset\(\);) s
/F-gs-font 7 7 SF
18.6 42 M (60:) s
/Courier-Oblique 7 7 SUF
35.4 42 M
( * int[] param_2 = obj.shuffle\(\);) s
/F-gs-font 7 7 SF
18.6 34 M (61:) s
/Courier-Oblique 7 7 SUF
35.4 34 M
( */) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 94
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/MaxConsecutiveOnes.java) def
/fdir (./arrays) def
/ftail (MaxConsecutiveOnes.java) def
% User defined strings:
/fmodstr (Wed Mar 06 23:58:21 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaxConsecutiveOnes.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array A of 0s and 1s, we may change up to K values from 0 to 1.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Return the length of the longest \(contiguous\) subarray that contains only 1s.) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: 6) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [1,1,1,0,0,1,1,1,1,1,1]) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3) s
/F-gs-font 7 7 SF
18.6 370 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: 10) s
/F-gs-font 7 7 SF
18.6 362 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 314 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  1 <= A.length <= 20000) s
/F-gs-font 7 7 SF
18.6 298 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  0 <= K <= A.length) s
/F-gs-font 7 7 SF
18.6 290 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  A[i] is 0 or 1) s
/F-gs-font 7 7 SF
18.6 282 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (32:) s
18.6 266 M (33:) s
/Courier-Bold 7 7 SUF
35.4 266 M
(class) s
/F-gs-font 7 7 SF
56.4 266 M
( Solution {) s
18.6 258 M (34:) s
35.4 258 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 258 M
(public) s
/F-gs-font 7 7 SF
69 258 M
( ) s
/Courier-Bold 7 7 SUF
73.2 258 M
(int) s
/F-gs-font 7 7 SF
85.8 258 M
( longestOnes\() s
/Courier-Bold 7 7 SUF
140.4 258 M
(int) s
/F-gs-font 7 7 SF
153 258 M
([] A, ) s
/Courier-Bold 7 7 SUF
178.2 258 M
(int) s
/F-gs-font 7 7 SF
190.8 258 M
( K\) {) s
18.6 250 M (35:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(int) s
/F-gs-font 7 7 SF
64.8 250 M
( max = 0;) s
18.6 242 M (36:) s
18.6 234 M (37:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
( start = 0;) s
18.6 226 M (38:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(int) s
/F-gs-font 7 7 SF
64.8 226 M
( zeroes = 0;) s
18.6 218 M (39:) s
18.6 210 M (40:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( end = 0; end < A.length; end++\) {) s
18.6 202 M (41:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(if) s
/F-gs-font 7 7 SF
69 202 M
(\(A[end] == 0\) zeroes++;) s
18.6 194 M (42:) s
18.6 186 M (43:) s
35.4 186 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 186 M
(while) s
/F-gs-font 7 7 SF
81.6 186 M
(\(zeroes > K\) {) s
18.6 178 M (44:) s
35.4 178 M
(        ) s
/Courier-Bold 7 7 SUF
69 178 M
(if) s
/F-gs-font 7 7 SF
77.4 178 M
(\(A[start] == 0\) zeroes--;) s
18.6 170 M (45:) s
35.4 170 M
(        start++;) s
18.6 162 M (46:) s
35.4 162 M
(      }) s
18.6 154 M (47:) s
18.6 146 M (48:) s
35.4 146 M
(      max = Math.max\(max, end - start + 1\);) s
18.6 138 M (49:) s
35.4 138 M
(    }) s
18.6 130 M (50:) s
18.6 122 M (51:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( max;) s
18.6 114 M (52:) s
35.4 114 M
(  }) s
18.6 106 M (53:) s
35.4 106 M
(}) s
_R
S
%%Page: (1) 95
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/NumberOfIsland.java) def
/fdir (./arrays) def
/ftail (NumberOfIsland.java) def
% User defined strings:
/fmodstr (Mon Feb 18 22:47:22 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (NumberOfIsland.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a 2d grid map of '1's \(land\) and '0's \(water\), count the number of islands. ) s
5 490 M
(An island is surrounded by water and is formed by connecting adjacent lands horizontally or ) s
5 482 M
(vertically. You may assume all four edges of the grid are all surrounded by water.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Input:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  11110) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  11010) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  11000) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  00000) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  11000) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  11000) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  00100) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  00011) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
18.6 306 M (26:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (27:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( numIslands\() s
/Courier-Bold 7 7 SUF
136.2 298 M
(char) s
/F-gs-font 7 7 SF
153 298 M
([][] grid\) {) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(int) s
/F-gs-font 7 7 SF
64.8 290 M
( counter = 0;) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(for) s
/F-gs-font 7 7 SF
64.8 282 M
(\() s
/Courier-Bold 7 7 SUF
69 282 M
(int) s
/F-gs-font 7 7 SF
81.6 282 M
( i = 0; i < grid.length; i++\) {) s
18.6 274 M (30:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(for) s
/F-gs-font 7 7 SF
73.2 274 M
(\() s
/Courier-Bold 7 7 SUF
77.4 274 M
(int) s
/F-gs-font 7 7 SF
90 274 M
( j = 0; j < grid[i].length; j++\) {) s
18.6 266 M (31:) s
35.4 266 M
(        ) s
/Courier-Bold 7 7 SUF
69 266 M
(if) s
/F-gs-font 7 7 SF
77.4 266 M
(\(grid[i][j] == ) s
/Courier-Bold 7 7 SUF
140.4 266 M
('1') s
/F-gs-font 7 7 SF
153 266 M
(\) {) s
18.6 258 M (32:) s
35.4 258 M
(          counter++;) s
18.6 250 M (33:) s
35.4 250 M
(          DFS\(grid, i, j\);) s
18.6 242 M (34:) s
35.4 242 M
(        }) s
18.6 234 M (35:) s
35.4 234 M
(      }) s
18.6 226 M (36:) s
35.4 226 M
(    }) s
18.6 218 M (37:) s
18.6 210 M (38:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( counter;) s
18.6 202 M (39:) s
35.4 202 M
(  }) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 186 M
(public) s
/F-gs-font 7 7 SF
69 186 M
( ) s
/Courier-Bold 7 7 SUF
73.2 186 M
(void) s
/F-gs-font 7 7 SF
90 186 M
( DFS\() s
/Courier-Bold 7 7 SUF
111 186 M
(char) s
/F-gs-font 7 7 SF
127.8 186 M
([][] grid, ) s
/Courier-Bold 7 7 SUF
174 186 M
(int) s
/F-gs-font 7 7 SF
186.6 186 M
( row, ) s
/Courier-Bold 7 7 SUF
211.8 186 M
(int) s
/F-gs-font 7 7 SF
224.4 186 M
( col\) {) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(if) s
/F-gs-font 7 7 SF
60.6 178 M
(\(row < 0 || row >= grid.length || col < 0 || col >= grid[0].length\) ) s
/Courier-Bold 7 7 SUF
346.2 178 M
(return) s
/F-gs-font 7 7 SF
371.4 178 M
(;) s
18.6 170 M (43:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(if) s
/F-gs-font 7 7 SF
60.6 170 M
(\(grid[row][col] == ) s
/Courier-Bold 7 7 SUF
140.4 170 M
('0') s
/F-gs-font 7 7 SF
153 170 M
( || grid[row][col] == ) s
/Courier-Bold 7 7 SUF
245.4 170 M
('2') s
/F-gs-font 7 7 SF
258 170 M
(\) ) s
/Courier-Bold 7 7 SUF
266.4 170 M
(return) s
/F-gs-font 7 7 SF
291.6 170 M
(;) s
18.6 162 M (44:) s
18.6 154 M (45:) s
35.4 154 M
(    grid[row][col] = ) s
/Courier-Bold 7 7 SUF
123.6 154 M
('2') s
/F-gs-font 7 7 SF
136.2 154 M
(;) s
18.6 146 M (46:) s
18.6 138 M (47:) s
35.4 138 M
(    DFS\(grid, row + 1, col\);) s
18.6 130 M (48:) s
35.4 130 M
(    DFS\(grid, row, col + 1\);) s
18.6 122 M (49:) s
35.4 122 M
(    DFS\(grid, row - 1, col\);) s
18.6 114 M (50:) s
35.4 114 M
(    DFS\(grid, row, col - 1\);) s
18.6 106 M (51:) s
35.4 106 M
(  }) s
18.6 98 M (52:) s
35.4 98 M
(}) s
_R
S
%%Page: (1) 96
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/WordSubsets.java) def
/fdir (./arrays) def
/ftail (WordSubsets.java) def
% User defined strings:
/fmodstr (Sat Feb 23 22:58:45 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (WordSubsets.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  We are given two arrays A and B of words.  Each word is a string of lowercase lett) s
5 490 M
(ers.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Now, say that word b is a subset of word a if every letter in b occurs in a, inclu) s
5 466 M
(ding multiplicity.  For example, "wrr" is a subset of "warrior", but is not a subset of "wor) s
5 458 M
(ld".) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Now say a word a from A is universal if for every b in B, b is a subset of a.) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Return a list of all universal words in A.  You can return the words in any order.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["e","o"]) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: ["facebook","google","leetcode"]) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["l","e"]) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Output: ["apple","google","leetcode"]) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["e","oo"]) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Output: ["facebook","google"]) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["lo","eo"]) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Output: ["google","leetcode"]) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Example 5:) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Input: A = ["amazon","apple","facebook","google","leetcode"], B = ["ec","oc","ceo") s
5 242 M
(]) s
/F-gs-font 7 7 SF
18.6 234 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Output: ["facebook","leetcode"]) s
/F-gs-font 7 7 SF
18.6 226 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 218 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 210 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 202 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 194 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  1 <= A.length, B.length <= 10000) s
/F-gs-font 7 7 SF
18.6 186 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  1 <= A[i].length, B[i].length <= 10) s
/F-gs-font 7 7 SF
18.6 178 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  A[i] and B[i] consist only of lowercase letters.) s
/F-gs-font 7 7 SF
18.6 170 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  All words in A[i] are unique: there isn't i != j with A[i] == A[j].) s
/F-gs-font 7 7 SF
18.6 162 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
( */) s
/F-gs-font 7 7 SF
18.6 154 M (43:) s
18.6 146 M (44:) s
/Courier-Bold 7 7 SUF
35.4 146 M
(class) s
/F-gs-font 7 7 SF
56.4 146 M
( Solution {) s
18.6 138 M (45:) s
35.4 138 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 138 M
(public) s
/F-gs-font 7 7 SF
69 138 M
( List<String> wordSubsets\(String[] A, String[] B\) {) s
18.6 130 M (46:) s
35.4 130 M
(    List<String> result = ) s
/Courier-Bold 7 7 SUF
144.6 130 M
(new) s
/F-gs-font 7 7 SF
157.2 130 M
( ArrayList<>\(\);) s
18.6 122 M (47:) s
18.6 114 M (48:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(int) s
/F-gs-font 7 7 SF
64.8 114 M
([][] charMappingsA = ) s
/Courier-Bold 7 7 SUF
153 114 M
(new) s
/F-gs-font 7 7 SF
165.6 114 M
( ) s
/Courier-Bold 7 7 SUF
169.8 114 M
(int) s
/F-gs-font 7 7 SF
182.4 114 M
([A.length][26];) s
18.6 106 M (49:) s
18.6 98 M (50:) s
35.4 98 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 98 M
(// create character mappings for A) s
/F-gs-font 7 7 SF
18.6 90 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(for) s
/F-gs-font 7 7 SF
64.8 90 M
(\() s
/Courier-Bold 7 7 SUF
69 90 M
(int) s
/F-gs-font 7 7 SF
81.6 90 M
( i = 0; i < A.length; i++\) {) s
18.6 82 M (52:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(for) s
/F-gs-font 7 7 SF
73.2 82 M
(\() s
/Courier-Bold 7 7 SUF
77.4 82 M
(int) s
/F-gs-font 7 7 SF
90 82 M
( j = 0; j < A[i].length\(\); j++\) {) s
18.6 74 M (53:) s
35.4 74 M
(        charMappingsA[i][A[i].charAt\(j\) - ) s
/Courier-Bold 7 7 SUF
211.8 74 M
('a') s
/F-gs-font 7 7 SF
224.4 74 M
(]++;) s
18.6 66 M (54:) s
35.4 66 M
(      }) s
18.6 58 M (55:) s
35.4 58 M
(    }) s
18.6 50 M (56:) s
18.6 42 M (57:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(int) s
/F-gs-font 7 7 SF
64.8 42 M
([] charMappingB = ) s
/Courier-Bold 7 7 SUF
140.4 42 M
(new) s
/F-gs-font 7 7 SF
153 42 M
( ) s
/Courier-Bold 7 7 SUF
157.2 42 M
(int) s
/F-gs-font 7 7 SF
169.8 42 M
([26];) s
18.6 34 M (58:) s
18.6 26 M (59:) s
35.4 26 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 26 M
(// create character mappings for B) s
/F-gs-font 7 7 SF
18.6 18 M (60:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(for) s
/F-gs-font 7 7 SF
64.8 18 M
(\() s
/Courier-Bold 7 7 SUF
69 18 M
(int) s
/F-gs-font 7 7 SF
81.6 18 M
( i = 0; i < B.length; i++\) {) s
18.6 10 M (61:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(int) s
/F-gs-font 7 7 SF
73.2 10 M
([] tempCharMapping = ) s
/Courier-Bold 7 7 SUF
161.4 10 M
(new) s
/F-gs-font 7 7 SF
174 10 M
( ) s
/Courier-Bold 7 7 SUF
178.2 10 M
(int) s
/F-gs-font 7 7 SF
190.8 10 M
([26];) s
18.6 2 M (62:) s
35.4 2 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 2 M
(for) s
/F-gs-font 7 7 SF
73.2 2 M
(\() s
/Courier-Bold 7 7 SUF
77.4 2 M
(int) s
/F-gs-font 7 7 SF
90 2 M
( j = 0; j < B[i].length\(\); j++\) {) s
415.6 522 M (63:) s
432.4 522 M
(        tempCharMapping[B[i].charAt\(j\) - ) s
/Courier-Bold 7 7 SUF
604.6 522 M
('a') s
/F-gs-font 7 7 SF
617.2 522 M
(]++;) s
415.6 514 M (64:) s
432.4 514 M
(      }) s
415.6 506 M (65:) s
415.6 498 M (66:) s
432.4 498 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 498 M
(for) s
/F-gs-font 7 7 SF
470.2 498 M
(\() s
/Courier-Bold 7 7 SUF
474.4 498 M
(int) s
/F-gs-font 7 7 SF
487 498 M
( j = 0; j < 26; j++\) {) s
415.6 490 M (67:) s
432.4 490 M
(        charMappingB[j] = Math.max\(charMappingB[j], tempCharMapping[j]\);) s
415.6 482 M (68:) s
432.4 482 M
(      }) s
415.6 474 M (69:) s
432.4 474 M
(    }) s
415.6 466 M (70:) s
415.6 458 M (71:) s
432.4 458 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 458 M
(// compare A and B, if A is bigger than B for all chars then add the string) s
/F-gs-font 7 7 SF
415.6 450 M (72:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(for) s
/F-gs-font 7 7 SF
461.8 450 M
(\() s
/Courier-Bold 7 7 SUF
466 450 M
(int) s
/F-gs-font 7 7 SF
478.6 450 M
( i = 0; i < A.length; i++\) {) s
415.6 442 M (73:) s
432.4 442 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 442 M
(boolean) s
/F-gs-font 7 7 SF
487 442 M
( isUniversal = ) s
/Courier-Bold 7 7 SUF
550 442 M
(true) s
/F-gs-font 7 7 SF
566.8 442 M
(;) s
415.6 434 M (74:) s
432.4 434 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 434 M
(for) s
/F-gs-font 7 7 SF
470.2 434 M
(\() s
/Courier-Bold 7 7 SUF
474.4 434 M
(int) s
/F-gs-font 7 7 SF
487 434 M
( j = 0; j < 26; j++\) {) s
415.6 426 M (75:) s
432.4 426 M
(        ) s
/Courier-Bold 7 7 SUF
466 426 M
(if) s
/F-gs-font 7 7 SF
474.4 426 M
(\(charMappingsA[i][j] < charMappingB[j]\) {) s
415.6 418 M (76:) s
432.4 418 M
(          isUniversal = ) s
/Courier-Bold 7 7 SUF
533.2 418 M
(false) s
/F-gs-font 7 7 SF
554.2 418 M
(;) s
415.6 410 M (77:) s
432.4 410 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 410 M
(break) s
/F-gs-font 7 7 SF
495.4 410 M
(;) s
415.6 402 M (78:) s
432.4 402 M
(        }) s
415.6 394 M (79:) s
432.4 394 M
(      }) s
415.6 386 M (80:) s
415.6 378 M (81:) s
432.4 378 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 378 M
(if) s
/F-gs-font 7 7 SF
466 378 M
(\(isUniversal\) result.add\(A[i]\);) s
415.6 370 M (82:) s
432.4 370 M
(    }) s
415.6 362 M (83:) s
415.6 354 M (84:) s
432.4 354 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 354 M
(return) s
/F-gs-font 7 7 SF
474.4 354 M
( result;) s
415.6 346 M (85:) s
432.4 346 M
(  }) s
415.6 338 M (86:) s
432.4 338 M
(}) s
_R
S
%%Page: (1) 97
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/RotateImage.java) def
/fdir (./arrays) def
/ftail (RotateImage.java) def
% User defined strings:
/fmodstr (Wed Mar 06 22:31:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RotateImage.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given an n x n 2D matrix representing an image.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Rotate the image by 90 degrees \(clockwise\).) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  You have to rotate the image in-place, which means you have to modify the input 2D) s
5 442 M
( matrix directly. DO NOT allocate another 2D matrix and do the rotation.) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Given input matrix =) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [1,2,3],) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [4,5,6],) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  [7,8,9]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  ],) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  rotate the input matrix in-place such that it becomes:) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  [) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [7,4,1],) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [8,5,2],) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  [9,6,3]) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  ]) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 290 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Given input matrix =) s
/F-gs-font 7 7 SF
18.6 282 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  [) s
/F-gs-font 7 7 SF
18.6 274 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  [ 5, 1, 9,11],) s
/F-gs-font 7 7 SF
18.6 266 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  [ 2, 4, 8,10],) s
/F-gs-font 7 7 SF
18.6 258 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  [13, 3, 6, 7],) s
/F-gs-font 7 7 SF
18.6 250 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  [15,14,12,16]) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  ],) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 226 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  rotate the input matrix in-place such that it becomes:) s
/F-gs-font 7 7 SF
18.6 218 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  [) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  [15,13, 2, 5],) s
/F-gs-font 7 7 SF
18.6 202 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  [14, 3, 4, 1],) s
/F-gs-font 7 7 SF
18.6 194 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  [12, 6, 8, 9],) s
/F-gs-font 7 7 SF
18.6 186 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  [16, 7,10,11]) s
/F-gs-font 7 7 SF
18.6 178 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  ]) s
/F-gs-font 7 7 SF
18.6 170 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
( */) s
/F-gs-font 7 7 SF
18.6 162 M (45:) s
18.6 154 M (46:) s
/Courier-Bold 7 7 SUF
35.4 154 M
(class) s
/F-gs-font 7 7 SF
56.4 154 M
( Solution {) s
18.6 146 M (47:) s
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( ) s
/Courier-Bold 7 7 SUF
73.2 146 M
(void) s
/F-gs-font 7 7 SF
90 146 M
( rotate\() s
/Courier-Bold 7 7 SUF
123.6 146 M
(int) s
/F-gs-font 7 7 SF
136.2 146 M
([][] matrix\) {) s
18.6 138 M (48:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(int) s
/F-gs-font 7 7 SF
64.8 138 M
( startRow, startCol, endRow, endCol;) s
18.6 130 M (49:) s
18.6 122 M (50:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(for) s
/F-gs-font 7 7 SF
64.8 122 M
(\() s
/Courier-Bold 7 7 SUF
69 122 M
(int) s
/F-gs-font 7 7 SF
81.6 122 M
( i = 0; i < matrix.length / 2; i++\) {) s
18.6 114 M (51:) s
35.4 114 M
(      startRow = startCol = i;) s
18.6 106 M (52:) s
35.4 106 M
(      endRow = endCol = matrix.length - 1 - i;) s
18.6 98 M (53:) s
18.6 90 M (54:) s
35.4 90 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 90 M
(for) s
/F-gs-font 7 7 SF
73.2 90 M
(\() s
/Courier-Bold 7 7 SUF
77.4 90 M
(int) s
/F-gs-font 7 7 SF
90 90 M
( j = 0; j < matrix.length - 1 - 2 * i; j++\) {) s
18.6 82 M (55:) s
35.4 82 M
(        ) s
/Courier-Bold 7 7 SUF
69 82 M
(int) s
/F-gs-font 7 7 SF
81.6 82 M
( temp = matrix[startRow][startCol + j];) s
18.6 74 M (56:) s
35.4 74 M
(        matrix[startRow][startCol + j] = matrix[endRow - j][startCol];) s
18.6 66 M (57:) s
35.4 66 M
(        matrix[endRow - j][startCol] = matrix[endRow][endCol - j];) s
18.6 58 M (58:) s
35.4 58 M
(        matrix[endRow][endCol - j] = matrix[startRow + j][endCol];) s
18.6 50 M (59:) s
35.4 50 M
(        matrix[startRow + j][endCol] = temp;) s
18.6 42 M (60:) s
35.4 42 M
(      }) s
18.6 34 M (61:) s
35.4 34 M
(    }) s
18.6 26 M (62:) s
35.4 26 M
(  }) s
18.6 18 M (63:) s
35.4 18 M
(}) s
_R
S
%%Page: (1) 98
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/FindMissingNumber.java) def
/fdir (./arrays) def
/ftail (FindMissingNumber.java) def
% User defined strings:
/fmodstr (Sat Dec 01 23:17:37 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindMissingNumber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(// How do you find the missing number in a given integer array) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Bold 7 7 SUF
35.4 506 M
(import) s
/F-gs-font 7 7 SF
60.6 506 M
( java.util.*;) s
22.8 498 M (4:) s
/Courier-Bold 7 7 SUF
35.4 498 M
(import) s
/F-gs-font 7 7 SF
60.6 498 M
( java.lang.Math;) s
22.8 490 M (5:) s
22.8 482 M (6:) s
/Courier-Bold 7 7 SUF
35.4 482 M
(class) s
/F-gs-font 7 7 SF
56.4 482 M
( FindMissingNumber {) s
22.8 474 M (7:) s
35.4 474 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 474 M
(public) s
/F-gs-font 7 7 SF
69 474 M
( ) s
/Courier-Bold 7 7 SUF
73.2 474 M
(static) s
/F-gs-font 7 7 SF
98.4 474 M
( ) s
/Courier-Bold 7 7 SUF
102.6 474 M
(void) s
/F-gs-font 7 7 SF
119.4 474 M
( main\(String[] args\) {) s
22.8 466 M (8:) s
35.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 466 M
(int) s
/F-gs-font 7 7 SF
64.8 466 M
([] arr = ) s
/Courier-Bold 7 7 SUF
102.6 466 M
(new) s
/F-gs-font 7 7 SF
115.2 466 M
( ) s
/Courier-Bold 7 7 SUF
119.4 466 M
(int) s
/F-gs-font 7 7 SF
132 466 M
([] { 1, 2, 3, 4, 5, 7, 8, 9 }; ) s
/Courier-Oblique 7 7 SUF
262.2 466 M
(// solution: 6, 10) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 458 M
(    findMissingNumber\(arr, 10\);) s
18.6 450 M (10:) s
35.4 450 M
(    findMissingNumber1\(arr, 10\);) s
18.6 442 M (11:) s
35.4 442 M
(    findMissingNumber2\(arr, 10\);) s
18.6 434 M (12:) s
35.4 434 M
(    findMissingNumber3\(arr, 10\);) s
18.6 426 M (13:) s
35.4 426 M
(  }) s
18.6 418 M (14:) s
18.6 410 M (15:) s
35.4 410 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 410 M
(// using BitSet - which is just an array of booleans) s
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 402 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 402 M
(public) s
/F-gs-font 7 7 SF
69 402 M
( ) s
/Courier-Bold 7 7 SUF
73.2 402 M
(static) s
/F-gs-font 7 7 SF
98.4 402 M
( ) s
/Courier-Bold 7 7 SUF
102.6 402 M
(void) s
/F-gs-font 7 7 SF
119.4 402 M
( findMissingNumber\() s
/Courier-Bold 7 7 SUF
199.2 402 M
(int) s
/F-gs-font 7 7 SF
211.8 402 M
([] arr, ) s
/Courier-Bold 7 7 SUF
245.4 402 M
(int) s
/F-gs-font 7 7 SF
258 402 M
( count\) {) s
18.6 394 M (17:) s
35.4 394 M
(    System.out.println\() s
/Courier-Bold 7 7 SUF
132 394 M
("using BitSet: ") s
/F-gs-font 7 7 SF
199.2 394 M
(\);) s
18.6 386 M (18:) s
18.6 378 M (19:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(int) s
/F-gs-font 7 7 SF
64.8 378 M
( missingCount = count - arr.length;) s
18.6 370 M (20:) s
35.4 370 M
(    BitSet bitSet = ) s
/Courier-Bold 7 7 SUF
119.4 370 M
(new) s
/F-gs-font 7 7 SF
132 370 M
( BitSet\(count\);) s
18.6 362 M (21:) s
18.6 354 M (22:) s
35.4 354 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 354 M
(for) s
/F-gs-font 7 7 SF
64.8 354 M
(\() s
/Courier-Bold 7 7 SUF
69 354 M
(int) s
/F-gs-font 7 7 SF
81.6 354 M
( number : arr\)) s
18.6 346 M (23:) s
35.4 346 M
(      bitSet.set\(number - 1\);) s
18.6 338 M (24:) s
18.6 330 M (25:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(int) s
/F-gs-font 7 7 SF
64.8 330 M
( lastMissingIndex = 0;) s
18.6 322 M (26:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(for) s
/F-gs-font 7 7 SF
64.8 322 M
(\() s
/Courier-Bold 7 7 SUF
69 322 M
(int) s
/F-gs-font 7 7 SF
81.6 322 M
( i = 0; i < missingCount; i++\) {) s
18.6 314 M (27:) s
35.4 314 M
(      lastMissingIndex = bitSet.nextClearBit\(lastMissingIndex\);) s
18.6 306 M (28:) s
35.4 306 M
(      System.out.println\(++lastMissingIndex\);) s
18.6 298 M (29:) s
35.4 298 M
(    }) s
18.6 290 M (30:) s
18.6 282 M (31:) s
35.4 282 M
(    System.out.println\(\);) s
18.6 274 M (32:) s
35.4 274 M
(  }) s
18.6 266 M (33:) s
18.6 258 M (34:) s
35.4 258 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 258 M
(// using bit manipulation) s
/F-gs-font 7 7 SF
18.6 250 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ) s
/Courier-Bold 7 7 SUF
73.2 250 M
(static) s
/F-gs-font 7 7 SF
98.4 250 M
( ) s
/Courier-Bold 7 7 SUF
102.6 250 M
(void) s
/F-gs-font 7 7 SF
119.4 250 M
( findMissingNumber1\() s
/Courier-Bold 7 7 SUF
203.4 250 M
(int) s
/F-gs-font 7 7 SF
216 250 M
([] arr, ) s
/Courier-Bold 7 7 SUF
249.6 250 M
(int) s
/F-gs-font 7 7 SF
262.2 250 M
( count\) {) s
18.6 242 M (36:) s
35.4 242 M
(    System.out.println\() s
/Courier-Bold 7 7 SUF
132 242 M
("using bit manipulation: ") s
/F-gs-font 7 7 SF
241.2 242 M
(\);) s
18.6 234 M (37:) s
18.6 226 M (38:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(int) s
/F-gs-font 7 7 SF
64.8 226 M
( cache = 0;) s
18.6 218 M (39:) s
18.6 210 M (40:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( number : arr\) {) s
18.6 202 M (41:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(int) s
/F-gs-font 7 7 SF
73.2 202 M
( power = \() s
/Courier-Bold 7 7 SUF
115.2 202 M
(int) s
/F-gs-font 7 7 SF
127.8 202 M
(\) Math.pow\(2, number - 1\);) s
18.6 194 M (42:) s
35.4 194 M
(      cache = cache | power;) s
18.6 186 M (43:) s
35.4 186 M
(    }) s
18.6 178 M (44:) s
18.6 170 M (45:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(for) s
/F-gs-font 7 7 SF
64.8 170 M
(\() s
/Courier-Bold 7 7 SUF
69 170 M
(int) s
/F-gs-font 7 7 SF
81.6 170 M
( i = 0; i < count; i++\) {) s
18.6 162 M (46:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(if) s
/F-gs-font 7 7 SF
69 162 M
(\(\(cache & 1\) == 0\) System.out.println\(i + 1\);) s
18.6 154 M (47:) s
35.4 154 M
(      cache = cache >> 1;) s
18.6 146 M (48:) s
35.4 146 M
(    }) s
18.6 138 M (49:) s
18.6 130 M (50:) s
35.4 130 M
(    System.out.println\(\);) s
18.6 122 M (51:) s
35.4 122 M
(  }) s
18.6 114 M (52:) s
18.6 106 M (53:) s
35.4 106 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 106 M
(// using regular array of booleans) s
/F-gs-font 7 7 SF
18.6 98 M (54:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 98 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 98 M
(public) s
/F-gs-font 7 7 SF
69 98 M
( ) s
/Courier-Bold 7 7 SUF
73.2 98 M
(static) s
/F-gs-font 7 7 SF
98.4 98 M
( ) s
/Courier-Bold 7 7 SUF
102.6 98 M
(void) s
/F-gs-font 7 7 SF
119.4 98 M
( findMissingNumber2\() s
/Courier-Bold 7 7 SUF
203.4 98 M
(int) s
/F-gs-font 7 7 SF
216 98 M
([] arr, ) s
/Courier-Bold 7 7 SUF
249.6 98 M
(int) s
/F-gs-font 7 7 SF
262.2 98 M
( count\) {) s
18.6 90 M (55:) s
35.4 90 M
(    System.out.println\() s
/Courier-Bold 7 7 SUF
132 90 M
("using array of booleans: ") s
/F-gs-font 7 7 SF
245.4 90 M
(\);) s
18.6 82 M (56:) s
18.6 74 M (57:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(boolean) s
/F-gs-font 7 7 SF
81.6 74 M
([] cache = ) s
/Courier-Bold 7 7 SUF
127.8 74 M
(new) s
/F-gs-font 7 7 SF
140.4 74 M
( ) s
/Courier-Bold 7 7 SUF
144.6 74 M
(boolean) s
/F-gs-font 7 7 SF
174 74 M
([count];) s
18.6 66 M (58:) s
18.6 58 M (59:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(for) s
/F-gs-font 7 7 SF
64.8 58 M
(\() s
/Courier-Bold 7 7 SUF
69 58 M
(int) s
/F-gs-font 7 7 SF
81.6 58 M
( number : arr\)) s
18.6 50 M (60:) s
35.4 50 M
(      cache[number - 1] = ) s
/Courier-Bold 7 7 SUF
144.6 50 M
(true) s
/F-gs-font 7 7 SF
161.4 50 M
(;) s
18.6 42 M (61:) s
18.6 34 M (62:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(for) s
/F-gs-font 7 7 SF
64.8 34 M
(\() s
/Courier-Bold 7 7 SUF
69 34 M
(int) s
/F-gs-font 7 7 SF
81.6 34 M
( i = 0; i < cache.length; i++\) {) s
18.6 26 M (63:) s
35.4 26 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 26 M
(if) s
/F-gs-font 7 7 SF
69 26 M
(\(!cache[i]\) System.out.println\(i + 1\);) s
18.6 18 M (64:) s
35.4 18 M
(    }) s
18.6 10 M (65:) s
18.6 2 M (66:) s
35.4 2 M
(    System.out.println\(\);) s
415.6 522 M (67:) s
432.4 522 M
(  }) s
415.6 514 M (68:) s
415.6 506 M (69:) s
432.4 506 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 506 M
(// half in-place and half new array - space complexity: O\(missingCount\)) s
/F-gs-font 7 7 SF
415.6 498 M (70:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 498 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 498 M
(public) s
/F-gs-font 7 7 SF
466 498 M
( ) s
/Courier-Bold 7 7 SUF
470.2 498 M
(static) s
/F-gs-font 7 7 SF
495.4 498 M
( ) s
/Courier-Bold 7 7 SUF
499.6 498 M
(void) s
/F-gs-font 7 7 SF
516.4 498 M
( findMissingNumber3\() s
/Courier-Bold 7 7 SUF
600.4 498 M
(int) s
/F-gs-font 7 7 SF
613 498 M
([] arr, ) s
/Courier-Bold 7 7 SUF
646.6 498 M
(int) s
/F-gs-font 7 7 SF
659.2 498 M
( count\) {) s
415.6 490 M (71:) s
432.4 490 M
(    System.out.println\() s
/Courier-Bold 7 7 SUF
529 490 M
("using space-optimized array of boolean: ") s
/F-gs-font 7 7 SF
705.4 490 M
(\);) s
415.6 482 M (72:) s
415.6 474 M (73:) s
432.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(int) s
/F-gs-font 7 7 SF
461.8 474 M
( missingCount = count - arr.length;) s
415.6 466 M (74:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(boolean) s
/F-gs-font 7 7 SF
478.6 466 M
([] cache = ) s
/Courier-Bold 7 7 SUF
524.8 466 M
(new) s
/F-gs-font 7 7 SF
537.4 466 M
( ) s
/Courier-Bold 7 7 SUF
541.6 466 M
(boolean) s
/F-gs-font 7 7 SF
571 466 M
([missingCount];) s
415.6 458 M (75:) s
415.6 450 M (76:) s
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(for) s
/F-gs-font 7 7 SF
461.8 450 M
(\() s
/Courier-Bold 7 7 SUF
466 450 M
(int) s
/F-gs-font 7 7 SF
478.6 450 M
( number : arr\) {) s
415.6 442 M (77:) s
432.4 442 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 442 M
(if) s
/F-gs-font 7 7 SF
466 442 M
(\(\(Math.abs\(number\) - 1\) >= arr.length\) {) s
415.6 434 M (78:) s
432.4 434 M
(        cache[Math.abs\(number\) - 1 - arr.length] = ) s
/Courier-Bold 7 7 SUF
646.6 434 M
(true) s
/F-gs-font 7 7 SF
663.4 434 M
(;) s
415.6 426 M (79:) s
432.4 426 M
(      } ) s
/Courier-Bold 7 7 SUF
466 426 M
(else) s
/F-gs-font 7 7 SF
482.8 426 M
( {) s
415.6 418 M (80:) s
432.4 418 M
(        arr[Math.abs\(number\) - 1] *= -1;) s
415.6 410 M (81:) s
432.4 410 M
(      }) s
415.6 402 M (82:) s
432.4 402 M
(    }) s
415.6 394 M (83:) s
415.6 386 M (84:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(for) s
/F-gs-font 7 7 SF
461.8 386 M
(\() s
/Courier-Bold 7 7 SUF
466 386 M
(int) s
/F-gs-font 7 7 SF
478.6 386 M
( i = 0; i < arr.length; i++\)) s
415.6 378 M (85:) s
432.4 378 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 378 M
(if) s
/F-gs-font 7 7 SF
466 378 M
(\(arr[i] > 0\) System.out.println\(i + 1\);) s
415.6 370 M (86:) s
415.6 362 M (87:) s
432.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 362 M
(for) s
/F-gs-font 7 7 SF
461.8 362 M
(\() s
/Courier-Bold 7 7 SUF
466 362 M
(int) s
/F-gs-font 7 7 SF
478.6 362 M
( i = 0; i < cache.length; i++\)) s
415.6 354 M (88:) s
432.4 354 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 354 M
(if) s
/F-gs-font 7 7 SF
466 354 M
(\(!cache[i]\) System.out.println\(arr.length + i + 1\);) s
415.6 346 M (89:) s
415.6 338 M (90:) s
432.4 338 M
(    System.out.println\(\);) s
415.6 330 M (91:) s
432.4 330 M
(  }) s
415.6 322 M (92:) s
432.4 322 M
(}) s
_R
S
%%Page: (1) 99
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/ProductExceptSelf.java) def
/fdir (./arrays) def
/ftail (ProductExceptSelf.java) def
% User defined strings:
/fmodstr (Wed Mar 06 23:17:28 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ProductExceptSelf.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array nums of n integers where n > 1,  return an array output such that o) s
5 490 M
(utput[i] is equal to the product of all the elements of nums except nums[i].) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input:  [1,2,3,4]) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Output: [24,12,8,6]) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Note: Please solve it without division and in O\(n\).) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Could you solve it with constant space complexity? \(The output array does not coun) s
5 410 M
(t as extra space for the purpose of space complexity analysis.\)) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( */) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
18.6 386 M (16:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(class) s
/F-gs-font 7 7 SF
56.4 386 M
( Solution {) s
18.6 378 M (17:) s
35.4 378 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 378 M
(public) s
/F-gs-font 7 7 SF
69 378 M
( ) s
/Courier-Bold 7 7 SUF
73.2 378 M
(int) s
/F-gs-font 7 7 SF
85.8 378 M
([] productExceptSelf\() s
/Courier-Bold 7 7 SUF
174 378 M
(int) s
/F-gs-font 7 7 SF
186.6 378 M
([] nums\) {) s
18.6 370 M (18:) s
35.4 370 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 370 M
(int) s
/F-gs-font 7 7 SF
64.8 370 M
([][] cache = ) s
/Courier-Bold 7 7 SUF
119.4 370 M
(new) s
/F-gs-font 7 7 SF
132 370 M
( ) s
/Courier-Bold 7 7 SUF
136.2 370 M
(int) s
/F-gs-font 7 7 SF
148.8 370 M
([2][nums.length];) s
18.6 362 M (19:) s
18.6 354 M (20:) s
35.4 354 M
(    cache[0][0] = nums[0];) s
18.6 346 M (21:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(for) s
/F-gs-font 7 7 SF
64.8 346 M
(\() s
/Courier-Bold 7 7 SUF
69 346 M
(int) s
/F-gs-font 7 7 SF
81.6 346 M
( i = 1; i < nums.length; i++\)) s
18.6 338 M (22:) s
35.4 338 M
(      cache[0][i] = cache[0][i - 1] * nums[i];) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(    cache[1][nums.length - 1] = nums[nums.length - 1];) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(for) s
/F-gs-font 7 7 SF
64.8 314 M
(\() s
/Courier-Bold 7 7 SUF
69 314 M
(int) s
/F-gs-font 7 7 SF
81.6 314 M
( i = nums.length - 2; i >= 0; i--\)) s
18.6 306 M (26:) s
35.4 306 M
(      cache[1][i] = cache[1][i + 1] * nums[i];) s
18.6 298 M (27:) s
18.6 290 M (28:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(for) s
/F-gs-font 7 7 SF
64.8 290 M
(\() s
/Courier-Bold 7 7 SUF
69 290 M
(int) s
/F-gs-font 7 7 SF
81.6 290 M
( i = 0; i < nums.length; i++\) {) s
18.6 282 M (29:) s
35.4 282 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 282 M
(int) s
/F-gs-font 7 7 SF
73.2 282 M
( left = i - 1 < 0 ? 1 : cache[0][i - 1];) s
18.6 274 M (30:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(int) s
/F-gs-font 7 7 SF
73.2 274 M
( right = i + 1 >= nums.length ? 1 : cache[1][i + 1];) s
18.6 266 M (31:) s
18.6 258 M (32:) s
35.4 258 M
(      nums[i] = left * right;) s
18.6 250 M (33:) s
35.4 250 M
(    }) s
18.6 242 M (34:) s
18.6 234 M (35:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(return) s
/F-gs-font 7 7 SF
77.4 234 M
( nums;) s
18.6 226 M (36:) s
35.4 226 M
(  }) s
18.6 218 M (37:) s
35.4 218 M
(}) s
_R
S
%%Page: (1) 100
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/IntersectionOfTwoArrays.java) def
/fdir (./arrays) def
/ftail (IntersectionOfTwoArrays.java) def
% User defined strings:
/fmodstr (Sat Dec 15 23:16:15 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (IntersectionOfTwoArrays.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given two arrays, write a function to compute their intersection.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 474 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Input: nums1 = [1,2,2,1], nums2 = [2,2]) s
/F-gs-font 7 7 SF
22.8 458 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Output: [2,2]) s
/F-gs-font 7 7 SF
18.6 450 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 442 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]) s
/F-gs-font 7 7 SF
18.6 426 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: [4,9]) s
/F-gs-font 7 7 SF
18.6 418 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 410 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Each element in the result should appear as many times as it shows in both arrays.) s
/F-gs-font 7 7 SF
18.6 394 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  The result can be in any order.) s
/F-gs-font 7 7 SF
18.6 386 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( */) s
/F-gs-font 7 7 SF
18.6 378 M (19:) s
18.6 370 M (20:) s
/Courier-Bold 7 7 SUF
35.4 370 M
(class) s
/F-gs-font 7 7 SF
56.4 370 M
( IntersectionOfTwoArrays {) s
18.6 362 M (21:) s
35.4 362 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 362 M
(// time-complexity: O\(2n\)) s
/F-gs-font 7 7 SF
18.6 354 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// space-complexity: O\(2n\)) s
/F-gs-font 7 7 SF
18.6 346 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 346 M
(// fun-fact: this takes longer than the O\(n log n\) implementation below) s
/F-gs-font 7 7 SF
18.6 338 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( ) s
/Courier-Bold 7 7 SUF
73.2 338 M
(int) s
/F-gs-font 7 7 SF
85.8 338 M
([] intersect\() s
/Courier-Bold 7 7 SUF
140.4 338 M
(int) s
/F-gs-font 7 7 SF
153 338 M
([] nums1, ) s
/Courier-Bold 7 7 SUF
195 338 M
(int) s
/F-gs-font 7 7 SF
207.6 338 M
([] nums2\) {) s
18.6 330 M (25:) s
35.4 330 M
(    HashMap<Integer, Integer> map = ) s
/Courier-Bold 7 7 SUF
186.6 330 M
(new) s
/F-gs-font 7 7 SF
199.2 330 M
( HashMap<>\(\);) s
18.6 322 M (26:) s
35.4 322 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 322 M
(new) s
/F-gs-font 7 7 SF
161.4 322 M
( ArrayList<Integer>\(\);) s
18.6 314 M (27:) s
18.6 306 M (28:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(for) s
/F-gs-font 7 7 SF
64.8 306 M
(\() s
/Courier-Bold 7 7 SUF
69 306 M
(int) s
/F-gs-font 7 7 SF
81.6 306 M
( i = 0; i < nums1.length; i++\)) s
18.6 298 M (29:) s
35.4 298 M
(      map.put\(nums1[i], map.getOrDefault\(nums1[i], 0\) + 1\);) s
18.6 290 M (30:) s
18.6 282 M (31:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(for) s
/F-gs-font 7 7 SF
64.8 282 M
(\() s
/Courier-Bold 7 7 SUF
69 282 M
(int) s
/F-gs-font 7 7 SF
81.6 282 M
( i = 0; i < nums2.length; i++\) {) s
18.6 274 M (32:) s
35.4 274 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 274 M
(int) s
/F-gs-font 7 7 SF
73.2 274 M
( occurrence = map.getOrDefault\(nums2[i], 0\);) s
18.6 266 M (33:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(if) s
/F-gs-font 7 7 SF
69 266 M
(\(occurrence > 0\) {) s
18.6 258 M (34:) s
35.4 258 M
(        result.add\(nums2[i]\);) s
18.6 250 M (35:) s
35.4 250 M
(        map.put\(nums2[i], occurrence - 1\);) s
18.6 242 M (36:) s
35.4 242 M
(      }) s
18.6 234 M (37:) s
35.4 234 M
(    }) s
18.6 226 M (38:) s
18.6 218 M (39:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
([] result_arr = ) s
/Courier-Bold 7 7 SUF
132 218 M
(new) s
/F-gs-font 7 7 SF
144.6 218 M
( ) s
/Courier-Bold 7 7 SUF
148.8 218 M
(int) s
/F-gs-font 7 7 SF
161.4 218 M
([result.size\(\)];) s
18.6 210 M (40:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( i = 0; i < result.size\(\); i++\)) s
18.6 202 M (41:) s
35.4 202 M
(      result_arr[i] = result.get\(i\);) s
18.6 194 M (42:) s
18.6 186 M (43:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(return) s
/F-gs-font 7 7 SF
77.4 186 M
( result_arr;) s
18.6 178 M (44:) s
35.4 178 M
(  }) s
18.6 170 M (45:) s
18.6 162 M (46:) s
35.4 162 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 162 M
(// time-complexity: O\(n log n\)) s
/F-gs-font 7 7 SF
18.6 154 M (47:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 154 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 154 M
(// space-complexity: O\(n\)) s
/F-gs-font 7 7 SF
18.6 146 M (48:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( ) s
/Courier-Bold 7 7 SUF
73.2 146 M
(int) s
/F-gs-font 7 7 SF
85.8 146 M
([] intersect\() s
/Courier-Bold 7 7 SUF
140.4 146 M
(int) s
/F-gs-font 7 7 SF
153 146 M
([] nums1, ) s
/Courier-Bold 7 7 SUF
195 146 M
(int) s
/F-gs-font 7 7 SF
207.6 146 M
([] nums2\) {) s
18.6 138 M (49:) s
35.4 138 M
(    Arrays.sort\(nums1\);) s
18.6 130 M (50:) s
35.4 130 M
(    Arrays.sort\(nums2\);) s
18.6 122 M (51:) s
18.6 114 M (52:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(int) s
/F-gs-font 7 7 SF
64.8 114 M
( index1 = 0;) s
18.6 106 M (53:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(int) s
/F-gs-font 7 7 SF
64.8 106 M
( index2 = 0;) s
18.6 98 M (54:) s
18.6 90 M (55:) s
35.4 90 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 90 M
(new) s
/F-gs-font 7 7 SF
161.4 90 M
( ArrayList<>\(\);) s
18.6 82 M (56:) s
18.6 74 M (57:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(while) s
/F-gs-font 7 7 SF
73.2 74 M
(\(index1 < nums1.length && index2 < nums2.length\) {) s
18.6 66 M (58:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(if) s
/F-gs-font 7 7 SF
69 66 M
(\(nums1[index1] == nums2[index2]\) {) s
18.6 58 M (59:) s
35.4 58 M
(        result.add\(nums1[index1]\);) s
18.6 50 M (60:) s
35.4 50 M
(        index1++;) s
18.6 42 M (61:) s
35.4 42 M
(        index2++;) s
18.6 34 M (62:) s
35.4 34 M
(      } ) s
/Courier-Bold 7 7 SUF
69 34 M
(else) s
/F-gs-font 7 7 SF
85.8 34 M
( {) s
18.6 26 M (63:) s
35.4 26 M
(        ) s
/Courier-Bold 7 7 SUF
69 26 M
(if) s
/F-gs-font 7 7 SF
77.4 26 M
(\(nums1[index1] > nums2[index2]\)) s
18.6 18 M (64:) s
35.4 18 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 18 M
(while) s
/F-gs-font 7 7 SF
98.4 18 M
(\(index2 < nums2.length && nums1[index1] > nums2[index2]\) index2++;) s
18.6 10 M (65:) s
35.4 10 M
(        ) s
/Courier-Bold 7 7 SUF
69 10 M
(else) s
/F-gs-font 7 7 SF
18.6 2 M (66:) s
35.4 2 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 2 M
(while) s
/F-gs-font 7 7 SF
98.4 2 M
(\(index1 < nums1.length && nums1[index1] < nums2[index2]\) index1++;) s
415.6 522 M (67:) s
432.4 522 M
(      }) s
415.6 514 M (68:) s
432.4 514 M
(    }) s
415.6 506 M (69:) s
415.6 498 M (70:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(int) s
/F-gs-font 7 7 SF
461.8 498 M
([] result_arr = ) s
/Courier-Bold 7 7 SUF
529 498 M
(new) s
/F-gs-font 7 7 SF
541.6 498 M
( ) s
/Courier-Bold 7 7 SUF
545.8 498 M
(int) s
/F-gs-font 7 7 SF
558.4 498 M
([result.size\(\)];) s
415.6 490 M (71:) s
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(for) s
/F-gs-font 7 7 SF
461.8 490 M
(\() s
/Courier-Bold 7 7 SUF
466 490 M
(int) s
/F-gs-font 7 7 SF
478.6 490 M
( i = 0; i < result.size\(\); i++\)) s
415.6 482 M (72:) s
432.4 482 M
(      result_arr[i] = result.get\(i\);) s
415.6 474 M (73:) s
415.6 466 M (74:) s
432.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 466 M
(return) s
/F-gs-font 7 7 SF
474.4 466 M
( result_arr;) s
415.6 458 M (75:) s
432.4 458 M
(  }) s
415.6 450 M (76:) s
432.4 450 M
(}) s
_R
S
%%Page: (1) 101
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./arrays/FindDuplicateNumber.java) def
/fdir (./arrays) def
/ftail (FindDuplicateNumber.java) def
% User defined strings:
/fmodstr (Sun Dec 02 00:08:26 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindDuplicateNumber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Bold 7 7 SUF
35.4 522 M
(import) s
/F-gs-font 7 7 SF
60.6 522 M
( java.util.*;) s
22.8 514 M (2:) s
22.8 506 M (3:) s
/Courier-Bold 7 7 SUF
35.4 506 M
(class) s
/F-gs-font 7 7 SF
56.4 506 M
( FindDuplicateNumber {) s
22.8 498 M (4:) s
35.4 498 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 498 M
(public) s
/F-gs-font 7 7 SF
69 498 M
( ) s
/Courier-Bold 7 7 SUF
73.2 498 M
(static) s
/F-gs-font 7 7 SF
98.4 498 M
( ) s
/Courier-Bold 7 7 SUF
102.6 498 M
(void) s
/F-gs-font 7 7 SF
119.4 498 M
( main\(String[] args\) {) s
22.8 490 M (5:) s
35.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 490 M
(int) s
/F-gs-font 7 7 SF
64.8 490 M
([][] test = ) s
/Courier-Bold 7 7 SUF
115.2 490 M
(new) s
/F-gs-font 7 7 SF
127.8 490 M
( ) s
/Courier-Bold 7 7 SUF
132 490 M
(int) s
/F-gs-font 7 7 SF
144.6 490 M
([][] {) s
22.8 482 M (6:) s
35.4 482 M
(      {1, 1, 2, 2, 3, 4, 5},) s
22.8 474 M (7:) s
35.4 474 M
(      {1, 1, 1, 1, 1, 1, 1},) s
22.8 466 M (8:) s
35.4 466 M
(      {1, 2, 3, 4, 5, 6, 7},) s
22.8 458 M (9:) s
35.4 458 M
(      {1, 2, 1, 1, 1, 1, 1},) s
18.6 450 M (10:) s
35.4 450 M
(    };) s
18.6 442 M (11:) s
18.6 434 M (12:) s
35.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 434 M
(for) s
/F-gs-font 7 7 SF
64.8 434 M
( \() s
/Courier-Bold 7 7 SUF
73.2 434 M
(int) s
/F-gs-font 7 7 SF
85.8 434 M
([] input : test\) {) s
18.6 426 M (13:) s
35.4 426 M
(      System.out.println\() s
/Courier-Bold 7 7 SUF
140.4 426 M
("Array with Duplicates\\t\\t: ") s
/F-gs-font 7 7 SF
262.2 426 M
( + Arrays.toString\(input\)\);) s
18.6 418 M (14:) s
35.4 418 M
(      System.out.println\() s
/Courier-Bold 7 7 SUF
140.4 418 M
("After removing duplicates\\t: ") s
/F-gs-font 7 7 SF
270.6 418 M
( + Arrays.toString\(removeDup) s
5 410 M
(licates\(input\)\)\);) s
18.6 402 M (15:) s
35.4 402 M
(      System.out.println\() s
/Courier-Bold 7 7 SUF
140.4 402 M
("After removing duplicates 2\\t: ") s
/F-gs-font 7 7 SF
279 402 M
( + Arrays.toString\(removeD) s
5 394 M
(uplicates\(input\)\)\);) s
18.6 386 M (16:) s
35.4 386 M
(    }) s
18.6 378 M (17:) s
35.4 378 M
(  }) s
18.6 370 M (18:) s
18.6 362 M (19:) s
35.4 362 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 362 M
(// sort and do logic in-place) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(public) s
/F-gs-font 7 7 SF
69 354 M
( ) s
/Courier-Bold 7 7 SUF
73.2 354 M
(static) s
/F-gs-font 7 7 SF
98.4 354 M
( ) s
/Courier-Bold 7 7 SUF
102.6 354 M
(int) s
/F-gs-font 7 7 SF
115.2 354 M
([] removeDuplicates\() s
/Courier-Bold 7 7 SUF
199.2 354 M
(int) s
/F-gs-font 7 7 SF
211.8 354 M
([] arr\) {) s
18.6 346 M (21:) s
35.4 346 M
(    Arrays.sort\(arr\);) s
18.6 338 M (22:) s
18.6 330 M (23:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(int) s
/F-gs-font 7 7 SF
64.8 330 M
([] result = ) s
/Courier-Bold 7 7 SUF
115.2 330 M
(new) s
/F-gs-font 7 7 SF
127.8 330 M
( ) s
/Courier-Bold 7 7 SUF
132 330 M
(int) s
/F-gs-font 7 7 SF
144.6 330 M
([arr.length];) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
( previous = arr[0];) s
18.6 314 M (25:) s
35.4 314 M
(    result[0] = previous;) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 1; i < arr.length; i++\) {) s
18.6 290 M (28:) s
35.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 290 M
(if) s
/F-gs-font 7 7 SF
69 290 M
(\(arr[i] == previous\) {) s
18.6 282 M (29:) s
35.4 282 M
(        result[i] = 0;) s
18.6 274 M (30:) s
35.4 274 M
(      } ) s
/Courier-Bold 7 7 SUF
69 274 M
(else) s
/F-gs-font 7 7 SF
85.8 274 M
( {) s
18.6 266 M (31:) s
35.4 266 M
(        previous = arr[i];) s
18.6 258 M (32:) s
35.4 258 M
(        result[i] = previous;) s
18.6 250 M (33:) s
35.4 250 M
(      }) s
18.6 242 M (34:) s
35.4 242 M
(    }) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( result;) s
18.6 218 M (37:) s
35.4 218 M
(  }) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 202 M
(// avoid sorting) s
/F-gs-font 7 7 SF
18.6 194 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 194 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 194 M
(public) s
/F-gs-font 7 7 SF
69 194 M
( ) s
/Courier-Bold 7 7 SUF
73.2 194 M
(static) s
/F-gs-font 7 7 SF
98.4 194 M
( ) s
/Courier-Bold 7 7 SUF
102.6 194 M
(int) s
/F-gs-font 7 7 SF
115.2 194 M
([] removeDuplicates2\() s
/Courier-Bold 7 7 SUF
203.4 194 M
(int) s
/F-gs-font 7 7 SF
216 194 M
([] arr\) {) s
18.6 186 M (41:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
([] cache = ) s
/Courier-Bold 7 7 SUF
111 186 M
(new) s
/F-gs-font 7 7 SF
123.6 186 M
( ) s
/Courier-Bold 7 7 SUF
127.8 186 M
(int) s
/F-gs-font 7 7 SF
140.4 186 M
([arr.length];) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(int) s
/F-gs-font 7 7 SF
64.8 178 M
([] result = ) s
/Courier-Bold 7 7 SUF
115.2 178 M
(new) s
/F-gs-font 7 7 SF
127.8 178 M
( ) s
/Courier-Bold 7 7 SUF
132 178 M
(int) s
/F-gs-font 7 7 SF
144.6 178 M
([arr.length];) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(for) s
/F-gs-font 7 7 SF
64.8 162 M
(\() s
/Courier-Bold 7 7 SUF
69 162 M
(int) s
/F-gs-font 7 7 SF
81.6 162 M
( number : arr\)) s
18.6 154 M (45:) s
35.4 154 M
(      cache[number - 1] += 1;) s
18.6 146 M (46:) s
18.6 138 M (47:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(int) s
/F-gs-font 7 7 SF
64.8 138 M
( currentIndex = 0;) s
18.6 130 M (48:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(for) s
/F-gs-font 7 7 SF
64.8 130 M
(\() s
/Courier-Bold 7 7 SUF
69 130 M
(int) s
/F-gs-font 7 7 SF
81.6 130 M
( i = 0; i < cache.length; i++\) {) s
18.6 122 M (49:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(if) s
/F-gs-font 7 7 SF
69 122 M
(\(cache[i] > 0\) {) s
18.6 114 M (50:) s
35.4 114 M
(        result[currentIndex] = i + 1;) s
18.6 106 M (51:) s
35.4 106 M
(        currentIndex += cache[i];) s
18.6 98 M (52:) s
35.4 98 M
(      }) s
18.6 90 M (53:) s
35.4 90 M
(    }) s
18.6 82 M (54:) s
18.6 74 M (55:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(return) s
/F-gs-font 7 7 SF
77.4 74 M
( result;) s
18.6 66 M (56:) s
35.4 66 M
(  }) s
18.6 58 M (57:) s
35.4 58 M
(}) s
_R
S
%%Page: (1) 102
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/MaximalSquare.java) def
/fdir (./dp) def
/ftail (MaximalSquare.java) def
% User defined strings:
/fmodstr (Tue Jan 22 14:23:48 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MaximalSquare.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a 2D binary matrix filled with 0's and 1's, find the largest square containi) s
5 490 M
(ng only 1's and return its area.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Input: ) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  1 0 1 0 0) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  1 0 1 1 1) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  1 1 1 1 1) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  1 0 0 1 0) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
18.6 378 M (18:) s
/Courier-Bold 7 7 SUF
35.4 378 M
(class) s
/F-gs-font 7 7 SF
56.4 378 M
( Solution {) s
18.6 370 M (19:) s
35.4 370 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 370 M
(public) s
/F-gs-font 7 7 SF
69 370 M
( ) s
/Courier-Bold 7 7 SUF
73.2 370 M
(int) s
/F-gs-font 7 7 SF
85.8 370 M
( maximalSquare\() s
/Courier-Bold 7 7 SUF
148.8 370 M
(int) s
/F-gs-font 7 7 SF
161.4 370 M
([][] matrix\) {) s
18.6 362 M (20:) s
35.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 362 M
(if) s
/F-gs-font 7 7 SF
60.6 362 M
(\(matrix.length == 0 || matrix[0].length == 0\) ) s
/Courier-Bold 7 7 SUF
253.8 362 M
(return) s
/F-gs-font 7 7 SF
279 362 M
( 0;) s
18.6 354 M (21:) s
18.6 346 M (22:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(int) s
/F-gs-font 7 7 SF
64.8 346 M
( max = matrix[0][0];) s
18.6 338 M (23:) s
18.6 330 M (24:) s
35.4 330 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 330 M
(// first row) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(if) s
/F-gs-font 7 7 SF
60.6 322 M
(\(max == 0\) {) s
18.6 314 M (26:) s
35.4 314 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 314 M
(for) s
/F-gs-font 7 7 SF
73.2 314 M
(\() s
/Courier-Bold 7 7 SUF
77.4 314 M
(int) s
/F-gs-font 7 7 SF
90 314 M
( i = 1; i < matrix[0].length; i++\) {) s
18.6 306 M (27:) s
35.4 306 M
(        ) s
/Courier-Bold 7 7 SUF
69 306 M
(if) s
/F-gs-font 7 7 SF
77.4 306 M
(\(matrix[0][i] == 1\) {) s
18.6 298 M (28:) s
35.4 298 M
(          max = matrix[0][i];) s
18.6 290 M (29:) s
35.4 290 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 290 M
(break) s
/F-gs-font 7 7 SF
98.4 290 M
(;) s
18.6 282 M (30:) s
35.4 282 M
(        }) s
18.6 274 M (31:) s
35.4 274 M
(      }) s
18.6 266 M (32:) s
35.4 266 M
(    }) s
18.6 258 M (33:) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 250 M
(// first col) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(max == 0\) {) s
18.6 234 M (36:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(for) s
/F-gs-font 7 7 SF
73.2 234 M
(\() s
/Courier-Bold 7 7 SUF
77.4 234 M
(int) s
/F-gs-font 7 7 SF
90 234 M
( i = 1; i < matrix[0].length; i++\) {) s
18.6 226 M (37:) s
35.4 226 M
(        ) s
/Courier-Bold 7 7 SUF
69 226 M
(if) s
/F-gs-font 7 7 SF
77.4 226 M
(\(matrix[i][0] == 1\) {) s
18.6 218 M (38:) s
35.4 218 M
(          max = matrix[i][0];) s
18.6 210 M (39:) s
35.4 210 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 210 M
(break) s
/F-gs-font 7 7 SF
98.4 210 M
(;) s
18.6 202 M (40:) s
35.4 202 M
(        }) s
18.6 194 M (41:) s
35.4 194 M
(      }) s
18.6 186 M (42:) s
35.4 186 M
(    }) s
18.6 178 M (43:) s
18.6 170 M (44:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(for) s
/F-gs-font 7 7 SF
64.8 170 M
(\() s
/Courier-Bold 7 7 SUF
69 170 M
(int) s
/F-gs-font 7 7 SF
81.6 170 M
( i = 1; i < matrix.length; i++\) {) s
18.6 162 M (45:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(for) s
/F-gs-font 7 7 SF
73.2 162 M
(\() s
/Courier-Bold 7 7 SUF
77.4 162 M
(int) s
/F-gs-font 7 7 SF
90 162 M
( j = 1; j < matrix[0].length; j++\) {) s
18.6 154 M (46:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(if) s
/F-gs-font 7 7 SF
77.4 154 M
(\(matrix[i][j] == 1\) {) s
18.6 146 M (47:) s
35.4 146 M
(          matrix[i][j] = Math.min\(Math.min\(matrix[i-1][j-1], matrix[i-1][j]\), matrix) s
5 138 M
([i][j-1]\) + 1;) s
18.6 130 M (48:) s
35.4 130 M
(          max = Math.max\(max, matrix[i][j]\);) s
18.6 122 M (49:) s
35.4 122 M
(        }) s
18.6 114 M (50:) s
35.4 114 M
(      }) s
18.6 106 M (51:) s
35.4 106 M
(    }) s
18.6 98 M (52:) s
18.6 90 M (53:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( max * max;) s
18.6 82 M (54:) s
35.4 82 M
(  }) s
18.6 74 M (55:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 103
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/UniquePaths.java) def
/fdir (./dp) def
/ftail (UniquePaths.java) def
% User defined strings:
/fmodstr (Tue Dec 11 16:26:56 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniquePaths.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 0 ms, faster than 100.00% of Java online submissions for Unique Pat) s
5 498 M
(hs.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        A robot is located at the top-left corner of a m x n grid \(marked 'Start' in) s
5 474 M
( the diagram below\).) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        The robot can only move either down or right at any point in time. The robot) s
5 450 M
( is trying to reach the bottom-right corner of the grid \(marked 'Finish' in the diagram belo) s
5 442 M
(w\).) s
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(        How many possible unique paths are there?) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(        Above is a 7 x 3 grid. How many possible unique paths are there?) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(        Note: m and n will be at most 100.) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(        Example 1:) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(        Input: m = 3, n = 2) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(        Output: 3) s
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(        Explanation:) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(        From the top-left corner, there are a total of 3 ways to reach the bottom-ri) s
5 322 M
(ght corner:) s
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(        1. Right -> Right -> Down) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(        2. Right -> Down -> Right) s
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(        3. Down -> Right -> Right) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(        Example 2:) s
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(        Input: m = 7, n = 3) s
/F-gs-font 7 7 SF
18.6 266 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(        Output: 28) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( */) s
/F-gs-font 7 7 SF
18.6 250 M (30:) s
18.6 242 M (31:) s
/Courier-Bold 7 7 SUF
35.4 242 M
(class) s
/F-gs-font 7 7 SF
56.4 242 M
( UniquePaths {) s
18.6 234 M (32:) s
35.4 234 M
(        ) s
/Courier-Oblique 7 7 SUF
69 234 M
(// DP) s
/F-gs-font 7 7 SF
18.6 226 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(int) s
/F-gs-font 7 7 SF
85.8 226 M
( uniquePaths\() s
/Courier-Bold 7 7 SUF
140.4 226 M
(int) s
/F-gs-font 7 7 SF
153 226 M
( m, ) s
/Courier-Bold 7 7 SUF
169.8 226 M
(int) s
/F-gs-font 7 7 SF
182.4 226 M
( n\) {) s
18.6 218 M (34:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(if) s
/F-gs-font 7 7 SF
60.6 218 M
(\(m == 1 || n == 1\) ) s
/Courier-Bold 7 7 SUF
140.4 218 M
(return) s
/F-gs-font 7 7 SF
165.6 218 M
( 1;) s
18.6 210 M (35:) s
18.6 202 M (36:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
([][] grid = ) s
/Courier-Bold 7 7 SUF
115.2 202 M
(new) s
/F-gs-font 7 7 SF
127.8 202 M
( ) s
/Courier-Bold 7 7 SUF
132 202 M
(int) s
/F-gs-font 7 7 SF
144.6 202 M
([m][n];) s
18.6 194 M (37:) s
18.6 186 M (38:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(for) s
/F-gs-font 7 7 SF
64.8 186 M
(\() s
/Courier-Bold 7 7 SUF
69 186 M
(int) s
/F-gs-font 7 7 SF
81.6 186 M
( i = 1; i < m; i++\) grid[i][0] = 1;) s
18.6 178 M (39:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( j = 1; j < n; j++\) grid[0][j] = 1;) s
18.6 170 M (40:) s
18.6 162 M (41:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(for) s
/F-gs-font 7 7 SF
64.8 162 M
(\() s
/Courier-Bold 7 7 SUF
69 162 M
(int) s
/F-gs-font 7 7 SF
81.6 162 M
( i = 1; i < m; i++\) {) s
18.6 154 M (42:) s
35.4 154 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 154 M
(for) s
/F-gs-font 7 7 SF
73.2 154 M
(\() s
/Courier-Bold 7 7 SUF
77.4 154 M
(int) s
/F-gs-font 7 7 SF
90 154 M
( j = 1; j < n; j++\) {) s
18.6 146 M (43:) s
35.4 146 M
(        grid[i][j] = grid[i-1][j] + grid[i][j-1];) s
18.6 138 M (44:) s
35.4 138 M
(      }) s
18.6 130 M (45:) s
35.4 130 M
(    }) s
18.6 122 M (46:) s
18.6 114 M (47:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( grid[m-1][n-1];) s
18.6 106 M (48:) s
35.4 106 M
(  }) s
18.6 98 M (49:) s
18.6 90 M (50:) s
35.4 90 M
(        ) s
/Courier-Oblique 7 7 SUF
69 90 M
(// recursive) s
/F-gs-font 7 7 SF
18.6 82 M (51:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 82 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 82 M
(public) s
/F-gs-font 7 7 SF
69 82 M
( ) s
/Courier-Bold 7 7 SUF
73.2 82 M
(int) s
/F-gs-font 7 7 SF
85.8 82 M
( uniquePaths2\() s
/Courier-Bold 7 7 SUF
144.6 82 M
(int) s
/F-gs-font 7 7 SF
157.2 82 M
( m, ) s
/Courier-Bold 7 7 SUF
174 82 M
(int) s
/F-gs-font 7 7 SF
186.6 82 M
( n, ) s
/Courier-Bold 7 7 SUF
203.4 82 M
(int) s
/F-gs-font 7 7 SF
216 82 M
( x, ) s
/Courier-Bold 7 7 SUF
232.8 82 M
(int) s
/F-gs-font 7 7 SF
245.4 82 M
( y, ) s
/Courier-Bold 7 7 SUF
262.2 82 M
(int) s
/F-gs-font 7 7 SF
274.8 82 M
( count\) {) s
18.6 74 M (52:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(if) s
/F-gs-font 7 7 SF
60.6 74 M
(\(x == m-1 && y == n-1\) {) s
18.6 66 M (53:) s
35.4 66 M
(      System.out.println\(path\);) s
18.6 58 M (54:) s
35.4 58 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 58 M
(return) s
/F-gs-font 7 7 SF
85.8 58 M
( 1;) s
18.6 50 M (55:) s
35.4 50 M
(    }) s
18.6 42 M (56:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(else) s
/F-gs-font 7 7 SF
69 42 M
( ) s
/Courier-Bold 7 7 SUF
73.2 42 M
(if) s
/F-gs-font 7 7 SF
81.6 42 M
(\(x >= m || y >= n\) ) s
/Courier-Bold 7 7 SUF
161.4 42 M
(return) s
/F-gs-font 7 7 SF
186.6 42 M
( 0;) s
18.6 34 M (57:) s
18.6 26 M (58:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(return) s
/F-gs-font 7 7 SF
77.4 26 M
( getPaths\(m, n, x+1, y, count\) + getPaths\(m, n, x, y+1, count\);) s
18.6 18 M (59:) s
35.4 18 M
(  }) s
18.6 10 M (60:) s
35.4 10 M
(}) s
_R
S
%%Page: (1) 104
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/MinPathSum.java) def
/fdir (./dp) def
/ftail (MinPathSum.java) def
% User defined strings:
/fmodstr (Thu Jan 17 20:55:43 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MinPathSum.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a m x n grid filled with non-negative numbers, find a path from top left to ) s
5 490 M
(bottom right which minimizes the sum of all numbers along its path.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note: You can only move either down or right at any point in time.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  [) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [1,3,1],) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [1,5,1],) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [4,2,1]) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  ]) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 7) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation: Because the path 1\342\\206\\2223\342\\206\\2221\342\\206\\2221\342\\206\\2221 minimizes ) s
5 378 M
(the sum.) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
18.6 354 M (20:) s
/Courier-Bold 7 7 SUF
35.4 354 M
(class) s
/F-gs-font 7 7 SF
56.4 354 M
( Solution {) s
18.6 346 M (21:) s
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( ) s
/Courier-Bold 7 7 SUF
73.2 346 M
(int) s
/F-gs-font 7 7 SF
85.8 346 M
( minPathSum\() s
/Courier-Bold 7 7 SUF
136.2 346 M
(int) s
/F-gs-font 7 7 SF
148.8 346 M
([][] grid\) {) s
18.6 338 M (22:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(int) s
/F-gs-font 7 7 SF
64.8 338 M
([][] dp = ) s
/Courier-Bold 7 7 SUF
106.8 338 M
(new) s
/F-gs-font 7 7 SF
119.4 338 M
( ) s
/Courier-Bold 7 7 SUF
123.6 338 M
(int) s
/F-gs-font 7 7 SF
136.2 338 M
([grid.length][grid[0].length];) s
18.6 330 M (23:) s
35.4 330 M
(    dp[0][0] = grid[0][0];) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 314 M
(// fill first row) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(for) s
/F-gs-font 7 7 SF
64.8 306 M
(\() s
/Courier-Bold 7 7 SUF
69 306 M
(int) s
/F-gs-font 7 7 SF
81.6 306 M
( i = 1; i < grid[0].length; i++\)) s
18.6 298 M (27:) s
35.4 298 M
(      dp[0][i] = dp[0][i-1] + grid[0][i];) s
18.6 290 M (28:) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 282 M
(// fill first col) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = 1; i < grid.length; i++\)) s
18.6 266 M (31:) s
35.4 266 M
(      dp[i][0] = dp[i-1][0] + grid[i][0];) s
18.6 258 M (32:) s
18.6 250 M (33:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
(\() s
/Courier-Bold 7 7 SUF
69 250 M
(int) s
/F-gs-font 7 7 SF
81.6 250 M
( i = 1; i < grid.length; i++\) {) s
18.6 242 M (34:) s
35.4 242 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 242 M
(for) s
/F-gs-font 7 7 SF
73.2 242 M
(\() s
/Courier-Bold 7 7 SUF
77.4 242 M
(int) s
/F-gs-font 7 7 SF
90 242 M
( j = 1; j < grid[0].length; j++\) {) s
18.6 234 M (35:) s
35.4 234 M
(        dp[i][j] = Math.min\(dp[i-1][j], dp[i][j-1]\) + grid[i][j];) s
18.6 226 M (36:) s
35.4 226 M
(      }) s
18.6 218 M (37:) s
35.4 218 M
(    }) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( dp[dp.length-1][dp[0].length-1];) s
18.6 194 M (40:) s
35.4 194 M
(  }) s
18.6 186 M (41:) s
35.4 186 M
(}) s
_R
S
%%Page: (1) 105
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/Triangle.java) def
/fdir (./dp) def
/ftail (Triangle.java) def
% User defined strings:
/fmodstr (Fri Feb 22 16:44:57 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (Triangle.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a triangle, find the minimum path sum from top to bottom. Each step you may ) s
5 490 M
(move to adjacent numbers on the row below.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example, given the following triangle) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  [) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  [2],) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  [3,4],) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  [6,5,7],) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  [4,1,8,3]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  ]) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  The minimum path sum from top to bottom is 11 \(i.e., 2 + 3 + 5 + 1 = 11\).) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Bonus point if you are able to do this using only O\(n\) extra space, where n is the) s
5 370 M
( total number of rows in the triangle.) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( */) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
18.6 346 M (21:) s
/Courier-Bold 7 7 SUF
35.4 346 M
(class) s
/F-gs-font 7 7 SF
56.4 346 M
( Solution {) s
18.6 338 M (22:) s
35.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 338 M
(public) s
/F-gs-font 7 7 SF
69 338 M
( ) s
/Courier-Bold 7 7 SUF
73.2 338 M
(int) s
/F-gs-font 7 7 SF
85.8 338 M
( minimumTotal\(List<List<Integer>> triangle\) {) s
18.6 330 M (23:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(if) s
/F-gs-font 7 7 SF
60.6 330 M
(\(triangle.size\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
157.2 330 M
(return) s
/F-gs-font 7 7 SF
182.4 330 M
( 0;) s
18.6 322 M (24:) s
18.6 314 M (25:) s
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(int) s
/F-gs-font 7 7 SF
64.8 314 M
([][] dp = ) s
/Courier-Bold 7 7 SUF
106.8 314 M
(new) s
/F-gs-font 7 7 SF
119.4 314 M
( ) s
/Courier-Bold 7 7 SUF
123.6 314 M
(int) s
/F-gs-font 7 7 SF
136.2 314 M
([triangle.size\(\)][triangle.size\(\)];) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 0; i < triangle.get\(dp.length - 1\).size\(\); i++\)) s
18.6 290 M (28:) s
35.4 290 M
(      dp[dp.length - 1][i] = triangle.get\(dp.length - 1\).get\(i\);) s
18.6 282 M (29:) s
18.6 274 M (30:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( row = triangle.size\(\) - 2; row >= 0; row--\) {) s
18.6 266 M (31:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(for) s
/F-gs-font 7 7 SF
73.2 266 M
(\() s
/Courier-Bold 7 7 SUF
77.4 266 M
(int) s
/F-gs-font 7 7 SF
90 266 M
( col = 0; col < triangle.get\(row\).size\(\); col++\) {) s
18.6 258 M (32:) s
35.4 258 M
(        dp[row][col] = Math.min\(dp[row + 1][col], dp[row + 1][col + 1]\) + triangle.g) s
5 250 M
(et\(row\).get\(col\);) s
18.6 242 M (33:) s
35.4 242 M
(      }) s
18.6 234 M (34:) s
35.4 234 M
(    }) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(return) s
/F-gs-font 7 7 SF
77.4 218 M
( dp[0][0];) s
18.6 210 M (37:) s
35.4 210 M
(  }) s
18.6 202 M (38:) s
35.4 202 M
(}) s
_R
S
%%Page: (1) 106
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/RobotAmazon.java) def
/fdir (./dp) def
/ftail (RobotAmazon.java) def
% User defined strings:
/fmodstr (Wed Feb 27 23:12:32 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RobotAmazon.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(// IMPORT LIBRARY PACKAGES NEEDED BY YOUR PROGRAM) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 514 M
(// SOME CLASSES WITHIN A PACKAGE MAY BE RESTRICTED) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 506 M
(// DEFINE ANY CLASS AND METHOD NEEDED import java.util.List; import java.util.Arrays) s
5 498 M
(;) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
35.4 490 M
(// CLASS BEGINS, THIS CLASS IS REQUIRED) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
35.4 482 M
(public) s
/F-gs-font 7 7 SF
60.6 482 M
( ) s
/Courier-Bold 7 7 SUF
64.8 482 M
(class) s
/F-gs-font 7 7 SF
85.8 482 M
( Solution {) s
22.8 474 M (6:) s
35.4 474 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 474 M
(// METHOD SIGNATURE BEGINS, THIS METHOD IS REQUIRED) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 466 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 466 M
(int) s
/F-gs-font 7 7 SF
56.4 466 M
( removeObstacle\() s
/Courier-Bold 7 7 SUF
123.6 466 M
(int) s
/F-gs-font 7 7 SF
136.2 466 M
( numRows, ) s
/Courier-Bold 7 7 SUF
178.2 466 M
(int) s
/F-gs-font 7 7 SF
190.8 466 M
( numColumns, List<List<Integer>> lot\) {) s
22.8 458 M (8:) s
35.4 458 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 458 M
(// WRITE YOUR CODE HERE) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 450 M
(if) s
/F-gs-font 7 7 SF
60.6 450 M
(\(numRows == 0 || numColumns == 0\) ) s
/Courier-Bold 7 7 SUF
203.4 450 M
(return) s
/F-gs-font 7 7 SF
228.6 450 M
( -1;) s
18.6 442 M (10:) s
18.6 434 M (11:) s
35.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 434 M
(int) s
/F-gs-font 7 7 SF
64.8 434 M
([][] grid = ) s
/Courier-Bold 7 7 SUF
115.2 434 M
(new) s
/F-gs-font 7 7 SF
127.8 434 M
( ) s
/Courier-Bold 7 7 SUF
132 434 M
(int) s
/F-gs-font 7 7 SF
144.6 434 M
([numRows][numColumns];) s
18.6 426 M (12:) s
18.6 418 M (13:) s
35.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 418 M
(for) s
/F-gs-font 7 7 SF
64.8 418 M
(\() s
/Courier-Bold 7 7 SUF
69 418 M
(int) s
/F-gs-font 7 7 SF
81.6 418 M
( i = 0; i < numRows; i++\)) s
18.6 410 M (14:) s
35.4 410 M
(      Arrays.fill\(grid[i], -1\);) s
18.6 402 M (15:) s
18.6 394 M (16:) s
35.4 394 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 394 M
(if) s
/F-gs-font 7 7 SF
60.6 394 M
(\(lot.get\(0\).get\(0\) != 1\) ) s
/Courier-Bold 7 7 SUF
165.6 394 M
(return) s
/F-gs-font 7 7 SF
190.8 394 M
( -1;) s
18.6 386 M (17:) s
18.6 378 M (18:) s
35.4 378 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 378 M
(return) s
/F-gs-font 7 7 SF
77.4 378 M
( DFS\(lot, 0, 0, grid\);) s
18.6 370 M (19:) s
35.4 370 M
(  }) s
18.6 362 M (20:) s
18.6 354 M (21:) s
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(int) s
/F-gs-font 7 7 SF
56.4 354 M
( DFS\(List<List<Integer>> lot, ) s
/Courier-Bold 7 7 SUF
182.4 354 M
(int) s
/F-gs-font 7 7 SF
195 354 M
( row, ) s
/Courier-Bold 7 7 SUF
220.2 354 M
(int) s
/F-gs-font 7 7 SF
232.8 354 M
( col, ) s
/Courier-Bold 7 7 SUF
258 354 M
(int) s
/F-gs-font 7 7 SF
270.6 354 M
([][] grid\) {) s
18.6 346 M (22:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(if) s
/F-gs-font 7 7 SF
60.6 346 M
(\(row < 0 || row >= grid.length || col < 0|| col >= grid[0].length\) ) s
/Courier-Bold 7 7 SUF
342 346 M
(return) s
/F-gs-font 7 7 SF
367.2 346 M
( Inte) s
5 338 M
(ger.MAX_VALUE;) s
18.6 330 M (23:) s
18.6 322 M (24:) s
35.4 322 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 322 M
(// when we come across trench) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 314 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 314 M
(if) s
/F-gs-font 7 7 SF
60.6 314 M
(\(lot.get\(row\).get\(col\) == 0\) ) s
/Courier-Bold 7 7 SUF
182.4 314 M
(return) s
/F-gs-font 7 7 SF
207.6 314 M
( Integer.MAX_VALUE;) s
18.6 306 M (26:) s
18.6 298 M (27:) s
35.4 298 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 298 M
(// found obstacle) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(lot.get\(row\).get\(col\) == 9\) ) s
/Courier-Bold 7 7 SUF
182.4 290 M
(return) s
/F-gs-font 7 7 SF
207.6 290 M
( 0;) s
18.6 282 M (29:) s
18.6 274 M (30:) s
35.4 274 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 274 M
(// when visited) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(if) s
/F-gs-font 7 7 SF
60.6 266 M
(\(grid[row][col] == 0\) ) s
/Courier-Bold 7 7 SUF
153 266 M
(return) s
/F-gs-font 7 7 SF
178.2 266 M
( Integer.MAX_VALUE;) s
18.6 258 M (32:) s
18.6 250 M (33:) s
35.4 250 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 250 M
(// when we have traversed that path) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(grid[row][col] > 0\) ) s
/Courier-Bold 7 7 SUF
148.8 242 M
(return) s
/F-gs-font 7 7 SF
174 242 M
( grid[row][col];) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 226 M
(// mark visited) s
/F-gs-font 7 7 SF
18.6 218 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 218 M
(    grid[row][col] = 0;) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(int) s
/F-gs-font 7 7 SF
64.8 202 M
( top = DFS\(lot, row - 1, col, grid\);) s
18.6 194 M (40:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(int) s
/F-gs-font 7 7 SF
64.8 194 M
( right = DFS\(lot, row, col + 1, grid\);) s
18.6 186 M (41:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
( bottom = DFS\(lot, row + 1, col, grid\);) s
18.6 178 M (42:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(int) s
/F-gs-font 7 7 SF
64.8 178 M
( left = DFS\(lot, row, col - 1, grid\);) s
18.6 170 M (43:) s
18.6 162 M (44:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
( min = Math.min\(Math.min\(Math.min\(top, right\), bottom\), left\) + 1;) s
18.6 154 M (45:) s
18.6 146 M (46:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(if) s
/F-gs-font 7 7 SF
60.6 146 M
(\(min == Integer.MAX_VALUE\) ) s
/Courier-Bold 7 7 SUF
174 146 M
(return) s
/F-gs-font 7 7 SF
199.2 146 M
( Integer.MAX_VALUE;) s
18.6 138 M (47:) s
18.6 130 M (48:) s
35.4 130 M
(    grid[row][col] = min + 1;) s
18.6 122 M (49:) s
18.6 114 M (50:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( grid[row][col];) s
18.6 106 M (51:) s
35.4 106 M
(  }) s
18.6 98 M (52:) s
/Courier-Oblique 7 7 SUF
35.4 98 M
(// METHOD SIGNATURE ENDS) s
/F-gs-font 7 7 SF
18.6 90 M (53:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 90 M
(}) s
_R
S
%%Page: (1) 107
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/JumpGame2.java) def
/fdir (./dp) def
/ftail (JumpGame2.java) def
% User defined strings:
/fmodstr (Wed Feb 06 22:57:18 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (JumpGame2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Hard) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array of non-negative integers, you are initially positioned at the first) s
5 490 M
( index of the array.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Each element in the array represents your maximum jump length at that position.) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Your goal is to reach the last index in the minimum number of jumps.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: [2,3,1,1,4]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation: The minimum number of jumps to reach the last index is 2.) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Jump 1 step from index 0 to 1, then 3 steps to the last index.) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
18.6 378 M (18:) s
/Courier-Bold 7 7 SUF
35.4 378 M
(class) s
/F-gs-font 7 7 SF
56.4 378 M
( Solution {) s
18.6 370 M (19:) s
35.4 370 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 370 M
(public) s
/F-gs-font 7 7 SF
69 370 M
( ) s
/Courier-Bold 7 7 SUF
73.2 370 M
(int) s
/F-gs-font 7 7 SF
85.8 370 M
( jump\() s
/Courier-Bold 7 7 SUF
111 370 M
(int) s
/F-gs-font 7 7 SF
123.6 370 M
([] nums\) {) s
18.6 362 M (20:) s
35.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 362 M
(int) s
/F-gs-font 7 7 SF
64.8 362 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 362 M
(new) s
/F-gs-font 7 7 SF
111 362 M
( ) s
/Courier-Bold 7 7 SUF
115.2 362 M
(int) s
/F-gs-font 7 7 SF
127.8 362 M
([nums.length];) s
18.6 354 M (21:) s
18.6 346 M (22:) s
35.4 346 M
(    dp[0] = 0;) s
18.6 338 M (23:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(for) s
/F-gs-font 7 7 SF
64.8 338 M
(\() s
/Courier-Bold 7 7 SUF
69 338 M
(int) s
/F-gs-font 7 7 SF
81.6 338 M
( i = 0; i < nums.length; i++\) {) s
18.6 330 M (24:) s
35.4 330 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 330 M
(for) s
/F-gs-font 7 7 SF
73.2 330 M
(\() s
/Courier-Bold 7 7 SUF
77.4 330 M
(int) s
/F-gs-font 7 7 SF
90 330 M
( j = Math.min\(nums[i], nums.length - i - 1\); j > 0; j--\) {) s
18.6 322 M (25:) s
35.4 322 M
(        ) s
/Courier-Bold 7 7 SUF
69 322 M
(if) s
/F-gs-font 7 7 SF
77.4 322 M
(\(dp[i + j] == 0\)) s
18.6 314 M (26:) s
35.4 314 M
(          dp[i + j] = dp[i] + 1;) s
18.6 306 M (27:) s
35.4 306 M
(        ) s
/Courier-Bold 7 7 SUF
69 306 M
(else) s
/F-gs-font 7 7 SF
18.6 298 M (28:) s
35.4 298 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 298 M
(break) s
/F-gs-font 7 7 SF
98.4 298 M
(;) s
18.6 290 M (29:) s
35.4 290 M
(      }) s
18.6 282 M (30:) s
35.4 282 M
(    }) s
18.6 274 M (31:) s
18.6 266 M (32:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(return) s
/F-gs-font 7 7 SF
77.4 266 M
( dp[nums.length-1];) s
18.6 258 M (33:) s
35.4 258 M
(  }) s
18.6 250 M (34:) s
35.4 250 M
(}) s
_R
S
%%Page: (1) 108
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/HouseRobber3.java) def
/fdir (./dp) def
/ftail (HouseRobber3.java) def
% User defined strings:
/fmodstr (Tue Mar 05 22:25:01 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (HouseRobber3.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  The thief has found himself a new place for his thievery again. There is only one ) s
5 490 M
(entrance to this area, called the "root." Besides the root, each house has one and only one ) s
5 482 M
(parent house. After a tour, the smart thief realized that "all houses in this place forms a ) s
5 474 M
(binary tree". It will automatically contact the police if two directly-linked houses were br) s
5 466 M
(oken into on the same night.) s
/F-gs-font 7 7 SF
22.8 458 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Determine the maximum amount of money the thief can rob tonight without alerting t) s
5 442 M
(he police.) s
/F-gs-font 7 7 SF
22.8 434 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 418 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [3,2,3,null,3,null,1]) s
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  3) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  2   3) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  \\   \\) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  3   1) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: 7) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input: [3,4,5,1,3,null,1]) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  3) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  4   5) s
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  / \\   \\) s
/F-gs-font 7 7 SF
18.6 266 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  1   3   1) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 250 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Output: 9) s
/F-gs-font 7 7 SF
18.6 242 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Explanation: Maximum amount of money the thief can rob = 4 + 5 = 9.) s
/F-gs-font 7 7 SF
18.6 234 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( */) s
/F-gs-font 7 7 SF
18.6 226 M (33:) s
18.6 218 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(/**) s
/F-gs-font 7 7 SF
18.6 210 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
( * Definition for a binary tree node.) s
/F-gs-font 7 7 SF
18.6 202 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
( * public class TreeNode {) s
/F-gs-font 7 7 SF
18.6 194 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 186 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
( *     TreeNode left;) s
/F-gs-font 7 7 SF
18.6 178 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
( *     TreeNode right;) s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
( *     TreeNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 162 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
( * }) s
/F-gs-font 7 7 SF
18.6 154 M (42:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
( */) s
/F-gs-font 7 7 SF
18.6 146 M (43:) s
/Courier-Bold 7 7 SUF
35.4 146 M
(class) s
/F-gs-font 7 7 SF
56.4 146 M
( Solution {) s
18.6 138 M (44:) s
35.4 138 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 138 M
(public) s
/F-gs-font 7 7 SF
69 138 M
( ) s
/Courier-Bold 7 7 SUF
73.2 138 M
(int) s
/F-gs-font 7 7 SF
85.8 138 M
( rob\(TreeNode root\) {) s
18.6 130 M (45:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(int) s
/F-gs-font 7 7 SF
64.8 130 M
([] max = maxRob\(root\);) s
18.6 122 M (46:) s
18.6 114 M (47:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( Math.max\(max[0], max[1]\);) s
18.6 106 M (48:) s
35.4 106 M
(  }) s
18.6 98 M (49:) s
18.6 90 M (50:) s
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(public) s
/F-gs-font 7 7 SF
69 90 M
( ) s
/Courier-Bold 7 7 SUF
73.2 90 M
(int) s
/F-gs-font 7 7 SF
85.8 90 M
([] maxRob\(TreeNode root\) {) s
18.6 82 M (51:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(if) s
/F-gs-font 7 7 SF
60.6 82 M
(\(root == ) s
/Courier-Bold 7 7 SUF
98.4 82 M
(null) s
/F-gs-font 7 7 SF
115.2 82 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 82 M
(return) s
/F-gs-font 7 7 SF
148.8 82 M
( ) s
/Courier-Bold 7 7 SUF
153 82 M
(new) s
/F-gs-font 7 7 SF
165.6 82 M
( ) s
/Courier-Bold 7 7 SUF
169.8 82 M
(int) s
/F-gs-font 7 7 SF
182.4 82 M
([2];) s
18.6 74 M (52:) s
18.6 66 M (53:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(int) s
/F-gs-font 7 7 SF
64.8 66 M
([] maxLeft = maxRob\(root.left\);) s
18.6 58 M (54:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(int) s
/F-gs-font 7 7 SF
64.8 58 M
([] maxRight = maxRob\(root.right\);) s
18.6 50 M (55:) s
18.6 42 M (56:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(int) s
/F-gs-font 7 7 SF
64.8 42 M
([] result = ) s
/Courier-Bold 7 7 SUF
115.2 42 M
(new) s
/F-gs-font 7 7 SF
127.8 42 M
( ) s
/Courier-Bold 7 7 SUF
132 42 M
(int) s
/F-gs-font 7 7 SF
144.6 42 M
([2];) s
18.6 34 M (57:) s
35.4 34 M
(    result[0] = Math.max\(root.val + maxLeft[1] + maxRight[1], maxLeft[0] + maxRight[) s
5 26 M
(0]\);) s
18.6 18 M (58:) s
35.4 18 M
(    result[1] = maxLeft[0] + maxRight[0];) s
18.6 10 M (59:) s
18.6 2 M (60:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(return) s
/F-gs-font 7 7 SF
77.4 2 M
( result;) s
415.6 522 M (61:) s
432.4 522 M
(  }) s
415.6 514 M (62:) s
432.4 514 M
(}) s
_R
S
%%Page: (1) 109
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/LargestPlusSign.java) def
/fdir (./dp) def
/ftail (LargestPlusSign.java) def
% User defined strings:
/fmodstr (Fri Feb 22 17:50:27 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (LargestPlusSign.java Page 1 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  In a 2D grid from \(0, 0\) to \(N-1, N-1\), every cell contains a 1, except those cell) s
5 490 M
(s in the given list mines which are 0. What is the largest axis-aligned plus sign of 1s cont) s
5 482 M
(ained in the grid? Return the order of the plus sign. If there is none, return 0.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  An "axis-aligned plus sign of 1s of order k" has some center grid[x][y] = 1 along ) s
5 458 M
(with 4 arms of length k-1 going up, down, left, and right, and made of 1s. This is demonstra) s
5 450 M
(ted in the diagrams below. Note that there could be 0s or 1s beyond the arms of the plus sig) s
5 442 M
(n, only the relevant area of the plus sign is checked for 1s.) s
/F-gs-font 7 7 SF
22.8 434 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Examples of Axis-Aligned Plus Signs of Order k:) s
/F-gs-font 7 7 SF
22.8 418 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Order 1:) s
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  000) s
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  010) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  000) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Order 2:) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  00000) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  00100) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  01110) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  00100) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  00000) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Order 3:) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  0000000) s
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  0001000) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  0001000) s
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  0111110) s
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  0001000) s
/F-gs-font 7 7 SF
18.6 266 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  0001000) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  0000000) s
/F-gs-font 7 7 SF
18.6 250 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 242 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 234 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  Input: N = 5, mines = [[4, 2]]) s
/F-gs-font 7 7 SF
18.6 226 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 218 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 210 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  11111) s
/F-gs-font 7 7 SF
18.6 202 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  11111) s
/F-gs-font 7 7 SF
18.6 194 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  11111) s
/F-gs-font 7 7 SF
18.6 186 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  11111) s
/F-gs-font 7 7 SF
18.6 178 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  11011) s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  In the above grid, the largest plus sign can only be order 2.  One of them is mark) s
5 162 M
(ed in bold.) s
/F-gs-font 7 7 SF
18.6 154 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 146 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 138 M (43:) s
/Courier-Oblique 7 7 SUF
35.4 138 M
(  Input: N = 2, mines = []) s
/F-gs-font 7 7 SF
18.6 130 M (44:) s
/Courier-Oblique 7 7 SUF
35.4 130 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 122 M (45:) s
/Courier-Oblique 7 7 SUF
35.4 122 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 114 M (46:) s
/Courier-Oblique 7 7 SUF
35.4 114 M
(  There is no plus sign of order 2, but there is of order 1.) s
/F-gs-font 7 7 SF
18.6 106 M (47:) s
/Courier-Oblique 7 7 SUF
35.4 106 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 98 M (48:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 90 M (49:) s
/Courier-Oblique 7 7 SUF
35.4 90 M
(  Input: N = 1, mines = [[0, 0]]) s
/F-gs-font 7 7 SF
18.6 82 M (50:) s
/Courier-Oblique 7 7 SUF
35.4 82 M
(  Output: 0) s
/F-gs-font 7 7 SF
18.6 74 M (51:) s
/Courier-Oblique 7 7 SUF
35.4 74 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 66 M (52:) s
/Courier-Oblique 7 7 SUF
35.4 66 M
(  There is no plus sign, so return 0.) s
/F-gs-font 7 7 SF
18.6 58 M (53:) s
/Courier-Oblique 7 7 SUF
35.4 58 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 50 M (54:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 42 M (55:) s
/Courier-Oblique 7 7 SUF
35.4 42 M
(  N will be an integer in the range [1, 500].) s
/F-gs-font 7 7 SF
18.6 34 M (56:) s
/Courier-Oblique 7 7 SUF
35.4 34 M
(  mines will have length at most 5000.) s
/F-gs-font 7 7 SF
18.6 26 M (57:) s
/Courier-Oblique 7 7 SUF
35.4 26 M
(  mines[i] will be length 2 and consist of integers in the range [0, N-1].) s
/F-gs-font 7 7 SF
18.6 18 M (58:) s
/Courier-Oblique 7 7 SUF
35.4 18 M
(  \(Additionally, programs submitted in C, C++, or C# will be judged with a slightly ) s
5 10 M
(smaller time limit.\)) s
/F-gs-font 7 7 SF
18.6 2 M (59:) s
/Courier-Oblique 7 7 SUF
35.4 2 M
( */) s
/F-gs-font 7 7 SF
415.6 522 M (60:) s
415.6 514 M (61:) s
/Courier-Bold 7 7 SUF
432.4 514 M
(class) s
/F-gs-font 7 7 SF
453.4 514 M
( Solution {) s
415.6 506 M (62:) s
432.4 506 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 506 M
(public) s
/F-gs-font 7 7 SF
466 506 M
( ) s
/Courier-Bold 7 7 SUF
470.2 506 M
(int) s
/F-gs-font 7 7 SF
482.8 506 M
( orderOfLargestPlusSign\() s
/Courier-Bold 7 7 SUF
583.6 506 M
(int) s
/F-gs-font 7 7 SF
596.2 506 M
( N, ) s
/Courier-Bold 7 7 SUF
613 506 M
(int) s
/F-gs-font 7 7 SF
625.6 506 M
([][] mines\) {) s
415.6 498 M (63:) s
432.4 498 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 498 M
(// set up grid) s
/F-gs-font 7 7 SF
415.6 490 M (64:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(int) s
/F-gs-font 7 7 SF
461.8 490 M
([][] grid = ) s
/Courier-Bold 7 7 SUF
512.2 490 M
(new) s
/F-gs-font 7 7 SF
524.8 490 M
( ) s
/Courier-Bold 7 7 SUF
529 490 M
(int) s
/F-gs-font 7 7 SF
541.6 490 M
([N][N];) s
415.6 482 M (65:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(for) s
/F-gs-font 7 7 SF
461.8 482 M
(\() s
/Courier-Bold 7 7 SUF
466 482 M
(int) s
/F-gs-font 7 7 SF
478.6 482 M
( i = 0; i < N; i++\)) s
415.6 474 M (66:) s
432.4 474 M
(      Arrays.fill\(grid[i], 1\);) s
415.6 466 M (67:) s
415.6 458 M (68:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(for) s
/F-gs-font 7 7 SF
461.8 458 M
(\() s
/Courier-Bold 7 7 SUF
466 458 M
(int) s
/F-gs-font 7 7 SF
478.6 458 M
( i = 0; i < mines.length; i++\)) s
415.6 450 M (69:) s
432.4 450 M
(      grid[mines[i][0]][mines[i][1]] = 0;) s
415.6 442 M (70:) s
415.6 434 M (71:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(int) s
/F-gs-font 7 7 SF
461.8 434 M
([][] vertical = ) s
/Courier-Bold 7 7 SUF
529 434 M
(new) s
/F-gs-font 7 7 SF
541.6 434 M
( ) s
/Courier-Bold 7 7 SUF
545.8 434 M
(int) s
/F-gs-font 7 7 SF
558.4 434 M
([grid.length][grid[0].length];) s
415.6 426 M (72:) s
432.4 426 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 426 M
(int) s
/F-gs-font 7 7 SF
461.8 426 M
([][] horizontal = ) s
/Courier-Bold 7 7 SUF
537.4 426 M
(new) s
/F-gs-font 7 7 SF
550 426 M
( ) s
/Courier-Bold 7 7 SUF
554.2 426 M
(int) s
/F-gs-font 7 7 SF
566.8 426 M
([grid.length][grid[0].length];) s
415.6 418 M (73:) s
415.6 410 M (74:) s
432.4 410 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 410 M
(// verticals) s
/F-gs-font 7 7 SF
415.6 402 M (75:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 402 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 402 M
(for) s
/F-gs-font 7 7 SF
461.8 402 M
(\() s
/Courier-Bold 7 7 SUF
466 402 M
(int) s
/F-gs-font 7 7 SF
478.6 402 M
( col = 0; col < N; col++\) {) s
415.6 394 M (76:) s
432.4 394 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 394 M
(int) s
/F-gs-font 7 7 SF
470.2 394 M
( counter = 0;) s
415.6 386 M (77:) s
432.4 386 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 386 M
(for) s
/F-gs-font 7 7 SF
470.2 386 M
(\() s
/Courier-Bold 7 7 SUF
474.4 386 M
(int) s
/F-gs-font 7 7 SF
487 386 M
( row = 0; row < N; row++\) {) s
415.6 378 M (78:) s
432.4 378 M
(        ) s
/Courier-Bold 7 7 SUF
466 378 M
(if) s
/F-gs-font 7 7 SF
474.4 378 M
(\(grid[row][col] == 1\) {) s
415.6 370 M (79:) s
432.4 370 M
(          vertical[row][col] = grid[row][col] + counter;) s
415.6 362 M (80:) s
432.4 362 M
(          counter++;) s
415.6 354 M (81:) s
432.4 354 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 354 M
(else) s
/F-gs-font 7 7 SF
491.2 354 M
( {) s
415.6 346 M (82:) s
432.4 346 M
(          counter = 0;) s
415.6 338 M (83:) s
432.4 338 M
(        }) s
415.6 330 M (84:) s
432.4 330 M
(      }) s
415.6 322 M (85:) s
415.6 314 M (86:) s
432.4 314 M
(      counter = 0;) s
415.6 306 M (87:) s
432.4 306 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 306 M
(for) s
/F-gs-font 7 7 SF
470.2 306 M
(\() s
/Courier-Bold 7 7 SUF
474.4 306 M
(int) s
/F-gs-font 7 7 SF
487 306 M
( row = N - 1; row >= 0; row--\) {) s
415.6 298 M (88:) s
432.4 298 M
(        ) s
/Courier-Bold 7 7 SUF
466 298 M
(if) s
/F-gs-font 7 7 SF
474.4 298 M
(\(grid[row][col] == 1\) {) s
415.6 290 M (89:) s
432.4 290 M
(          vertical[row][col] = Math.min\(vertical[row][col], grid[row][col] + counter) s
402 282 M
(\);) s
415.6 274 M (90:) s
432.4 274 M
(          counter++;) s
415.6 266 M (91:) s
432.4 266 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 266 M
(else) s
/F-gs-font 7 7 SF
491.2 266 M
( {) s
415.6 258 M (92:) s
432.4 258 M
(          counter = 0;) s
415.6 250 M (93:) s
432.4 250 M
(        }) s
415.6 242 M (94:) s
432.4 242 M
(      }) s
415.6 234 M (95:) s
432.4 234 M
(    }) s
415.6 226 M (96:) s
415.6 218 M (97:) s
432.4 218 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 218 M
(// horizontals) s
/F-gs-font 7 7 SF
415.6 210 M (98:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 210 M
(for) s
/F-gs-font 7 7 SF
461.8 210 M
(\() s
/Courier-Bold 7 7 SUF
466 210 M
(int) s
/F-gs-font 7 7 SF
478.6 210 M
( row = 0; row < N; row++\) {) s
415.6 202 M (99:) s
432.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 202 M
(int) s
/F-gs-font 7 7 SF
470.2 202 M
( counter = 0;) s
411.4 194 M (100:) s
432.4 194 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 194 M
(for) s
/F-gs-font 7 7 SF
470.2 194 M
(\() s
/Courier-Bold 7 7 SUF
474.4 194 M
(int) s
/F-gs-font 7 7 SF
487 194 M
( col = 0; col < N; col++\) {) s
411.4 186 M (101:) s
432.4 186 M
(        ) s
/Courier-Bold 7 7 SUF
466 186 M
(if) s
/F-gs-font 7 7 SF
474.4 186 M
(\(grid[row][col] == 1\) {) s
411.4 178 M (102:) s
432.4 178 M
(          horizontal[row][col] = grid[row][col] + counter;) s
411.4 170 M (103:) s
432.4 170 M
(          counter++;) s
411.4 162 M (104:) s
432.4 162 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 162 M
(else) s
/F-gs-font 7 7 SF
491.2 162 M
( {) s
411.4 154 M (105:) s
432.4 154 M
(          counter = 0;) s
411.4 146 M (106:) s
432.4 146 M
(        }) s
411.4 138 M (107:) s
432.4 138 M
(      }) s
411.4 130 M (108:) s
411.4 122 M (109:) s
432.4 122 M
(      counter = 0;) s
411.4 114 M (110:) s
432.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 114 M
(for) s
/F-gs-font 7 7 SF
470.2 114 M
(\() s
/Courier-Bold 7 7 SUF
474.4 114 M
(int) s
/F-gs-font 7 7 SF
487 114 M
( col = N - 1; col >= 0; col--\) {) s
411.4 106 M (111:) s
432.4 106 M
(        ) s
/Courier-Bold 7 7 SUF
466 106 M
(if) s
/F-gs-font 7 7 SF
474.4 106 M
(\(grid[row][col] == 1\) {) s
411.4 98 M (112:) s
432.4 98 M
(          horizontal[row][col] = Math.min\(horizontal[row][col], grid[row][col] + cou) s
402 90 M
(nter\);) s
411.4 82 M (113:) s
432.4 82 M
(          counter++;) s
411.4 74 M (114:) s
432.4 74 M
(        } ) s
/Courier-Bold 7 7 SUF
474.4 74 M
(else) s
/F-gs-font 7 7 SF
491.2 74 M
( {) s
411.4 66 M (115:) s
432.4 66 M
(          counter = 0;) s
411.4 58 M (116:) s
432.4 58 M
(        }) s
411.4 50 M (117:) s
432.4 50 M
(      }) s
411.4 42 M (118:) s
432.4 42 M
(    }) s
411.4 34 M (119:) s
411.4 26 M (120:) s
432.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 26 M
(int) s
/F-gs-font 7 7 SF
461.8 26 M
( max = Integer.MIN_VALUE;) s
411.4 18 M (121:) s
432.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 18 M
(for) s
/F-gs-font 7 7 SF
461.8 18 M
(\() s
/Courier-Bold 7 7 SUF
466 18 M
(int) s
/F-gs-font 7 7 SF
478.6 18 M
( row = 0; row < N; row++\) {) s
411.4 10 M (122:) s
432.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 10 M
(for) s
/F-gs-font 7 7 SF
470.2 10 M
(\() s
/Courier-Bold 7 7 SUF
474.4 10 M
(int) s
/F-gs-font 7 7 SF
487 10 M
( col = 0; col < N; col++\) {) s
411.4 2 M (123:) s
432.4 2 M
(        max = Math.max\(max, Math.min\(vertical[row][col], horizontal[row][col]\)\);) s
_R
S
%%Page: (2) 110
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (./dp/LargestPlusSign.java) def
/fdir (./dp) def
/ftail (LargestPlusSign.java) def
% User defined strings:
/fmodstr (Fri Feb 22 17:50:27 2019) def
/pagenumstr (2) def
/user_header_p true def
/user_header_left_str (LargestPlusSign.java Page 2 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
14.4 522 M (124:) s
35.4 522 M
(      }) s
14.4 514 M (125:) s
35.4 514 M
(    }) s
14.4 506 M (126:) s
14.4 498 M (127:) s
35.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 498 M
(return) s
/F-gs-font 7 7 SF
77.4 498 M
( max;) s
14.4 490 M (128:) s
35.4 490 M
(  }) s
14.4 482 M (129:) s
35.4 482 M
(}) s
_R
S
%%Page: (1) 111
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/UniquePaths2.java) def
/fdir (./dp) def
/ftail (UniquePaths2.java) def
% User defined strings:
/fmodstr (Thu Jan 17 21:41:19 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (UniquePaths2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  A robot is located at the top-left corner of a m x n grid \(marked 'Start' in the d) s
5 490 M
(iagram below\).) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  The robot can only move either down or right at any point in time. The robot is tr) s
5 466 M
(ying to reach the bottom-right corner of the grid \(marked 'Finish' in the diagram below\).) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Now consider if some obstacles are added to the grids. How many unique paths would) s
5 442 M
( there be?) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  An obstacle and empty space is marked as 1 and 0 respectively in the grid.) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Note: m and n will be at most 100.) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  [) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  [0,0,0],) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [0,1,0],) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [0,0,0]) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  ]) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  There is one obstacle in the middle of the 3x3 grid above.) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  There are two ways to reach the bottom-right corner:) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  1. Right -> Right -> Down -> Down) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  2. Down -> Down -> Right -> Right) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( */) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
18.6 250 M (32:) s
/Courier-Bold 7 7 SUF
35.4 250 M
(class) s
/F-gs-font 7 7 SF
56.4 250 M
( Solution {) s
18.6 242 M (33:) s
35.4 242 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 242 M
(public) s
/F-gs-font 7 7 SF
69 242 M
( ) s
/Courier-Bold 7 7 SUF
73.2 242 M
(int) s
/F-gs-font 7 7 SF
85.8 242 M
( uniquePathsWithObstacles\() s
/Courier-Bold 7 7 SUF
195 242 M
(int) s
/F-gs-font 7 7 SF
207.6 242 M
([][] obstacleGrid\) {) s
18.6 234 M (34:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(if) s
/F-gs-font 7 7 SF
60.6 234 M
(\(obstacleGrid[0][0] == 1 ||) s
18.6 226 M (35:) s
35.4 226 M
(       obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1] == 1\) ) s
/Courier-Bold 7 7 SUF
350.4 226 M
(return) s
/F-gs-font 7 7 SF
375.6 226 M
( 0;) s
18.6 218 M (36:) s
18.6 210 M (37:) s
35.4 210 M
(    obstacleGrid[0][0] = -1;) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 194 M
(// first row) s
/F-gs-font 7 7 SF
18.6 186 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(for) s
/F-gs-font 7 7 SF
64.8 186 M
(\() s
/Courier-Bold 7 7 SUF
69 186 M
(int) s
/F-gs-font 7 7 SF
81.6 186 M
( i = 1; i < obstacleGrid[0].length; i++\)) s
18.6 178 M (41:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(if) s
/F-gs-font 7 7 SF
69 178 M
(\(obstacleGrid[0][i] < 1\)) s
18.6 170 M (42:) s
35.4 170 M
(        obstacleGrid[0][i] = obstacleGrid[0][i-1];) s
18.6 162 M (43:) s
18.6 154 M (44:) s
35.4 154 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 154 M
(// first col) s
/F-gs-font 7 7 SF
18.6 146 M (45:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(for) s
/F-gs-font 7 7 SF
64.8 146 M
(\() s
/Courier-Bold 7 7 SUF
69 146 M
(int) s
/F-gs-font 7 7 SF
81.6 146 M
( i = 1; i < obstacleGrid.length; i++\)) s
18.6 138 M (46:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
(if) s
/F-gs-font 7 7 SF
69 138 M
(\(obstacleGrid[i][0] < 1\)) s
18.6 130 M (47:) s
35.4 130 M
(        obstacleGrid[i][0] = obstacleGrid[i-1][0];) s
18.6 122 M (48:) s
18.6 114 M (49:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(for) s
/F-gs-font 7 7 SF
64.8 114 M
(\() s
/Courier-Bold 7 7 SUF
69 114 M
(int) s
/F-gs-font 7 7 SF
81.6 114 M
( i = 1; i < obstacleGrid.length; i++\) {) s
18.6 106 M (50:) s
35.4 106 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 106 M
(for) s
/F-gs-font 7 7 SF
73.2 106 M
(\() s
/Courier-Bold 7 7 SUF
77.4 106 M
(int) s
/F-gs-font 7 7 SF
90 106 M
( j = 1; j < obstacleGrid[0].length; j++\) {) s
18.6 98 M (51:) s
35.4 98 M
(        ) s
/Courier-Bold 7 7 SUF
69 98 M
(if) s
/F-gs-font 7 7 SF
77.4 98 M
(\(obstacleGrid[i][j] == 1\) ) s
/Courier-Bold 7 7 SUF
186.6 98 M
(continue) s
/F-gs-font 7 7 SF
220.2 98 M
(;) s
18.6 90 M (52:) s
18.6 82 M (53:) s
35.4 82 M
(        ) s
/Courier-Bold 7 7 SUF
69 82 M
(if) s
/F-gs-font 7 7 SF
77.4 82 M
(\(i > 0 && obstacleGrid[i-1][j] < 1\)) s
18.6 74 M (54:) s
35.4 74 M
(          obstacleGrid[i][j] = obstacleGrid[i][j] + obstacleGrid[i-1][j];) s
18.6 66 M (55:) s
35.4 66 M
(        ) s
/Courier-Bold 7 7 SUF
69 66 M
(if) s
/F-gs-font 7 7 SF
77.4 66 M
(\(j > 0 && obstacleGrid[i][j-1] < 1\)) s
18.6 58 M (56:) s
35.4 58 M
(          obstacleGrid[i][j] = obstacleGrid[i][j] + obstacleGrid[i][j-1];) s
18.6 50 M (57:) s
35.4 50 M
(      }) s
18.6 42 M (58:) s
35.4 42 M
(    }) s
18.6 34 M (59:) s
18.6 26 M (60:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(return) s
/F-gs-font 7 7 SF
77.4 26 M
( Math.abs\(obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1]\);) s
18.6 18 M (61:) s
35.4 18 M
(  }) s
18.6 10 M (62:) s
35.4 10 M
(}) s
_R
S
%%Page: (1) 112
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/PartitionEqualSubsetSum.java) def
/fdir (./dp) def
/ftail (PartitionEqualSubsetSum.java) def
% User defined strings:
/fmodstr (Mon Apr 08 00:50:45 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (PartitionEqualSubsetSum.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a non-empty array containing only positive integers, find if the array can b) s
5 490 M
(e partitioned into two subsets such that the sum of elements in both subsets is equal.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Each of the array element will not exceed 100.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  The array size will not exceed 200.) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: [1, 5, 11, 5]) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation: The array can be partitioned as [1, 5, 5] and [11].) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: [1, 2, 3, 5]) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Explanation: The array cannot be partitioned into equal sum subsets.) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (27:) s
18.6 298 M (28:) s
/Courier-Bold 7 7 SUF
35.4 298 M
(class) s
/F-gs-font 7 7 SF
56.4 298 M
( Solution {) s
18.6 290 M (29:) s
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( ) s
/Courier-Bold 7 7 SUF
73.2 290 M
(boolean) s
/F-gs-font 7 7 SF
102.6 290 M
( canPartition\() s
/Courier-Bold 7 7 SUF
161.4 290 M
(int) s
/F-gs-font 7 7 SF
174 290 M
([] nums\) {) s
18.6 282 M (30:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( sum = 0;) s
18.6 274 M (31:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( num : nums\)) s
18.6 266 M (32:) s
35.4 266 M
(      sum += num;) s
18.6 258 M (33:) s
18.6 250 M (34:) s
35.4 250 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 250 M
(// sum need to be an even number because:) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 242 M
(// 1. odd + odd = even) s
/F-gs-font 7 7 SF
18.6 234 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 234 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 234 M
(// 2. even + even = even) s
/F-gs-font 7 7 SF
18.6 226 M (37:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(if) s
/F-gs-font 7 7 SF
60.6 226 M
(\(sum % 2 != 0\) ) s
/Courier-Bold 7 7 SUF
123.6 226 M
(return) s
/F-gs-font 7 7 SF
148.8 226 M
( ) s
/Courier-Bold 7 7 SUF
153 226 M
(false) s
/F-gs-font 7 7 SF
174 226 M
(;) s
18.6 218 M (38:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
( targetSum = sum / 2;) s
18.6 210 M (39:) s
18.6 202 M (40:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( findSum2\(nums, targetSum\);) s
18.6 194 M (41:) s
35.4 194 M
(  }) s
18.6 186 M (42:) s
18.6 178 M (43:) s
35.4 178 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 178 M
(// 1 : dp - O\(MN\) where M = targetSum and N = size of nums) s
/F-gs-font 7 7 SF
18.6 170 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 170 M
(public) s
/F-gs-font 7 7 SF
69 170 M
( ) s
/Courier-Bold 7 7 SUF
73.2 170 M
(boolean) s
/F-gs-font 7 7 SF
102.6 170 M
( findSum\() s
/Courier-Bold 7 7 SUF
140.4 170 M
(int) s
/F-gs-font 7 7 SF
153 170 M
([] nums, ) s
/Courier-Bold 7 7 SUF
190.8 170 M
(int) s
/F-gs-font 7 7 SF
203.4 170 M
( targetSum\) {) s
18.6 162 M (45:) s
35.4 162 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 162 M
(// row = # of elements, col = targetSum) s
/F-gs-font 7 7 SF
18.6 154 M (46:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(boolean) s
/F-gs-font 7 7 SF
81.6 154 M
([][] memo = ) s
/Courier-Bold 7 7 SUF
132 154 M
(new) s
/F-gs-font 7 7 SF
144.6 154 M
( ) s
/Courier-Bold 7 7 SUF
148.8 154 M
(boolean) s
/F-gs-font 7 7 SF
178.2 154 M
([nums.length + 1][targetSum + 1];) s
18.6 146 M (47:) s
18.6 138 M (48:) s
35.4 138 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 138 M
(// first col make all true) s
/F-gs-font 7 7 SF
18.6 130 M (49:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(for) s
/F-gs-font 7 7 SF
64.8 130 M
(\() s
/Courier-Bold 7 7 SUF
69 130 M
(int) s
/F-gs-font 7 7 SF
81.6 130 M
( i = 0; i < memo.length; i++\)) s
18.6 122 M (50:) s
35.4 122 M
(      memo[i][0] = ) s
/Courier-Bold 7 7 SUF
115.2 122 M
(true) s
/F-gs-font 7 7 SF
132 122 M
(;) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(for) s
/F-gs-font 7 7 SF
64.8 106 M
(\() s
/Courier-Bold 7 7 SUF
69 106 M
(int) s
/F-gs-font 7 7 SF
81.6 106 M
( i = 1; i < memo.length; i++\) {) s
18.6 98 M (53:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(for) s
/F-gs-font 7 7 SF
73.2 98 M
(\() s
/Courier-Bold 7 7 SUF
77.4 98 M
(int) s
/F-gs-font 7 7 SF
90 98 M
( j = 1; j < memo[i].length; j++\) {) s
18.6 90 M (54:) s
35.4 90 M
(        memo[i][j] = memo[i-1][j]; ) s
/Courier-Oblique 7 7 SUF
182.4 90 M
(// copy over to next row) s
/F-gs-font 7 7 SF
18.6 82 M (55:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 74 M (56:) s
35.4 74 M
(        ) s
/Courier-Bold 7 7 SUF
69 74 M
(if) s
/F-gs-font 7 7 SF
77.4 74 M
(\(j >= nums[i-1]\) {) s
18.6 66 M (57:) s
35.4 66 M
(          memo[i][j] |= memo[i-1][j - nums[i-1]]; ) s
/Courier-Oblique 7 7 SUF
245.4 66 M
(// if current - previous = true) s
/F-gs-font 7 7 SF
18.6 58 M (58:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 58 M
(        }) s
18.6 50 M (59:) s
35.4 50 M
(      }) s
18.6 42 M (60:) s
35.4 42 M
(    }) s
18.6 34 M (61:) s
18.6 26 M (62:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(return) s
/F-gs-font 7 7 SF
77.4 26 M
( memo[nums.length][targetSum];) s
18.6 18 M (63:) s
35.4 18 M
(  }) s
18.6 10 M (64:) s
18.6 2 M (65:) s
35.4 2 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 2 M
(// 2 : memoization + binarySearch O\(N^2\) worst case, O\(N log N\) avg case) s
/F-gs-font 7 7 SF
415.6 522 M (66:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 522 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 522 M
(public) s
/F-gs-font 7 7 SF
466 522 M
( ) s
/Courier-Bold 7 7 SUF
470.2 522 M
(boolean) s
/F-gs-font 7 7 SF
499.6 522 M
( findSum2\() s
/Courier-Bold 7 7 SUF
541.6 522 M
(int) s
/F-gs-font 7 7 SF
554.2 522 M
([] nums, ) s
/Courier-Bold 7 7 SUF
592 522 M
(int) s
/F-gs-font 7 7 SF
604.6 522 M
( targetSum\) {) s
415.6 514 M (67:) s
432.4 514 M
(    Arrays.sort\(nums\);) s
415.6 506 M (68:) s
415.6 498 M (69:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(boolean) s
/F-gs-font 7 7 SF
478.6 498 M
([][] memo = ) s
/Courier-Bold 7 7 SUF
529 498 M
(new) s
/F-gs-font 7 7 SF
541.6 498 M
( ) s
/Courier-Bold 7 7 SUF
545.8 498 M
(boolean) s
/F-gs-font 7 7 SF
575.2 498 M
([nums.length][targetSum];) s
415.6 490 M (70:) s
415.6 482 M (71:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(return) s
/F-gs-font 7 7 SF
474.4 482 M
( findSum2Helper\(nums, memo, targetSum - nums[nums.length - 1], nums.length) s
402 474 M
( - 2\);) s
415.6 466 M (72:) s
432.4 466 M
(  }) s
415.6 458 M (73:) s
415.6 450 M (74:) s
432.4 450 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 450 M
(public) s
/F-gs-font 7 7 SF
466 450 M
( ) s
/Courier-Bold 7 7 SUF
470.2 450 M
(boolean) s
/F-gs-font 7 7 SF
499.6 450 M
( findSum2Helper\() s
/Courier-Bold 7 7 SUF
566.8 450 M
(int) s
/F-gs-font 7 7 SF
579.4 450 M
([] nums, ) s
/Courier-Bold 7 7 SUF
617.2 450 M
(boolean) s
/F-gs-font 7 7 SF
646.6 450 M
([][] memo, ) s
/Courier-Bold 7 7 SUF
692.8 450 M
(int) s
/F-gs-font 7 7 SF
705.4 450 M
( targetSum, ) s
/Courier-Bold 7 7 SUF
755.8 450 M
(int) s
/F-gs-font 7 7 SF
768.4 450 M
( ind) s
402 442 M
(ex\) {) s
415.6 434 M (75:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(if) s
/F-gs-font 7 7 SF
457.6 434 M
(\(index < 0\) {) s
415.6 426 M (76:) s
432.4 426 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 426 M
(if) s
/F-gs-font 7 7 SF
466 426 M
(\(targetSum == 0\) ) s
/Courier-Bold 7 7 SUF
537.4 426 M
(return) s
/F-gs-font 7 7 SF
562.6 426 M
( ) s
/Courier-Bold 7 7 SUF
566.8 426 M
(true) s
/F-gs-font 7 7 SF
583.6 426 M
(;) s
415.6 418 M (77:) s
432.4 418 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 418 M
(return) s
/F-gs-font 7 7 SF
482.8 418 M
( ) s
/Courier-Bold 7 7 SUF
487 418 M
(false) s
/F-gs-font 7 7 SF
508 418 M
(;) s
415.6 410 M (78:) s
432.4 410 M
(    }) s
415.6 402 M (79:) s
432.4 402 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 402 M
(if) s
/F-gs-font 7 7 SF
457.6 402 M
(\(targetSum < 0\) ) s
/Courier-Bold 7 7 SUF
524.8 402 M
(return) s
/F-gs-font 7 7 SF
550 402 M
( ) s
/Courier-Bold 7 7 SUF
554.2 402 M
(false) s
/F-gs-font 7 7 SF
575.2 402 M
(;) s
415.6 394 M (80:) s
432.4 394 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 394 M
(if) s
/F-gs-font 7 7 SF
457.6 394 M
(\(targetSum == 0 || memo[index][targetSum]\) ) s
/Courier-Bold 7 7 SUF
638.2 394 M
(return) s
/F-gs-font 7 7 SF
663.4 394 M
( ) s
/Courier-Bold 7 7 SUF
667.6 394 M
(true) s
/F-gs-font 7 7 SF
684.4 394 M
(;) s
415.6 386 M (81:) s
415.6 378 M (82:) s
432.4 378 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 378 M
(// do binary search on the targetSum to immediately get the nextIndex) s
/F-gs-font 7 7 SF
415.6 370 M (83:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 370 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 370 M
(// NOTE: if not found, binarySearch will return \(-insertionIndex - 1\)) s
/F-gs-font 7 7 SF
415.6 362 M (84:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 362 M
(int) s
/F-gs-font 7 7 SF
461.8 362 M
( nextIndex = Arrays.binarySearch\(nums, targetSum\);) s
415.6 354 M (85:) s
415.6 346 M (86:) s
432.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 346 M
(if) s
/F-gs-font 7 7 SF
457.6 346 M
(\(nextIndex > 0\) {) s
415.6 338 M (87:) s
432.4 338 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 338 M
(return) s
/F-gs-font 7 7 SF
482.8 338 M
( ) s
/Courier-Bold 7 7 SUF
487 338 M
(true) s
/F-gs-font 7 7 SF
503.8 338 M
(;) s
415.6 330 M (88:) s
432.4 330 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 330 M
(else) s
/F-gs-font 7 7 SF
474.4 330 M
( {) s
415.6 322 M (89:) s
432.4 322 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 322 M
(// do min on index - 1 just in case it tries to choose itself again) s
/F-gs-font 7 7 SF
415.6 314 M (90:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 314 M
(      nextIndex = Math.min\(index - 1, Math.abs\(nextIndex - 1\)\);) s
415.6 306 M (91:) s
415.6 298 M (92:) s
432.4 298 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 298 M
(// iterate down) s
/F-gs-font 7 7 SF
415.6 290 M (93:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 290 M
(for) s
/F-gs-font 7 7 SF
470.2 290 M
(\(; nextIndex >= 0; nextIndex--\) {) s
415.6 282 M (94:) s
432.4 282 M
(        ) s
/Courier-Bold 7 7 SUF
466 282 M
(if) s
/F-gs-font 7 7 SF
474.4 282 M
(\(findSum2Helper\(nums, memo, targetSum - nums[nextIndex], nextIndex - 1\)\)) s
415.6 274 M (95:) s
432.4 274 M
(          ) s
/Courier-Bold 7 7 SUF
474.4 274 M
(return) s
/F-gs-font 7 7 SF
499.6 274 M
( ) s
/Courier-Bold 7 7 SUF
503.8 274 M
(true) s
/F-gs-font 7 7 SF
520.6 274 M
(;) s
415.6 266 M (96:) s
432.4 266 M
(      }) s
415.6 258 M (97:) s
432.4 258 M
(    }) s
415.6 250 M (98:) s
415.6 242 M (99:) s
432.4 242 M
(    memo[index][targetSum] = ) s
/Courier-Bold 7 7 SUF
554.2 242 M
(true) s
/F-gs-font 7 7 SF
571 242 M
(;) s
411.4 234 M (100:) s
432.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 234 M
(return) s
/F-gs-font 7 7 SF
474.4 234 M
( ) s
/Courier-Bold 7 7 SUF
478.6 234 M
(false) s
/F-gs-font 7 7 SF
499.6 234 M
(;) s
411.4 226 M (101:) s
432.4 226 M
(  }) s
411.4 218 M (102:) s
432.4 218 M
(}) s
_R
S
%%Page: (1) 113
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/BestTimeToBuyAndSellStockWithCooldown.java) def
/fdir (./dp) def
/ftail (BestTimeToBuyAndSellStockWithCooldown.java) def
% User defined strings:
/fmodstr (Sun Apr 07 14:41:03 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (BestTimeToBuyAndSellStockWithCooldown.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Say you have an array for which the ith element is the price of a given stock on d) s
5 490 M
(ay i.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Design an algorithm to find the maximum profit. You may complete as many transacti) s
5 466 M
(ons as you like \(ie, buy one and sell one share of the stock multiple times\) with the follow) s
5 458 M
(ing restrictions:) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  You may not engage in multiple transactions at the same time \(ie, you must sell th) s
5 434 M
(e stock before you buy again\).) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  After you sell your stock, you cannot buy stock on next day. \(ie, cooldown 1 day\)) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: [1,2,3,0,2]) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation: transactions = [buy, sell, cooldown, buy, sell]) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
18.6 362 M (17:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( Solution {) s
18.6 354 M (18:) s
35.4 354 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 354 M
(// 1: dp) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 346 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 346 M
(public) s
/F-gs-font 7 7 SF
69 346 M
( ) s
/Courier-Bold 7 7 SUF
73.2 346 M
(int) s
/F-gs-font 7 7 SF
85.8 346 M
( maxProfit\() s
/Courier-Bold 7 7 SUF
132 346 M
(int) s
/F-gs-font 7 7 SF
144.6 346 M
([] prices\) {) s
18.6 338 M (20:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(if) s
/F-gs-font 7 7 SF
60.6 338 M
(\(prices.length == 0\) ) s
/Courier-Bold 7 7 SUF
148.8 338 M
(return) s
/F-gs-font 7 7 SF
174 338 M
( 0;) s
18.6 330 M (21:) s
18.6 322 M (22:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(int) s
/F-gs-font 7 7 SF
64.8 322 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 322 M
(new) s
/F-gs-font 7 7 SF
111 322 M
( ) s
/Courier-Bold 7 7 SUF
115.2 322 M
(int) s
/F-gs-font 7 7 SF
127.8 322 M
([prices.length];) s
18.6 314 M (23:) s
18.6 306 M (24:) s
35.4 306 M
(    dp[0] = 0;) s
18.6 298 M (25:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(for) s
/F-gs-font 7 7 SF
64.8 298 M
(\() s
/Courier-Bold 7 7 SUF
69 298 M
(int) s
/F-gs-font 7 7 SF
81.6 298 M
( i = 1; i < prices.length; i++\) {) s
18.6 290 M (26:) s
35.4 290 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 290 M
(int) s
/F-gs-font 7 7 SF
73.2 290 M
( maxProfit = 0;) s
18.6 282 M (27:) s
18.6 274 M (28:) s
35.4 274 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 274 M
(// backtrack to find the lowest day) s
/F-gs-font 7 7 SF
18.6 266 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(for) s
/F-gs-font 7 7 SF
73.2 266 M
(\() s
/Courier-Bold 7 7 SUF
77.4 266 M
(int) s
/F-gs-font 7 7 SF
90 266 M
( j = i - 1; j >= 0 && prices[j] < prices[i]; j--\) {) s
18.6 258 M (30:) s
35.4 258 M
(        ) s
/Courier-Oblique 7 7 SUF
69 258 M
(// previous profit is 2 days before) s
/F-gs-font 7 7 SF
18.6 250 M (31:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 250 M
(        ) s
/Courier-Bold 7 7 SUF
69 250 M
(int) s
/F-gs-font 7 7 SF
81.6 250 M
( prevProfit = j >= 2 ? dp[j - 2] : 0;) s
18.6 242 M (32:) s
18.6 234 M (33:) s
35.4 234 M
(        ) s
/Courier-Oblique 7 7 SUF
69 234 M
(// calculate the max profit considering the previous profit) s
/F-gs-font 7 7 SF
18.6 226 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 226 M
(        maxProfit = Math.max\(maxProfit, prices[i] - prices[j] + prevProfit\);) s
18.6 218 M (35:) s
35.4 218 M
(      }) s
18.6 210 M (36:) s
18.6 202 M (37:) s
35.4 202 M
(      dp[i] = Math.max\(maxProfit, dp[i - 1]\);) s
18.6 194 M (38:) s
35.4 194 M
(    }) s
18.6 186 M (39:) s
18.6 178 M (40:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(return) s
/F-gs-font 7 7 SF
77.4 178 M
( dp[prices.length - 1];) s
18.6 170 M (41:) s
35.4 170 M
(  }) s
18.6 162 M (42:) s
18.6 154 M (43:) s
35.4 154 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 154 M
(// 2: recursion) s
/F-gs-font 7 7 SF
18.6 146 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 146 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 146 M
(public) s
/F-gs-font 7 7 SF
69 146 M
( ) s
/Courier-Bold 7 7 SUF
73.2 146 M
(int) s
/F-gs-font 7 7 SF
85.8 146 M
( maxProfit\() s
/Courier-Bold 7 7 SUF
132 146 M
(int) s
/F-gs-font 7 7 SF
144.6 146 M
([] prices\) {) s
18.6 138 M (45:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(return) s
/F-gs-font 7 7 SF
77.4 138 M
( helper\(prices, 0, ) s
/Courier-Bold 7 7 SUF
157.2 138 M
(false) s
/F-gs-font 7 7 SF
178.2 138 M
(\);) s
18.6 130 M (46:) s
35.4 130 M
(  }) s
18.6 122 M (47:) s
18.6 114 M (48:) s
35.4 114 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 114 M
(public) s
/F-gs-font 7 7 SF
69 114 M
( ) s
/Courier-Bold 7 7 SUF
73.2 114 M
(int) s
/F-gs-font 7 7 SF
85.8 114 M
( helper\() s
/Courier-Bold 7 7 SUF
119.4 114 M
(int) s
/F-gs-font 7 7 SF
132 114 M
([] prices, ) s
/Courier-Bold 7 7 SUF
178.2 114 M
(int) s
/F-gs-font 7 7 SF
190.8 114 M
( current, ) s
/Courier-Bold 7 7 SUF
232.8 114 M
(boolean) s
/F-gs-font 7 7 SF
262.2 114 M
( cooldown\) {) s
18.6 106 M (49:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(if) s
/F-gs-font 7 7 SF
60.6 106 M
(\(current == prices.length\) ) s
/Courier-Bold 7 7 SUF
174 106 M
(return) s
/F-gs-font 7 7 SF
199.2 106 M
( 0;) s
18.6 98 M (50:) s
18.6 90 M (51:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(if) s
/F-gs-font 7 7 SF
60.6 90 M
(\(cooldown\) {) s
18.6 82 M (52:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(return) s
/F-gs-font 7 7 SF
85.8 82 M
( helper\(memo, prices, current + 1, ) s
/Courier-Bold 7 7 SUF
232.8 82 M
(false) s
/F-gs-font 7 7 SF
253.8 82 M
(\);) s
18.6 74 M (53:) s
35.4 74 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(else) s
/F-gs-font 7 7 SF
77.4 74 M
( {) s
18.6 66 M (54:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(int) s
/F-gs-font 7 7 SF
73.2 66 M
( maxProfit = 0;) s
18.6 58 M (55:) s
18.6 50 M (56:) s
35.4 50 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 50 M
(for) s
/F-gs-font 7 7 SF
73.2 50 M
(\() s
/Courier-Bold 7 7 SUF
77.4 50 M
(int) s
/F-gs-font 7 7 SF
90 50 M
( i = current; i < prices.length; i++\) {) s
18.6 42 M (57:) s
35.4 42 M
(        ) s
/Courier-Bold 7 7 SUF
69 42 M
(for) s
/F-gs-font 7 7 SF
81.6 42 M
(\() s
/Courier-Bold 7 7 SUF
85.8 42 M
(int) s
/F-gs-font 7 7 SF
98.4 42 M
( j = i + 1; j < prices.length; j++\) {) s
18.6 34 M (58:) s
35.4 34 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 34 M
(if) s
/F-gs-font 7 7 SF
85.8 34 M
(\(prices[i] < prices[j]\) {) s
18.6 26 M (59:) s
35.4 26 M
(            ) s
/Courier-Bold 7 7 SUF
85.8 26 M
(int) s
/F-gs-font 7 7 SF
98.4 26 M
( potentialProfit = helper\(prices, j + 1, ) s
/Courier-Bold 7 7 SUF
270.6 26 M
(true) s
/F-gs-font 7 7 SF
287.4 26 M
(\) + \(prices[j] - prices[) s
5 18 M
(i]\);) s
18.6 10 M (60:) s
18.6 2 M (61:) s
35.4 2 M
(            maxProfit = Math.max\(maxProfit, potentialProfit\);) s
415.6 522 M (62:) s
432.4 522 M
(          }) s
415.6 514 M (63:) s
432.4 514 M
(        }) s
415.6 506 M (64:) s
432.4 506 M
(      }) s
415.6 498 M (65:) s
415.6 490 M (66:) s
432.4 490 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 490 M
(return) s
/F-gs-font 7 7 SF
482.8 490 M
( maxProfit;) s
415.6 482 M (67:) s
432.4 482 M
(    }) s
415.6 474 M (68:) s
432.4 474 M
(  }) s
415.6 466 M (69:) s
432.4 466 M
(}) s
_R
S
%%Page: (1) 114
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/ClimbingStairs.java) def
/fdir (./dp) def
/ftail (ClimbingStairs.java) def
% User defined strings:
/fmodstr (Sun Dec 16 22:13:00 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ClimbingStairs.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are climbing a stair case. It takes n steps to reach to the top.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Each time you can either climb 1 or 2 steps. In how many distinct ways can you cli) s
5 474 M
(mb to the top?) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Note: Given n will be a positive integer.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: 2) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation: There are two ways to climb to the top.) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  1. 1 step + 1 step) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  2. 2 steps) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Input: 3) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Explanation: There are three ways to climb to the top.) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  1. 1 step + 1 step + 1 step) s
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  2. 1 step + 2 steps) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  3. 2 steps + 1 step) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (26:) s
18.6 306 M (27:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( ClimbingStairs {) s
18.6 298 M (28:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( climbStairs\() s
/Courier-Bold 7 7 SUF
140.4 298 M
(int) s
/F-gs-font 7 7 SF
153 298 M
( n\) {) s
18.6 290 M (29:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(n <= 1\) ) s
/Courier-Bold 7 7 SUF
98.4 290 M
(return) s
/F-gs-font 7 7 SF
123.6 290 M
( n;) s
18.6 282 M (30:) s
18.6 274 M (31:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 274 M
(new) s
/F-gs-font 7 7 SF
111 274 M
( ) s
/Courier-Bold 7 7 SUF
115.2 274 M
(int) s
/F-gs-font 7 7 SF
127.8 274 M
([n];) s
18.6 266 M (32:) s
35.4 266 M
(    dp[0] = 1;) s
18.6 258 M (33:) s
35.4 258 M
(    dp[1] = 2;) s
18.6 250 M (34:) s
18.6 242 M (35:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(for) s
/F-gs-font 7 7 SF
64.8 242 M
(\() s
/Courier-Bold 7 7 SUF
69 242 M
(int) s
/F-gs-font 7 7 SF
81.6 242 M
( i = 2; i < n; i++\)) s
18.6 234 M (36:) s
35.4 234 M
(      dp[i] = dp[i-1] + dp[i-2];) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(return) s
/F-gs-font 7 7 SF
77.4 218 M
( dp[n-1];) s
18.6 210 M (39:) s
35.4 210 M
(  }) s
18.6 202 M (40:) s
35.4 202 M
(}) s
_R
S
%%Page: (1) 115
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/HouseRobber2.java) def
/fdir (./dp) def
/ftail (HouseRobber2.java) def
% User defined strings:
/fmodstr (Fri Jan 18 18:22:27 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (HouseRobber2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are a professional robber planning to rob houses along a street. Each house ha) s
5 490 M
(s a certain amount of money stashed. All houses at this place are arranged in a circle. That) s
5 482 M
( means the first house is the neighbor of the last one. Meanwhile, adjacent houses have secu) s
5 474 M
(rity system connected and it will automatically contact the police if two adjacent houses we) s
5 466 M
(re broken into on the same night.) s
/F-gs-font 7 7 SF
22.8 458 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Given a list of non-negative integers representing the amount of money of each hou) s
5 442 M
(se, determine the maximum amount of money you can rob tonight without alerting the police.) s
/F-gs-font 7 7 SF
22.8 434 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 418 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input: [2,3,2]) s
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Output: 3) s
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Explanation: You cannot rob house 1 \(money = 2\) and then rob house 3 \(money = 2\),) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  because they are adjacent houses.) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: [1,2,3,1]) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Explanation: Rob house 1 \(money = 1\) and then rob house 3 \(money = 3\).) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Total amount you can rob = 1 + 3 = 4.) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( */) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
18.6 314 M (22:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( Solution {) s
18.6 306 M (23:) s
35.4 306 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 306 M
(public) s
/F-gs-font 7 7 SF
69 306 M
( ) s
/Courier-Bold 7 7 SUF
73.2 306 M
(int) s
/F-gs-font 7 7 SF
85.8 306 M
( rob\() s
/Courier-Bold 7 7 SUF
106.8 306 M
(int) s
/F-gs-font 7 7 SF
119.4 306 M
([] nums\) {) s
18.6 298 M (24:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(if) s
/F-gs-font 7 7 SF
60.6 298 M
(\(nums.length == 0\) ) s
/Courier-Bold 7 7 SUF
140.4 298 M
(return) s
/F-gs-font 7 7 SF
165.6 298 M
( 0;) s
18.6 290 M (25:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(nums.length == 1\) ) s
/Courier-Bold 7 7 SUF
140.4 290 M
(return) s
/F-gs-font 7 7 SF
165.6 290 M
( nums[0];) s
18.6 282 M (26:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(if) s
/F-gs-font 7 7 SF
60.6 282 M
(\(nums.length == 2\) ) s
/Courier-Bold 7 7 SUF
140.4 282 M
(return) s
/F-gs-font 7 7 SF
165.6 282 M
( nums[0] < nums[1] ? nums[1] : nums[0];) s
18.6 274 M (27:) s
18.6 266 M (28:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
( length = nums.length;) s
18.6 258 M (29:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(int) s
/F-gs-font 7 7 SF
64.8 258 M
([][] dp = ) s
/Courier-Bold 7 7 SUF
106.8 258 M
(new) s
/F-gs-font 7 7 SF
119.4 258 M
( ) s
/Courier-Bold 7 7 SUF
123.6 258 M
(int) s
/F-gs-font 7 7 SF
136.2 258 M
([2][length];) s
18.6 250 M (30:) s
18.6 242 M (31:) s
35.4 242 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 242 M
(// from 0 to length-1) s
/F-gs-font 7 7 SF
18.6 234 M (32:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 234 M
(    dp[0][0] = nums[0];) s
18.6 226 M (33:) s
35.4 226 M
(    dp[0][1] = Math.max\(nums[0], nums[1]\);) s
18.6 218 M (34:) s
18.6 210 M (35:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( i = 2; i < length - 1; i++\) {) s
18.6 202 M (36:) s
35.4 202 M
(      dp[0][i] = Math.max\(dp[0][i-1], dp[0][i-2] + nums[i]\);) s
18.6 194 M (37:) s
35.4 194 M
(    }) s
18.6 186 M (38:) s
18.6 178 M (39:) s
35.4 178 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 178 M
(// from 1 to length) s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(    dp[1][1] = nums[1];) s
18.6 162 M (41:) s
35.4 162 M
(    dp[1][2] = Math.max\(nums[1], nums[2]\);) s
18.6 154 M (42:) s
18.6 146 M (43:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(for) s
/F-gs-font 7 7 SF
64.8 146 M
(\() s
/Courier-Bold 7 7 SUF
69 146 M
(int) s
/F-gs-font 7 7 SF
81.6 146 M
( i = 3; i < length; i++\) {) s
18.6 138 M (44:) s
35.4 138 M
(      dp[1][i] = Math.max\(dp[1][i-1], dp[1][i-2] + nums[i]\);) s
18.6 130 M (45:) s
35.4 130 M
(    }) s
18.6 122 M (46:) s
18.6 114 M (47:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(return) s
/F-gs-font 7 7 SF
77.4 114 M
( Math.max\(dp[0][length-2], dp[1][length-1]\);) s
18.6 106 M (48:) s
35.4 106 M
(  }) s
18.6 98 M (49:) s
35.4 98 M
(}) s
_R
S
%%Page: (1) 116
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/TargetSum.java) def
/fdir (./dp) def
/ftail (TargetSum.java) def
% User defined strings:
/fmodstr (Sun Apr 07 21:31:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (TargetSum.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. N) s
5 490 M
(ow you have 2 symbols + and -. For each integer, you should choose one from + and - as its n) s
5 482 M
(ew symbol.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Find out how many ways to assign symbols to make sum of integers equal to target S) s
5 458 M
(.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: nums is [1, 1, 1, 1, 1], S is 3.) s
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: 5) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  -1+1+1+1+1 = 3) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  +1-1+1+1+1 = 3) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  +1+1-1+1+1 = 3) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  +1+1+1-1+1 = 3) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  +1+1+1+1-1 = 3) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  There are 5 ways to assign symbols to make the sum of nums be target 3.) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  The length of the given array is positive and will not exceed 20.) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  The sum of elements in the given array will not exceed 1000.) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Your output answer is guaranteed to be fitted in a 32-bit integer.) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( */) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
18.6 298 M (26:) s
/Courier-Bold 7 7 SUF
35.4 298 M
(class) s
/F-gs-font 7 7 SF
56.4 298 M
( Solution {) s
18.6 290 M (27:) s
35.4 290 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 290 M
(// 1: recursion with memoization) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 282 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 282 M
(public) s
/F-gs-font 7 7 SF
69 282 M
( ) s
/Courier-Bold 7 7 SUF
73.2 282 M
(int) s
/F-gs-font 7 7 SF
85.8 282 M
( findTargetSumWays\() s
/Courier-Bold 7 7 SUF
165.6 282 M
(int) s
/F-gs-font 7 7 SF
178.2 282 M
([] nums, ) s
/Courier-Bold 7 7 SUF
216 282 M
(int) s
/F-gs-font 7 7 SF
228.6 282 M
( S\) {) s
18.6 274 M (29:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
( sum = 0;) s
18.6 266 M (30:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(for) s
/F-gs-font 7 7 SF
64.8 266 M
(\() s
/Courier-Bold 7 7 SUF
69 266 M
(int) s
/F-gs-font 7 7 SF
81.6 266 M
( num : nums\)) s
18.6 258 M (31:) s
35.4 258 M
(      sum += num;) s
18.6 250 M (32:) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(S > sum || S < -sum\) ) s
/Courier-Bold 7 7 SUF
153 242 M
(return) s
/F-gs-font 7 7 SF
178.2 242 M
( 0;) s
18.6 234 M (34:) s
18.6 226 M (35:) s
35.4 226 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 226 M
(// create memo of nums length with cols to keep -sum to sum) s
/F-gs-font 7 7 SF
18.6 218 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
([][] memo = ) s
/Courier-Bold 7 7 SUF
115.2 218 M
(new) s
/F-gs-font 7 7 SF
127.8 218 M
( ) s
/Courier-Bold 7 7 SUF
132 218 M
(int) s
/F-gs-font 7 7 SF
144.6 218 M
([nums.length][2 * sum + 1];) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
([] row : memo\)) s
18.6 202 M (38:) s
35.4 202 M
(      Arrays.fill\(row, -1\);) s
18.6 194 M (39:) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(return) s
/F-gs-font 7 7 SF
77.4 186 M
( helper\(memo, sum, nums, S, 0, 0\);) s
18.6 178 M (41:) s
35.4 178 M
(  }) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( ) s
/Courier-Bold 7 7 SUF
73.2 162 M
(int) s
/F-gs-font 7 7 SF
85.8 162 M
( helper\() s
/Courier-Bold 7 7 SUF
119.4 162 M
(int) s
/F-gs-font 7 7 SF
132 162 M
([][] memo, ) s
/Courier-Bold 7 7 SUF
178.2 162 M
(int) s
/F-gs-font 7 7 SF
190.8 162 M
( sum, ) s
/Courier-Bold 7 7 SUF
216 162 M
(int) s
/F-gs-font 7 7 SF
228.6 162 M
([] nums, ) s
/Courier-Bold 7 7 SUF
266.4 162 M
(int) s
/F-gs-font 7 7 SF
279 162 M
( S, ) s
/Courier-Bold 7 7 SUF
295.8 162 M
(int) s
/F-gs-font 7 7 SF
308.4 162 M
( current, ) s
/Courier-Bold 7 7 SUF
350.4 162 M
(int) s
/F-gs-font 7 7 SF
363 162 M
( index) s
5 154 M
(\) {) s
18.6 146 M (44:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(if) s
/F-gs-font 7 7 SF
60.6 146 M
(\(index >= nums.length\) {) s
18.6 138 M (45:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
(if) s
/F-gs-font 7 7 SF
69 138 M
(\(current == S\) ) s
/Courier-Bold 7 7 SUF
132 138 M
(return) s
/F-gs-font 7 7 SF
157.2 138 M
( 1;) s
18.6 130 M (46:) s
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
(return) s
/F-gs-font 7 7 SF
85.8 130 M
( 0;) s
18.6 122 M (47:) s
35.4 122 M
(    }) s
18.6 114 M (48:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(if) s
/F-gs-font 7 7 SF
60.6 114 M
(\(memo[index][current + sum] >= 0\) ) s
/Courier-Bold 7 7 SUF
203.4 114 M
(return) s
/F-gs-font 7 7 SF
228.6 114 M
( memo[index][current + sum];) s
18.6 106 M (49:) s
18.6 98 M (50:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(int) s
/F-gs-font 7 7 SF
64.8 98 M
( result =) s
18.6 90 M (51:) s
35.4 90 M
(      helper\(memo, nums, S, current - nums[index], index + 1\) +) s
18.6 82 M (52:) s
35.4 82 M
(      helper\(memo, nums, S, current + nums[index], index + 1\);) s
18.6 74 M (53:) s
18.6 66 M (54:) s
35.4 66 M
(    memo[index][current + sum] = result;) s
18.6 58 M (55:) s
18.6 50 M (56:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(return) s
/F-gs-font 7 7 SF
77.4 50 M
( result;) s
18.6 42 M (57:) s
35.4 42 M
(  }) s
18.6 34 M (58:) s
18.6 26 M (59:) s
35.4 26 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 26 M
(// 2: dp method to above recursion, same concept: keep track of branching tree) s
/F-gs-font 7 7 SF
18.6 18 M (60:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 18 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 18 M
(//    get the latest iteration of the tree and get S) s
/F-gs-font 7 7 SF
18.6 10 M (61:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 10 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 10 M
(public) s
/F-gs-font 7 7 SF
69 10 M
( ) s
/Courier-Bold 7 7 SUF
73.2 10 M
(int) s
/F-gs-font 7 7 SF
85.8 10 M
( findTargetSumWays\() s
/Courier-Bold 7 7 SUF
165.6 10 M
(int) s
/F-gs-font 7 7 SF
178.2 10 M
([] nums, ) s
/Courier-Bold 7 7 SUF
216 10 M
(int) s
/F-gs-font 7 7 SF
228.6 10 M
( S\) {) s
18.6 2 M (62:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(int) s
/F-gs-font 7 7 SF
64.8 2 M
( sum = 0;) s
415.6 522 M (63:) s
432.4 522 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 522 M
(for) s
/F-gs-font 7 7 SF
461.8 522 M
(\() s
/Courier-Bold 7 7 SUF
466 522 M
(int) s
/F-gs-font 7 7 SF
478.6 522 M
( num : nums\)) s
415.6 514 M (64:) s
432.4 514 M
(      sum += num;) s
415.6 506 M (65:) s
415.6 498 M (66:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(if) s
/F-gs-font 7 7 SF
457.6 498 M
(\(S > sum || S < -sum\) ) s
/Courier-Bold 7 7 SUF
550 498 M
(return) s
/F-gs-font 7 7 SF
575.2 498 M
( 0;) s
415.6 490 M (67:) s
415.6 482 M (68:) s
432.4 482 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 482 M
(int) s
/F-gs-font 7 7 SF
461.8 482 M
([][] dp = ) s
/Courier-Bold 7 7 SUF
503.8 482 M
(new) s
/F-gs-font 7 7 SF
516.4 482 M
( ) s
/Courier-Bold 7 7 SUF
520.6 482 M
(int) s
/F-gs-font 7 7 SF
533.2 482 M
([nums.length][2 * sum + 1];) s
415.6 474 M (69:) s
415.6 466 M (70:) s
432.4 466 M
(    dp[0][-nums[0] + sum] = 1;) s
415.6 458 M (71:) s
432.4 458 M
(    dp[0][nums[0] + sum] += 1;) s
415.6 450 M (72:) s
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(for) s
/F-gs-font 7 7 SF
461.8 450 M
(\() s
/Courier-Bold 7 7 SUF
466 450 M
(int) s
/F-gs-font 7 7 SF
478.6 450 M
( i = 1; i < nums.length; i++\) {) s
415.6 442 M (73:) s
432.4 442 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 442 M
(for) s
/F-gs-font 7 7 SF
470.2 442 M
(\() s
/Courier-Bold 7 7 SUF
474.4 442 M
(int) s
/F-gs-font 7 7 SF
487 442 M
( j = 0; j < dp[i].length; j++\) {) s
415.6 434 M (74:) s
432.4 434 M
(        ) s
/Courier-Bold 7 7 SUF
466 434 M
(if) s
/F-gs-font 7 7 SF
474.4 434 M
(\(dp[i - 1][j] > 0\) {) s
415.6 426 M (75:) s
432.4 426 M
(          ) s
/Courier-Oblique 7 7 SUF
474.4 426 M
(// add last iteration to current iteration) s
/F-gs-font 7 7 SF
415.6 418 M (76:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 418 M
(          ) s
/Courier-Oblique 7 7 SUF
474.4 418 M
(// j = runningSum from last iteration) s
/F-gs-font 7 7 SF
415.6 410 M (77:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 410 M
(          dp[i][j - nums[i]] += dp[i - 1][j];) s
415.6 402 M (78:) s
432.4 402 M
(          dp[i][j + nums[i]] += dp[i - 1][j];) s
415.6 394 M (79:) s
432.4 394 M
(        }) s
415.6 386 M (80:) s
432.4 386 M
(      }) s
415.6 378 M (81:) s
432.4 378 M
(    }) s
415.6 370 M (82:) s
415.6 362 M (83:) s
432.4 362 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 362 M
(return) s
/F-gs-font 7 7 SF
474.4 362 M
( dp[nums.length - 1][S + sum];) s
415.6 354 M (84:) s
432.4 354 M
(  }) s
415.6 346 M (85:) s
432.4 346 M
(}) s
_R
S
%%Page: (1) 117
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/HouseRobber.java) def
/fdir (./dp) def
/ftail (HouseRobber.java) def
% User defined strings:
/fmodstr (Sun Dec 16 00:39:01 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (HouseRobber.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  You are a professional robber planning to rob houses along a street. Each house ha) s
5 490 M
(s a certain amount of money stashed, the only constraint stopping you from robbing each of t) s
5 482 M
(hem is that adjacent houses have security system connected and it will automatically contact) s
5 474 M
( the police if two adjacent houses were broken into on the same night.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Given a list of non-negative integers representing the amount of money of each hou) s
5 450 M
(se, determine the maximum amount of money you can rob tonight without alerting the police.) s
/F-gs-font 7 7 SF
22.8 442 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Input: [1,2,3,1]) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Output: 4) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Explanation: Rob house 1 \(money = 1\) and then rob house 3 \(money = 3\).) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Total amount you can rob = 1 + 3 = 4.) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Input: [2,7,9,3,1]) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Output: 12) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Explanation: Rob house 1 \(money = 2\), rob house 3 \(money = 9\) and rob house 5 \(mon) s
5 346 M
(ey = 1\).) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Total amount you can rob = 2 + 9 + 1 = 12.) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( */) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
18.6 314 M (22:) s
/Courier-Bold 7 7 SUF
35.4 314 M
(class) s
/F-gs-font 7 7 SF
56.4 314 M
( HouseRobber {) s
18.6 306 M (23:) s
35.4 306 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 306 M
(// iterative approach) s
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( rob\() s
/Courier-Bold 7 7 SUF
106.8 298 M
(int) s
/F-gs-font 7 7 SF
119.4 298 M
([] nums\) {) s
18.6 290 M (25:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(nums.length == 0\) ) s
/Courier-Bold 7 7 SUF
140.4 290 M
(return) s
/F-gs-font 7 7 SF
165.6 290 M
( 0;) s
18.6 282 M (26:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(if) s
/F-gs-font 7 7 SF
60.6 282 M
(\(nums.length == 1\) ) s
/Courier-Bold 7 7 SUF
140.4 282 M
(return) s
/F-gs-font 7 7 SF
165.6 282 M
( nums[0];) s
18.6 274 M (27:) s
18.6 266 M (28:) s
35.4 266 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 266 M
(int) s
/F-gs-font 7 7 SF
64.8 266 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 266 M
(new) s
/F-gs-font 7 7 SF
111 266 M
( ) s
/Courier-Bold 7 7 SUF
115.2 266 M
(int) s
/F-gs-font 7 7 SF
127.8 266 M
([nums.length];) s
18.6 258 M (29:) s
35.4 258 M
(    dp[0] = nums[0];) s
18.6 250 M (30:) s
35.4 250 M
(    dp[1] = Math.max\(nums[0], nums[1]\);) s
18.6 242 M (31:) s
18.6 234 M (32:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(for) s
/F-gs-font 7 7 SF
64.8 234 M
(\() s
/Courier-Bold 7 7 SUF
69 234 M
(int) s
/F-gs-font 7 7 SF
81.6 234 M
( i = 2; i < nums.length; i++\) {) s
18.6 226 M (33:) s
35.4 226 M
(      dp[i] = Math.max\(dp[i - 1], dp[i - 2] + nums[i]\);) s
18.6 218 M (34:) s
35.4 218 M
(    }) s
18.6 210 M (35:) s
18.6 202 M (36:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(return) s
/F-gs-font 7 7 SF
77.4 202 M
( dp[dp.length - 1];) s
18.6 194 M (37:) s
35.4 194 M
(  }) s
18.6 186 M (38:) s
18.6 178 M (39:) s
35.4 178 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 178 M
(// recursive approach) s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 170 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 170 M
(public) s
/F-gs-font 7 7 SF
69 170 M
( ) s
/Courier-Bold 7 7 SUF
73.2 170 M
(int) s
/F-gs-font 7 7 SF
85.8 170 M
( rob2\() s
/Courier-Bold 7 7 SUF
111 170 M
(int) s
/F-gs-font 7 7 SF
123.6 170 M
([] nums\) {) s
18.6 162 M (41:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(int) s
/F-gs-font 7 7 SF
64.8 162 M
([] dp = ) s
/Courier-Bold 7 7 SUF
98.4 162 M
(new) s
/F-gs-font 7 7 SF
111 162 M
( ) s
/Courier-Bold 7 7 SUF
115.2 162 M
(int) s
/F-gs-font 7 7 SF
127.8 162 M
([nums.length];) s
18.6 154 M (42:) s
35.4 154 M
(    Arrays.fill\(dp, -1\);) s
18.6 146 M (43:) s
18.6 138 M (44:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(return) s
/F-gs-font 7 7 SF
77.4 138 M
( Math.max\(robRecursive\(nums, dp, 0\), robRecursive\(nums, dp, 1\)\);) s
18.6 130 M (45:) s
35.4 130 M
(  }) s
18.6 122 M (46:) s
18.6 114 M (47:) s
35.4 114 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 114 M
(public) s
/F-gs-font 7 7 SF
69 114 M
( ) s
/Courier-Bold 7 7 SUF
73.2 114 M
(int) s
/F-gs-font 7 7 SF
85.8 114 M
( robRecursive\() s
/Courier-Bold 7 7 SUF
144.6 114 M
(int) s
/F-gs-font 7 7 SF
157.2 114 M
([] nums, ) s
/Courier-Bold 7 7 SUF
195 114 M
(int) s
/F-gs-font 7 7 SF
207.6 114 M
([] dp, ) s
/Courier-Bold 7 7 SUF
237 114 M
(int) s
/F-gs-font 7 7 SF
249.6 114 M
( index\) {) s
18.6 106 M (48:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(if) s
/F-gs-font 7 7 SF
60.6 106 M
(\(index >= nums.length\) ) s
/Courier-Bold 7 7 SUF
157.2 106 M
(return) s
/F-gs-font 7 7 SF
182.4 106 M
( 0;) s
18.6 98 M (49:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(if) s
/F-gs-font 7 7 SF
60.6 98 M
(\(dp[index] > -1\) ) s
/Courier-Bold 7 7 SUF
132 98 M
(return) s
/F-gs-font 7 7 SF
157.2 98 M
( dp[index];) s
18.6 90 M (50:) s
18.6 82 M (51:) s
35.4 82 M
(    dp[index] = nums[index] + Math.max\(robRecursive\(nums, dp, index + 2\), robRecursi) s
5 74 M
(ve\(nums, dp, index + 3\)\);) s
18.6 66 M (52:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(return) s
/F-gs-font 7 7 SF
77.4 66 M
( dp[index];) s
18.6 58 M (53:) s
35.4 58 M
(  }) s
18.6 50 M (54:) s
35.4 50 M
(}) s
_R
S
%%Page: (1) 118
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./dp/MinimumFallingPathSum.java) def
/fdir (./dp) def
/ftail (MinimumFallingPathSum.java) def
% User defined strings:
/fmodstr (Fri Feb 22 17:04:40 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MinimumFallingPathSum.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a square array of integers A, we want the minimum sum of a falling path thro) s
5 490 M
(ugh A.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  A falling path starts at any element in the first row, and chooses one element fro) s
5 466 M
(m each row.  The next row's choice must be in a column that is different from the previous r) s
5 458 M
(ow's column by at most one.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input: [[1,2,3],[4,5,6],[7,8,9]]) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Output: 12) s
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  The possible falling paths are:) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  [1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  [2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  [3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  The falling path with the smallest sum is [1,4,7], so the answer is 12.) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  1 <= A.length == A[0].length <= 100) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  -100 <= A[i][j] <= 100) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
18.6 306 M (25:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (26:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( ) s
/Courier-Bold 7 7 SUF
73.2 298 M
(int) s
/F-gs-font 7 7 SF
85.8 298 M
( minFallingPathSum\() s
/Courier-Bold 7 7 SUF
165.6 298 M
(int) s
/F-gs-font 7 7 SF
178.2 298 M
([][] A\) {) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(A.length == 0\) ) s
/Courier-Bold 7 7 SUF
127.8 290 M
(return) s
/F-gs-font 7 7 SF
153 290 M
( 0;) s
18.6 282 M (28:) s
18.6 274 M (29:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(int) s
/F-gs-font 7 7 SF
64.8 274 M
([][] dp = ) s
/Courier-Bold 7 7 SUF
106.8 274 M
(new) s
/F-gs-font 7 7 SF
119.4 274 M
( ) s
/Courier-Bold 7 7 SUF
123.6 274 M
(int) s
/F-gs-font 7 7 SF
136.2 274 M
([A.length][A.length];) s
18.6 266 M (30:) s
18.6 258 M (31:) s
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(for) s
/F-gs-font 7 7 SF
64.8 258 M
(\() s
/Courier-Bold 7 7 SUF
69 258 M
(int) s
/F-gs-font 7 7 SF
81.6 258 M
( i = 0; i < A[0].length; i++\)) s
18.6 250 M (32:) s
35.4 250 M
(      dp[0][i] = A[0][i];) s
18.6 242 M (33:) s
18.6 234 M (34:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
( min = Integer.MAX_VALUE;) s
18.6 226 M (35:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(for) s
/F-gs-font 7 7 SF
64.8 226 M
(\() s
/Courier-Bold 7 7 SUF
69 226 M
(int) s
/F-gs-font 7 7 SF
81.6 226 M
( row = 1; row < A.length; row++\) {) s
18.6 218 M (36:) s
35.4 218 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 218 M
(for) s
/F-gs-font 7 7 SF
73.2 218 M
(\() s
/Courier-Bold 7 7 SUF
77.4 218 M
(int) s
/F-gs-font 7 7 SF
90 218 M
( col = 0; col < A[row].length; col++\) {) s
18.6 210 M (37:) s
35.4 210 M
(        ) s
/Courier-Bold 7 7 SUF
69 210 M
(if) s
/F-gs-font 7 7 SF
77.4 210 M
(\(col == 0\) {) s
18.6 202 M (38:) s
35.4 202 M
(          dp[row][col] = Math.min\(dp[row - 1][col], dp[row - 1][col + 1]\);) s
18.6 194 M (39:) s
35.4 194 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 194 M
(else) s
/F-gs-font 7 7 SF
94.2 194 M
( ) s
/Courier-Bold 7 7 SUF
98.4 194 M
(if) s
/F-gs-font 7 7 SF
106.8 194 M
(\(col == A[row].length - 1\) {) s
18.6 186 M (40:) s
35.4 186 M
(          dp[row][col] = Math.min\(dp[row - 1][col - 1], dp[row - 1][col]\);) s
18.6 178 M (41:) s
35.4 178 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 178 M
(else) s
/F-gs-font 7 7 SF
94.2 178 M
( {) s
18.6 170 M (42:) s
35.4 170 M
(          dp[row][col] = Math.min\(Math.min\(dp[row - 1][col - 1], dp[row - 1][col]\), ) s
5 162 M
(dp[row - 1][col + 1]\);) s
18.6 154 M (43:) s
35.4 154 M
(        }) s
18.6 146 M (44:) s
35.4 146 M
(        dp[row][col] += + A[row][col];) s
18.6 138 M (45:) s
35.4 138 M
(      }) s
18.6 130 M (46:) s
35.4 130 M
(    }) s
18.6 122 M (47:) s
18.6 114 M (48:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(for) s
/F-gs-font 7 7 SF
64.8 114 M
(\() s
/Courier-Bold 7 7 SUF
69 114 M
(int) s
/F-gs-font 7 7 SF
81.6 114 M
( i = 0; i < A[0].length; i++\)) s
18.6 106 M (49:) s
35.4 106 M
(      min = Math.min\(min, dp[A.length - 1][i]\);) s
18.6 98 M (50:) s
18.6 90 M (51:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(return) s
/F-gs-font 7 7 SF
77.4 90 M
( min;) s
18.6 82 M (52:) s
35.4 82 M
(  }) s
18.6 74 M (53:) s
35.4 74 M
(}) s
_R
S
%%Page: (1) 119
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./queues/TaskScheduler.java) def
/fdir (./queues) def
/ftail (TaskScheduler.java) def
% User defined strings:
/fmodstr (Sun Apr 07 16:12:18 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (TaskScheduler.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a char array representing tasks CPU need to do. It contains capital letters ) s
5 490 M
(A to Z where different letters represent different tasks. Tasks could be done without origin) s
5 482 M
(al order. Each task could be done in one interval. For each interval, CPU could finish one t) s
5 474 M
(ask or just be idle.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  However, there is a non-negative cooling interval n that means between two same ta) s
5 450 M
(sks, there must be at least n intervals that CPU are doing different tasks or just be idle.) s
/F-gs-font 7 7 SF
22.8 442 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  You need to return the least number of intervals the CPU will take to finish all t) s
5 426 M
(he given tasks.) s
/F-gs-font 7 7 SF
22.8 418 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Input: tasks = ["A","A","A","B","B","B"], n = 2) s
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: 8) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Explanation: A -> B -> idle -> A -> B -> idle -> A -> B.) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  The number of tasks is in the range [1, 10000].) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  The integer n is in the range [0, 100].) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (22:) s
18.6 306 M (23:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (24:) s
35.4 298 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 298 M
(// 1: priority queue and stack) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 290 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 290 M
(public) s
/F-gs-font 7 7 SF
69 290 M
( ) s
/Courier-Bold 7 7 SUF
73.2 290 M
(int) s
/F-gs-font 7 7 SF
85.8 290 M
( leastInterval\() s
/Courier-Bold 7 7 SUF
148.8 290 M
(char) s
/F-gs-font 7 7 SF
165.6 290 M
([] tasks, ) s
/Courier-Bold 7 7 SUF
207.6 290 M
(int) s
/F-gs-font 7 7 SF
220.2 290 M
( n\) {) s
18.6 282 M (26:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(int) s
/F-gs-font 7 7 SF
64.8 282 M
( count = 0;) s
18.6 274 M (27:) s
18.6 266 M (28:) s
35.4 266 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 266 M
(// count occurrence of each task) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 258 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 258 M
(int) s
/F-gs-font 7 7 SF
64.8 258 M
([] taskCounts = ) s
/Courier-Bold 7 7 SUF
132 258 M
(new) s
/F-gs-font 7 7 SF
144.6 258 M
( ) s
/Courier-Bold 7 7 SUF
148.8 258 M
(int) s
/F-gs-font 7 7 SF
161.4 258 M
([26];) s
18.6 250 M (30:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
(\() s
/Courier-Bold 7 7 SUF
69 250 M
(int) s
/F-gs-font 7 7 SF
81.6 250 M
( i = 0; i < tasks.length; i++\)) s
18.6 242 M (31:) s
35.4 242 M
(      taskCounts[tasks[i] - ) s
/Courier-Bold 7 7 SUF
153 242 M
('A') s
/F-gs-font 7 7 SF
165.6 242 M
(]++;) s
18.6 234 M (32:) s
18.6 226 M (33:) s
35.4 226 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 226 M
(// put counts into a priority queue) s
/F-gs-font 7 7 SF
18.6 218 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 218 M
(    PriorityQueue<Integer> pq = ) s
/Courier-Bold 7 7 SUF
169.8 218 M
(new) s
/F-gs-font 7 7 SF
182.4 218 M
( PriorityQueue<>\(26, Collections.reverseOrder\(\)\);) s
18.6 210 M (35:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(for) s
/F-gs-font 7 7 SF
64.8 210 M
(\() s
/Courier-Bold 7 7 SUF
69 210 M
(int) s
/F-gs-font 7 7 SF
81.6 210 M
( i = 0; i < taskCounts.length; i++\) {) s
18.6 202 M (36:) s
35.4 202 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 202 M
(if) s
/F-gs-font 7 7 SF
69 202 M
(\(taskCounts[i] == 0\) ) s
/Courier-Bold 7 7 SUF
157.2 202 M
(continue) s
/F-gs-font 7 7 SF
190.8 202 M
(;) s
18.6 194 M (37:) s
18.6 186 M (38:) s
35.4 186 M
(      pq.offer\(taskCounts[i]\);) s
18.6 178 M (39:) s
35.4 178 M
(    }) s
18.6 170 M (40:) s
18.6 162 M (41:) s
35.4 162 M
(    Stack<Integer> tasksToExecute = ) s
/Courier-Bold 7 7 SUF
186.6 162 M
(new) s
/F-gs-font 7 7 SF
199.2 162 M
( Stack<>\(\);) s
18.6 154 M (42:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(int) s
/F-gs-font 7 7 SF
64.8 154 M
( idles = 0;) s
18.6 146 M (43:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(while) s
/F-gs-font 7 7 SF
73.2 146 M
(\(!pq.isEmpty\(\)\) {) s
18.6 138 M (44:) s
35.4 138 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 138 M
(// when pq is not empty and stack size is not n yet) s
/F-gs-font 7 7 SF
18.6 130 M (45:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
(while) s
/F-gs-font 7 7 SF
81.6 130 M
(\(!pq.isEmpty\(\) && tasksToExecute.size\(\) < n + 1\) {) s
18.6 122 M (46:) s
35.4 122 M
(        tasksToExecute.push\(pq.poll\(\)\);) s
18.6 114 M (47:) s
35.4 114 M
(      }) s
18.6 106 M (48:) s
18.6 98 M (49:) s
35.4 98 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 98 M
(// calculate the number of idles due to lack of distinct tasks) s
/F-gs-font 7 7 SF
18.6 90 M (50:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 90 M
(      idles = n + 1 - tasksToExecute.size\(\);) s
18.6 82 M (51:) s
18.6 74 M (52:) s
35.4 74 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 74 M
(// increment the count) s
/F-gs-font 7 7 SF
18.6 66 M (53:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 66 M
(      count += n + 1;) s
18.6 58 M (54:) s
18.6 50 M (55:) s
35.4 50 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 50 M
(// put back the tasks back to the priority queue) s
/F-gs-font 7 7 SF
18.6 42 M (56:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 42 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 42 M
(while) s
/F-gs-font 7 7 SF
81.6 42 M
(\(!tasksToExecute.isEmpty\(\)\) {) s
18.6 34 M (57:) s
35.4 34 M
(        ) s
/Courier-Bold 7 7 SUF
69 34 M
(int) s
/F-gs-font 7 7 SF
81.6 34 M
( taskCount = tasksToExecute.pop\(\);) s
18.6 26 M (58:) s
18.6 18 M (59:) s
35.4 18 M
(        ) s
/Courier-Bold 7 7 SUF
69 18 M
(if) s
/F-gs-font 7 7 SF
77.4 18 M
(\(taskCount > 1\) pq.offer\(taskCount - 1\);) s
18.6 10 M (60:) s
35.4 10 M
(      }) s
18.6 2 M (61:) s
35.4 2 M
(    }) s
415.6 522 M (62:) s
415.6 514 M (63:) s
432.4 514 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 514 M
(// decrement the tail idles) s
/F-gs-font 7 7 SF
415.6 506 M (64:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 506 M
(    count -= idles;) s
415.6 498 M (65:) s
415.6 490 M (66:) s
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(return) s
/F-gs-font 7 7 SF
474.4 490 M
( count;) s
415.6 482 M (67:) s
432.4 482 M
(  }) s
415.6 474 M (68:) s
415.6 466 M (69:) s
432.4 466 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 466 M
(// 2: counting the idleSpots) s
/F-gs-font 7 7 SF
415.6 458 M (70:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 458 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 458 M
(public) s
/F-gs-font 7 7 SF
466 458 M
( ) s
/Courier-Bold 7 7 SUF
470.2 458 M
(int) s
/F-gs-font 7 7 SF
482.8 458 M
( leastInterval\() s
/Courier-Bold 7 7 SUF
545.8 458 M
(char) s
/F-gs-font 7 7 SF
562.6 458 M
([] tasks, ) s
/Courier-Bold 7 7 SUF
604.6 458 M
(int) s
/F-gs-font 7 7 SF
617.2 458 M
( n\) {) s
415.6 450 M (71:) s
432.4 450 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 450 M
(int) s
/F-gs-font 7 7 SF
461.8 450 M
([] taskCounts = ) s
/Courier-Bold 7 7 SUF
529 450 M
(new) s
/F-gs-font 7 7 SF
541.6 450 M
( ) s
/Courier-Bold 7 7 SUF
545.8 450 M
(int) s
/F-gs-font 7 7 SF
558.4 450 M
([26];) s
415.6 442 M (72:) s
432.4 442 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 442 M
(for) s
/F-gs-font 7 7 SF
461.8 442 M
(\() s
/Courier-Bold 7 7 SUF
466 442 M
(char) s
/F-gs-font 7 7 SF
482.8 442 M
( c : tasks\)) s
415.6 434 M (73:) s
432.4 434 M
(      taskCounts[c - ) s
/Courier-Bold 7 7 SUF
520.6 434 M
('A') s
/F-gs-font 7 7 SF
533.2 434 M
(]++;) s
415.6 426 M (74:) s
415.6 418 M (75:) s
432.4 418 M
(    Arrays.sort\(taskCounts\);) s
415.6 410 M (76:) s
415.6 402 M (77:) s
432.4 402 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 402 M
(int) s
/F-gs-font 7 7 SF
461.8 402 M
( maxVal = taskCounts[taskCounts.length - 1] - 1;) s
415.6 394 M (78:) s
432.4 394 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 394 M
(int) s
/F-gs-font 7 7 SF
461.8 394 M
( idleSpots = maxVal * n;) s
415.6 386 M (79:) s
432.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 386 M
(for) s
/F-gs-font 7 7 SF
461.8 386 M
(\() s
/Courier-Bold 7 7 SUF
466 386 M
(int) s
/F-gs-font 7 7 SF
478.6 386 M
( i = 0; i < 25; i++\) {) s
415.6 378 M (80:) s
432.4 378 M
(      ) s
/Courier-Oblique 7 7 SUF
457.6 378 M
(// need to do min here so that other values with val == maxVal+1 will be cappe) s
402 370 M
(d) s
/F-gs-font 7 7 SF
415.6 362 M (81:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 362 M
(      idleSpots -= Math.min\(taskCounts[i], maxVal\);) s
415.6 354 M (82:) s
432.4 354 M
(    }) s
415.6 346 M (83:) s
415.6 338 M (84:) s
432.4 338 M
(    ) s
/Courier-Oblique 7 7 SUF
449.2 338 M
(// when n = 0, idleSpots will be 0 and values will be negative on substractions) s
/F-gs-font 7 7 SF
415.6 330 M (85:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 330 M
(return) s
/F-gs-font 7 7 SF
474.4 330 M
( idleSpots > 0 ? idleSpots + tasks.length : tasks.length;) s
415.6 322 M (86:) s
432.4 322 M
(  }) s
415.6 314 M (87:) s
432.4 314 M
(}) s
_R
S
%%Page: (1) 120
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./queues/QueueReconstructionByHeight.java) def
/fdir (./queues) def
/ftail (QueueReconstructionByHeight.java) def
% User defined strings:
/fmodstr (Sun Apr 07 23:10:53 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (QueueReconstructionByHeight.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Suppose you have a random list of people standing in a queue. Each person is descr) s
5 490 M
(ibed by a pair of integers \(h, k\), where h is the height of the person and k is the number o) s
5 482 M
(f people in front of this person who have a height greater than or equal to h. Write an algo) s
5 474 M
(rithm to reconstruct the queue.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  The number of people is less than 1,100.) s
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Example) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output:) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  [[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( Solution {) s
18.6 354 M (19:) s
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(public) s
/F-gs-font 7 7 SF
69 354 M
( ) s
/Courier-Bold 7 7 SUF
73.2 354 M
(int) s
/F-gs-font 7 7 SF
85.8 354 M
([][] reconstructQueue\() s
/Courier-Bold 7 7 SUF
178.2 354 M
(int) s
/F-gs-font 7 7 SF
190.8 354 M
([][] people\) {) s
18.6 346 M (20:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(if) s
/F-gs-font 7 7 SF
60.6 346 M
( \(people == ) s
/Courier-Bold 7 7 SUF
111 346 M
(null) s
/F-gs-font 7 7 SF
127.8 346 M
( || people.length == 0\) {) s
18.6 338 M (21:) s
35.4 338 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 338 M
(return) s
/F-gs-font 7 7 SF
85.8 338 M
( people;) s
18.6 330 M (22:) s
35.4 330 M
(    }) s
18.6 322 M (23:) s
18.6 314 M (24:) s
35.4 314 M
(    Arrays.sort\(people, \(a, b\) -> {) s
18.6 306 M (25:) s
35.4 306 M
(        ) s
/Courier-Bold 7 7 SUF
69 306 M
(if) s
/F-gs-font 7 7 SF
77.4 306 M
(\(a[0] == b[0]\)) s
18.6 298 M (26:) s
35.4 298 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 298 M
(return) s
/F-gs-font 7 7 SF
102.6 298 M
( a[1] - b[1]; ) s
/Courier-Oblique 7 7 SUF
161.4 298 M
(// sort internal order by increasing order) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 290 M
(        ) s
/Courier-Bold 7 7 SUF
69 290 M
(else) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
35.4 282 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 282 M
(return) s
/F-gs-font 7 7 SF
102.6 282 M
( b[0] - a[0]; ) s
/Courier-Oblique 7 7 SUF
161.4 282 M
(// sort height by descending order) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 274 M
(      }\);) s
18.6 266 M (30:) s
18.6 258 M (31:) s
35.4 258 M
(    List<) s
/Courier-Bold 7 7 SUF
73.2 258 M
(int) s
/F-gs-font 7 7 SF
85.8 258 M
([]> q = ) s
/Courier-Bold 7 7 SUF
119.4 258 M
(new) s
/F-gs-font 7 7 SF
132 258 M
( LinkedList<>\(\);) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
( \() s
/Courier-Bold 7 7 SUF
73.2 250 M
(int) s
/F-gs-font 7 7 SF
85.8 250 M
( i = 0; i < people.length; i++\) {) s
18.6 242 M (33:) s
35.4 242 M
(      ) s
/Courier-Oblique 7 7 SUF
60.6 242 M
(// Keep placing from the highest height as per their internal order.) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 234 M
(      q.add\(people[i][1], people[i]\);) s
18.6 226 M (35:) s
35.4 226 M
(    }) s
18.6 218 M (36:) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(return) s
/F-gs-font 7 7 SF
77.4 210 M
( q.toArray\() s
/Courier-Bold 7 7 SUF
123.6 210 M
(new) s
/F-gs-font 7 7 SF
136.2 210 M
( ) s
/Courier-Bold 7 7 SUF
140.4 210 M
(int) s
/F-gs-font 7 7 SF
153 210 M
([people.length][2]\);) s
18.6 202 M (38:) s
35.4 202 M
(  }) s
18.6 194 M (39:) s
35.4 194 M
(}) s
_R
S
%%Page: (1) 121
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/FriendCircles.java) def
/fdir (./graphs) def
/ftail (FriendCircles.java) def
% User defined strings:
/fmodstr (Fri Mar 01 18:22:00 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FriendCircles.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  There are N students in a class. Some of them are friends, while some are not. The) s
5 506 M
(ir friendship is transitive in nature. For example, if A is a direct friend of B, and B is a) s
5 498 M
( direct friend of C, then A is an indirect friend of C. And we defined a friend circle is a ) s
5 490 M
(group of students who are direct or indirect friends.) s
/F-gs-font 7 7 SF
22.8 482 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Given a N*N matrix M representing the friend relationship between students in the ) s
5 466 M
(class. If M[i][j] = 1, then the ith and jth students are direct friends with each other, oth) s
5 458 M
(erwise not. And you have to output the total number of friend circles among all the students) s
5 450 M
(.) s
/F-gs-font 7 7 SF
22.8 442 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 426 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Input:) s
/F-gs-font 7 7 SF
22.8 418 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  [[1,1,0],) s
/F-gs-font 7 7 SF
22.8 410 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  [1,1,0],) s
/F-gs-font 7 7 SF
18.6 402 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  [0,0,1]]) s
/F-gs-font 7 7 SF
18.6 394 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 2) s
/F-gs-font 7 7 SF
18.6 386 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation:The 0th and 1st students are direct friends, so they are in a friend c) s
5 378 M
(ircle.) s
/F-gs-font 7 7 SF
18.6 370 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  The 2nd student himself is in a friend circle. So return 2.) s
/F-gs-font 7 7 SF
18.6 362 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 354 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input:) s
/F-gs-font 7 7 SF
18.6 346 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  [[1,1,0],) s
/F-gs-font 7 7 SF
18.6 338 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  [1,1,1],) s
/F-gs-font 7 7 SF
18.6 330 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  [0,1,1]]) s
/F-gs-font 7 7 SF
18.6 322 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Output: 1) s
/F-gs-font 7 7 SF
18.6 314 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Explanation:The 0th and 1st students are direct friends, the 1st and 2nd students ) s
5 306 M
(are direct friends,) s
/F-gs-font 7 7 SF
18.6 298 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  so the 0th and 2nd students are indirect friends. All of them are in the same frie) s
5 290 M
(nd circle, so return 1.) s
/F-gs-font 7 7 SF
18.6 282 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 274 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  N is in range [1,200].) s
/F-gs-font 7 7 SF
18.6 266 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  M[i][i] = 1 for all students.) s
/F-gs-font 7 7 SF
18.6 258 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  If M[i][j] = 1, then M[j][i] = 1.) s
/F-gs-font 7 7 SF
18.6 250 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( */) s
/F-gs-font 7 7 SF
18.6 242 M (27:) s
18.6 234 M (28:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (29:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(int) s
/F-gs-font 7 7 SF
85.8 226 M
( findCircleNum\() s
/Courier-Bold 7 7 SUF
148.8 226 M
(int) s
/F-gs-font 7 7 SF
161.4 226 M
([][] M\) {) s
18.6 218 M (30:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(int) s
/F-gs-font 7 7 SF
64.8 218 M
([] subsets = ) s
/Courier-Bold 7 7 SUF
119.4 218 M
(new) s
/F-gs-font 7 7 SF
132 218 M
( ) s
/Courier-Bold 7 7 SUF
136.2 218 M
(int) s
/F-gs-font 7 7 SF
148.8 218 M
([M.length];) s
18.6 210 M (31:) s
18.6 202 M (32:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(for) s
/F-gs-font 7 7 SF
64.8 202 M
(\() s
/Courier-Bold 7 7 SUF
69 202 M
(int) s
/F-gs-font 7 7 SF
81.6 202 M
( i = 0; i < M.length; i++\)) s
18.6 194 M (33:) s
35.4 194 M
(      subsets[i] = i;) s
18.6 186 M (34:) s
18.6 178 M (35:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( i = 0; i < M.length; i++\) {) s
18.6 170 M (36:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(for) s
/F-gs-font 7 7 SF
73.2 170 M
(\() s
/Courier-Bold 7 7 SUF
77.4 170 M
(int) s
/F-gs-font 7 7 SF
90 170 M
( j = i; j < M.length; j++\) {) s
18.6 162 M (37:) s
35.4 162 M
(        ) s
/Courier-Bold 7 7 SUF
69 162 M
(if) s
/F-gs-font 7 7 SF
77.4 162 M
(\(M[i][j] == 1\) {) s
18.6 154 M (38:) s
35.4 154 M
(          union\(subsets, i, j\);) s
18.6 146 M (39:) s
35.4 146 M
(        }) s
18.6 138 M (40:) s
35.4 138 M
(      }) s
18.6 130 M (41:) s
35.4 130 M
(    }) s
18.6 122 M (42:) s
18.6 114 M (43:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(int) s
/F-gs-font 7 7 SF
64.8 114 M
( counter = 0;) s
18.6 106 M (44:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(for) s
/F-gs-font 7 7 SF
64.8 106 M
(\() s
/Courier-Bold 7 7 SUF
69 106 M
(int) s
/F-gs-font 7 7 SF
81.6 106 M
( i = 0; i < subsets.length; i++\)) s
18.6 98 M (45:) s
35.4 98 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 98 M
(if) s
/F-gs-font 7 7 SF
69 98 M
(\(subsets[i] == i\)) s
18.6 90 M (46:) s
35.4 90 M
(        counter++;) s
18.6 82 M (47:) s
18.6 74 M (48:) s
35.4 74 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 74 M
(return) s
/F-gs-font 7 7 SF
77.4 74 M
( counter;) s
18.6 66 M (49:) s
35.4 66 M
(  }) s
18.6 58 M (50:) s
18.6 50 M (51:) s
35.4 50 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 50 M
(public) s
/F-gs-font 7 7 SF
69 50 M
( ) s
/Courier-Bold 7 7 SUF
73.2 50 M
(int) s
/F-gs-font 7 7 SF
85.8 50 M
( find\() s
/Courier-Bold 7 7 SUF
111 50 M
(int) s
/F-gs-font 7 7 SF
123.6 50 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
174 50 M
(int) s
/F-gs-font 7 7 SF
186.6 50 M
( x\) {) s
18.6 42 M (52:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(if) s
/F-gs-font 7 7 SF
60.6 42 M
(\(subsets[x] != x\) subsets[x] = find\(subsets, subsets[x]\);) s
18.6 34 M (53:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(return) s
/F-gs-font 7 7 SF
77.4 34 M
( subsets[x];) s
18.6 26 M (54:) s
35.4 26 M
(  }) s
18.6 18 M (55:) s
18.6 10 M (56:) s
35.4 10 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 10 M
(public) s
/F-gs-font 7 7 SF
69 10 M
( ) s
/Courier-Bold 7 7 SUF
73.2 10 M
(void) s
/F-gs-font 7 7 SF
90 10 M
( union\() s
/Courier-Bold 7 7 SUF
119.4 10 M
(int) s
/F-gs-font 7 7 SF
132 10 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
182.4 10 M
(int) s
/F-gs-font 7 7 SF
195 10 M
( x, ) s
/Courier-Bold 7 7 SUF
211.8 10 M
(int) s
/F-gs-font 7 7 SF
224.4 10 M
( y\) {) s
18.6 2 M (57:) s
35.4 2 M
(    subsets[find\(subsets, x\)] = find\(subsets, y\);) s
415.6 522 M (58:) s
432.4 522 M
(  }) s
415.6 514 M (59:) s
432.4 514 M
(}) s
_R
S
%%Page: (1) 122
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/NetworkDelayTime.java) def
/fdir (./graphs) def
/ftail (NetworkDelayTime.java) def
% User defined strings:
/fmodstr (Tue Feb 19 00:32:44 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (NetworkDelayTime.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  There are N network nodes, labelled 1 to N.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Given times, a list of travel times as directed edges times[i] = \(u, v, w\), where ) s
5 474 M
(u is the source node, v is the target node, and w is the time it takes for a signal to trave) s
5 466 M
(l from source to target.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Now, we send a signal from a certain node K. How long will it take for all nodes t) s
5 442 M
(o receive the signal? If it is impossible, return -1.) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  N will be in the range [1, 100].) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  K will be in the range [1, N].) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  The length of times will be in the range [1, 6000].) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  All edges times[i] = \(u, v, w\) will have 1 <= u, v <= N and 0 <= w <= 100.) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( */) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
18.6 362 M (18:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( Solution {) s
18.6 354 M (19:) s
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(public) s
/F-gs-font 7 7 SF
69 354 M
( ) s
/Courier-Bold 7 7 SUF
73.2 354 M
(int) s
/F-gs-font 7 7 SF
85.8 354 M
( networkDelayTime\() s
/Courier-Bold 7 7 SUF
161.4 354 M
(int) s
/F-gs-font 7 7 SF
174 354 M
([][] times, ) s
/Courier-Bold 7 7 SUF
224.4 354 M
(int) s
/F-gs-font 7 7 SF
237 354 M
( N, ) s
/Courier-Bold 7 7 SUF
253.8 354 M
(int) s
/F-gs-font 7 7 SF
266.4 354 M
( K\) {) s
18.6 346 M (20:) s
35.4 346 M
(    List<HashMap<Integer, Integer>> graph = ) s
/Courier-Bold 7 7 SUF
220.2 346 M
(new) s
/F-gs-font 7 7 SF
232.8 346 M
( ArrayList<>\(\);) s
18.6 338 M (21:) s
18.6 330 M (22:) s
35.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 330 M
(for) s
/F-gs-font 7 7 SF
64.8 330 M
(\() s
/Courier-Bold 7 7 SUF
69 330 M
(int) s
/F-gs-font 7 7 SF
81.6 330 M
( i = 0; i < N; i++\) graph.add\() s
/Courier-Bold 7 7 SUF
207.6 330 M
(new) s
/F-gs-font 7 7 SF
220.2 330 M
( HashMap<>\(\)\);) s
18.6 322 M (23:) s
35.4 322 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 322 M
(for) s
/F-gs-font 7 7 SF
64.8 322 M
(\() s
/Courier-Bold 7 7 SUF
69 322 M
(int) s
/F-gs-font 7 7 SF
81.6 322 M
( i = 0; i < times.length; i++\) {) s
18.6 314 M (24:) s
35.4 314 M
(      graph.get\(times[i][0] - 1\).put\(times[i][1] - 1, times[i][2]\);) s
18.6 306 M (25:) s
35.4 306 M
(    }) s
18.6 298 M (26:) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(int) s
/F-gs-font 7 7 SF
64.8 290 M
([] lookup = ) s
/Courier-Bold 7 7 SUF
115.2 290 M
(new) s
/F-gs-font 7 7 SF
127.8 290 M
( ) s
/Courier-Bold 7 7 SUF
132 290 M
(int) s
/F-gs-font 7 7 SF
144.6 290 M
([N];) s
18.6 282 M (28:) s
35.4 282 M
(    Arrays.fill\(lookup, Integer.MAX_VALUE\);) s
18.6 274 M (29:) s
18.6 266 M (30:) s
35.4 266 M
(    DFS\(graph, lookup, K - 1, 0\);) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(int) s
/F-gs-font 7 7 SF
64.8 250 M
( max = Integer.MIN_VALUE;) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(for) s
/F-gs-font 7 7 SF
64.8 242 M
(\() s
/Courier-Bold 7 7 SUF
69 242 M
(int) s
/F-gs-font 7 7 SF
81.6 242 M
( i = 0; i < N; i++\) {) s
18.6 234 M (34:) s
35.4 234 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 234 M
(if) s
/F-gs-font 7 7 SF
69 234 M
(\(i == K - 1\) ) s
/Courier-Bold 7 7 SUF
123.6 234 M
(continue) s
/F-gs-font 7 7 SF
157.2 234 M
(;) s
18.6 226 M (35:) s
35.4 226 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 226 M
(if) s
/F-gs-font 7 7 SF
69 226 M
(\(lookup[i] == Integer.MAX_VALUE\) ) s
/Courier-Bold 7 7 SUF
207.6 226 M
(return) s
/F-gs-font 7 7 SF
232.8 226 M
( -1;) s
18.6 218 M (36:) s
18.6 210 M (37:) s
35.4 210 M
(      max = Math.max\(max, lookup[i]\);) s
18.6 202 M (38:) s
35.4 202 M
(    }) s
18.6 194 M (39:) s
18.6 186 M (40:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(return) s
/F-gs-font 7 7 SF
77.4 186 M
( max;) s
18.6 178 M (41:) s
35.4 178 M
(  }) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 162 M
(public) s
/F-gs-font 7 7 SF
69 162 M
( ) s
/Courier-Bold 7 7 SUF
73.2 162 M
(void) s
/F-gs-font 7 7 SF
90 162 M
( DFS\(List<HashMap<Integer, Integer>> graph, ) s
/Courier-Bold 7 7 SUF
274.8 162 M
(int) s
/F-gs-font 7 7 SF
287.4 162 M
([] lookup, ) s
/Courier-Bold 7 7 SUF
333.6 162 M
(int) s
/F-gs-font 7 7 SF
346.2 162 M
( src, ) s
/Courier-Bold 7 7 SUF
371.4 162 M
(int) s
/F-gs-font 7 7 SF
384 162 M
( ) s
5 154 M
(currTime\) {) s
18.6 146 M (44:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(if) s
/F-gs-font 7 7 SF
60.6 146 M
(\(lookup[src] > currTime\) {) s
18.6 138 M (45:) s
35.4 138 M
(      lookup[src] = currTime;) s
18.6 130 M (46:) s
18.6 122 M (47:) s
35.4 122 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 122 M
(for) s
/F-gs-font 7 7 SF
73.2 122 M
(\(Map.Entry<Integer, Integer> next : graph.get\(src\).entrySet\(\)\) {) s
18.6 114 M (48:) s
35.4 114 M
(        DFS\(graph, lookup, next.getKey\(\), currTime + next.getValue\(\)\);) s
18.6 106 M (49:) s
35.4 106 M
(      }) s
18.6 98 M (50:) s
35.4 98 M
(    }) s
18.6 90 M (51:) s
35.4 90 M
(  }) s
18.6 82 M (52:) s
35.4 82 M
(}) s
_R
S
%%Page: (1) 123
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/ReconstructItinerary.java) def
/fdir (./graphs) def
/ftail (ReconstructItinerary.java) def
% User defined strings:
/fmodstr (Sun Feb 17 19:35:07 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ReconstructItinerary.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a list of airline tickets represented by pairs of departure and arrival airp) s
5 490 M
(orts [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who ) s
5 482 M
(departs from JFK. Thus, the itinerary must begin with JFK.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Note:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  If there are multiple valid itineraries, you should return the itinerary that has ) s
5 442 M
(the smallest lexical order when read as a single string. For example, the itinerary ["JFK", ) s
5 434 M
("LGA"] has a smaller lexical order than ["JFK", "LGB"].) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  All airports are represented by three capital letters \(IATA code\).) s
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  You may assume all tickets form at least one valid itinerary.) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Input: [["MUC", "LHR"], ["JFK", "MUC"], ["SFO", "SJC"], ["LHR", "SFO"]]) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: ["JFK", "MUC", "LHR", "SFO", "SJC"]) s
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Input: [["JFK","SFO"],["JFK","ATL"],["SFO","ATL"],["ATL","JFK"],["ATL","SFO"]]) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Output: ["JFK","ATL","JFK","SFO","ATL","SFO"]) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Explanation: Another possible reconstruction is ["JFK","SFO","ATL","JFK","ATL","SF) s
5 338 M
(O"].) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  But it is larger in lexical order.) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( */) s
/F-gs-font 7 7 SF
18.6 314 M (22:) s
18.6 306 M (23:) s
/Courier-Bold 7 7 SUF
35.4 306 M
(class) s
/F-gs-font 7 7 SF
56.4 306 M
( Solution {) s
18.6 298 M (24:) s
35.4 298 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 298 M
(public) s
/F-gs-font 7 7 SF
69 298 M
( List<String> findItinerary\(String[][] tickets\) {) s
18.6 290 M (25:) s
35.4 290 M
(    HashMap<String, PriorityQueue<String>> graph = ) s
/Courier-Bold 7 7 SUF
249.6 290 M
(new) s
/F-gs-font 7 7 SF
262.2 290 M
( HashMap<>\(\);) s
18.6 282 M (26:) s
18.6 274 M (27:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = 0; i < tickets.length; i++\) {) s
18.6 266 M (28:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(if) s
/F-gs-font 7 7 SF
69 266 M
(\(!graph.containsKey\(tickets[i][0]\)\) graph.put\(tickets[i][0], ) s
/Courier-Bold 7 7 SUF
325.2 266 M
(new) s
/F-gs-font 7 7 SF
337.8 266 M
( PriorityQue) s
5 258 M
(ue<String>\(\)\);) s
18.6 250 M (29:) s
35.4 250 M
(      graph.get\(tickets[i][0]\).add\(tickets[i][1]\);) s
18.6 242 M (30:) s
35.4 242 M
(    }) s
18.6 234 M (31:) s
18.6 226 M (32:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( DFS\(graph, ) s
/Courier-Bold 7 7 SUF
127.8 226 M
("JFK") s
/F-gs-font 7 7 SF
148.8 226 M
(\);) s
18.6 218 M (33:) s
35.4 218 M
(  }) s
18.6 210 M (34:) s
18.6 202 M (35:) s
35.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 202 M
(public) s
/F-gs-font 7 7 SF
69 202 M
( List<String> DFS\(HashMap<String, PriorityQueue<String>> graph, String curr\)) s
5 194 M
( {) s
18.6 186 M (36:) s
35.4 186 M
(    List<String> result = ) s
/Courier-Bold 7 7 SUF
144.6 186 M
(new) s
/F-gs-font 7 7 SF
157.2 186 M
( ArrayList<String>\(\);) s
18.6 178 M (37:) s
18.6 170 M (38:) s
35.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 170 M
(while) s
/F-gs-font 7 7 SF
73.2 170 M
(\(graph.containsKey\(curr\) && !graph.get\(curr\).isEmpty\(\)\) {) s
18.6 162 M (39:) s
35.4 162 M
(      List<String> nextItinerary = DFS\(graph, graph.get\(curr\).poll\(\)\);) s
18.6 154 M (40:) s
18.6 146 M (41:) s
35.4 146 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(if) s
/F-gs-font 7 7 SF
69 146 M
(\(graph.get\(curr\).isEmpty\(\) && nextItinerary.get\(nextItinerary.size\(\) - 1\).eq) s
5 138 M
(uals\(curr\)\) {) s
18.6 130 M (42:) s
35.4 130 M
(        nextItinerary.addAll\(result\);) s
18.6 122 M (43:) s
35.4 122 M
(        result = nextItinerary;) s
18.6 114 M (44:) s
35.4 114 M
(      } ) s
/Courier-Bold 7 7 SUF
69 114 M
(else) s
/F-gs-font 7 7 SF
85.8 114 M
( {) s
18.6 106 M (45:) s
35.4 106 M
(        result.addAll\(nextItinerary\);) s
18.6 98 M (46:) s
35.4 98 M
(      }) s
18.6 90 M (47:) s
35.4 90 M
(    }) s
18.6 82 M (48:) s
18.6 74 M (49:) s
35.4 74 M
(    result.add\(0, curr\);) s
18.6 66 M (50:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(return) s
/F-gs-font 7 7 SF
77.4 66 M
( result;) s
18.6 58 M (51:) s
35.4 58 M
(  }) s
18.6 50 M (52:) s
35.4 50 M
(}) s
_R
S
%%Page: (1) 124
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/CourseSchedule2.java) def
/fdir (./graphs) def
/ftail (CourseSchedule2.java) def
% User defined strings:
/fmodstr (Tue Feb 19 22:40:23 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (CourseSchedule2.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  There are a total of n courses you have to take, labeled from 0 to n-1.) s
/F-gs-font 7 7 SF
22.8 490 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(  Some courses may have prerequisites, for example to take course 0 you have to firs) s
5 474 M
(t take course 1, which is expressed as a pair: [0,1]) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Given the total number of courses and a list of prerequisite pairs, return the ord) s
5 450 M
(ering of courses you should take to finish all courses.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  There may be multiple correct orders, you just need to return one of them. If it i) s
5 426 M
(s impossible to finish all courses, return an empty array.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Input: 2, [[1,0]]) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Output: [0,1]) s
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Explanation: There are a total of 2 courses to take. To take course 1 you should h) s
5 370 M
(ave finished) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  course 0. So the correct course order is [0,1] .) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 346 M (19:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Input: 4, [[1,0],[2,0],[3,1],[3,2]]) s
/F-gs-font 7 7 SF
18.6 330 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Output: [0,1,2,3] or [0,2,1,3]) s
/F-gs-font 7 7 SF
18.6 322 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Explanation: There are a total of 4 courses to take. To take course 3 you should h) s
5 314 M
(ave finished both) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.) s
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  So one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3] .) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  The input prerequisites is a graph represented by a list of edges, not adjacency m) s
5 266 M
(atrices. Read more about how a graph is represented.) s
/F-gs-font 7 7 SF
18.6 258 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  You may assume that there are no duplicate edges in the input prerequisites.) s
/F-gs-font 7 7 SF
18.6 250 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( */) s
/F-gs-font 7 7 SF
18.6 242 M (30:) s
18.6 234 M (31:) s
/Courier-Bold 7 7 SUF
35.4 234 M
(class) s
/F-gs-font 7 7 SF
56.4 234 M
( Solution {) s
18.6 226 M (32:) s
35.4 226 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 226 M
(public) s
/F-gs-font 7 7 SF
69 226 M
( ) s
/Courier-Bold 7 7 SUF
73.2 226 M
(int) s
/F-gs-font 7 7 SF
85.8 226 M
([] findOrder\() s
/Courier-Bold 7 7 SUF
140.4 226 M
(int) s
/F-gs-font 7 7 SF
153 226 M
( numCourses, ) s
/Courier-Bold 7 7 SUF
207.6 226 M
(int) s
/F-gs-font 7 7 SF
220.2 226 M
([][] prerequisites\) {) s
18.6 218 M (33:) s
35.4 218 M
(    List<List<Integer>> graph = ) s
/Courier-Bold 7 7 SUF
169.8 218 M
(new) s
/F-gs-font 7 7 SF
182.4 218 M
( ArrayList<>\(\);) s
18.6 210 M (34:) s
18.6 202 M (35:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(for) s
/F-gs-font 7 7 SF
64.8 202 M
(\() s
/Courier-Bold 7 7 SUF
69 202 M
(int) s
/F-gs-font 7 7 SF
81.6 202 M
( i = 0; i < numCourses; i++\) graph.add\() s
/Courier-Bold 7 7 SUF
245.4 202 M
(new) s
/F-gs-font 7 7 SF
258 202 M
( ArrayList<>\(\)\);) s
18.6 194 M (36:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(for) s
/F-gs-font 7 7 SF
64.8 194 M
(\() s
/Courier-Bold 7 7 SUF
69 194 M
(int) s
/F-gs-font 7 7 SF
81.6 194 M
( i = 0; i < prerequisites.length; i++\) {) s
18.6 186 M (37:) s
35.4 186 M
(      graph.get\(prerequisites[i][0]\).add\(prerequisites[i][1]\);) s
18.6 178 M (38:) s
35.4 178 M
(    }) s
18.6 170 M (39:) s
18.6 162 M (40:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(boolean) s
/F-gs-font 7 7 SF
81.6 162 M
([] visitedNodes = ) s
/Courier-Bold 7 7 SUF
157.2 162 M
(new) s
/F-gs-font 7 7 SF
169.8 162 M
( ) s
/Courier-Bold 7 7 SUF
174 162 M
(boolean) s
/F-gs-font 7 7 SF
203.4 162 M
([numCourses];) s
18.6 154 M (41:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(boolean) s
/F-gs-font 7 7 SF
81.6 154 M
([] visitedEdges = ) s
/Courier-Bold 7 7 SUF
157.2 154 M
(new) s
/F-gs-font 7 7 SF
169.8 154 M
( ) s
/Courier-Bold 7 7 SUF
174 154 M
(boolean) s
/F-gs-font 7 7 SF
203.4 154 M
([numCourses];) s
18.6 146 M (42:) s
18.6 138 M (43:) s
35.4 138 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 138 M
(new) s
/F-gs-font 7 7 SF
161.4 138 M
( ArrayList<Integer>\(\);) s
18.6 130 M (44:) s
18.6 122 M (45:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(for) s
/F-gs-font 7 7 SF
64.8 122 M
(\() s
/Courier-Bold 7 7 SUF
69 122 M
(int) s
/F-gs-font 7 7 SF
81.6 122 M
( i = 0; i < numCourses; i++\) {) s
18.6 114 M (46:) s
35.4 114 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 114 M
(if) s
/F-gs-font 7 7 SF
69 114 M
(\(!visitedNodes[i]\) {) s
18.6 106 M (47:) s
35.4 106 M
(        ) s
/Courier-Bold 7 7 SUF
69 106 M
(try) s
/F-gs-font 7 7 SF
81.6 106 M
( {) s
18.6 98 M (48:) s
35.4 98 M
(          DFS\(graph, visitedNodes, visitedEdges, i, result\);) s
18.6 90 M (49:) s
35.4 90 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 90 M
(catch) s
/F-gs-font 7 7 SF
98.4 90 M
(\(GraphContainsCycleException e\) {) s
18.6 82 M (50:) s
35.4 82 M
(          ) s
/Courier-Bold 7 7 SUF
77.4 82 M
(return) s
/F-gs-font 7 7 SF
102.6 82 M
( ) s
/Courier-Bold 7 7 SUF
106.8 82 M
(new) s
/F-gs-font 7 7 SF
119.4 82 M
( ) s
/Courier-Bold 7 7 SUF
123.6 82 M
(int) s
/F-gs-font 7 7 SF
136.2 82 M
([0];) s
18.6 74 M (51:) s
35.4 74 M
(        }) s
18.6 66 M (52:) s
35.4 66 M
(      }) s
18.6 58 M (53:) s
35.4 58 M
(    }) s
18.6 50 M (54:) s
18.6 42 M (55:) s
35.4 42 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 42 M
(int) s
/F-gs-font 7 7 SF
64.8 42 M
([] r = ) s
/Courier-Bold 7 7 SUF
94.2 42 M
(new) s
/F-gs-font 7 7 SF
106.8 42 M
( ) s
/Courier-Bold 7 7 SUF
111 42 M
(int) s
/F-gs-font 7 7 SF
123.6 42 M
([result.size\(\)];) s
18.6 34 M (56:) s
35.4 34 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 34 M
(for) s
/F-gs-font 7 7 SF
64.8 34 M
(\() s
/Courier-Bold 7 7 SUF
69 34 M
(int) s
/F-gs-font 7 7 SF
81.6 34 M
( i = 0; i < r.length; i++\) r[i] = result.get\(i\);) s
18.6 26 M (57:) s
18.6 18 M (58:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(return) s
/F-gs-font 7 7 SF
77.4 18 M
( r;) s
18.6 10 M (59:) s
35.4 10 M
(  }) s
18.6 2 M (60:) s
415.6 522 M (61:) s
432.4 522 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 522 M
(public) s
/F-gs-font 7 7 SF
466 522 M
( ) s
/Courier-Bold 7 7 SUF
470.2 522 M
(void) s
/F-gs-font 7 7 SF
487 522 M
( DFS\() s
415.6 514 M (62:) s
432.4 514 M
(    List<List<Integer>> graph,) s
415.6 506 M (63:) s
432.4 506 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 506 M
(boolean) s
/F-gs-font 7 7 SF
478.6 506 M
([] visitedNodes,) s
415.6 498 M (64:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(boolean) s
/F-gs-font 7 7 SF
478.6 498 M
([] visitedEdges,) s
415.6 490 M (65:) s
432.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 490 M
(int) s
/F-gs-font 7 7 SF
461.8 490 M
( curr,) s
415.6 482 M (66:) s
432.4 482 M
(    List<Integer> result) s
415.6 474 M (67:) s
432.4 474 M
(  \) ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(throws) s
/F-gs-font 7 7 SF
474.4 474 M
( GraphContainsCycleException {) s
415.6 466 M (68:) s
432.4 466 M
(    visitedNodes[curr] = ) s
/Courier-Bold 7 7 SUF
537.4 466 M
(true) s
/F-gs-font 7 7 SF
554.2 466 M
(;) s
415.6 458 M (69:) s
432.4 458 M
(    visitedEdges[curr] = ) s
/Courier-Bold 7 7 SUF
537.4 458 M
(true) s
/F-gs-font 7 7 SF
554.2 458 M
(;) s
415.6 450 M (70:) s
415.6 442 M (71:) s
432.4 442 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 442 M
(for) s
/F-gs-font 7 7 SF
461.8 442 M
(\() s
/Courier-Bold 7 7 SUF
466 442 M
(int) s
/F-gs-font 7 7 SF
478.6 442 M
( next : graph.get\(curr\)\) {) s
415.6 434 M (72:) s
432.4 434 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 434 M
(if) s
/F-gs-font 7 7 SF
466 434 M
(\(visitedEdges[next]\) ) s
/Courier-Bold 7 7 SUF
554.2 434 M
(throw) s
/F-gs-font 7 7 SF
575.2 434 M
( ) s
/Courier-Bold 7 7 SUF
579.4 434 M
(new) s
/F-gs-font 7 7 SF
592 434 M
( GraphContainsCycleException\() s
/Courier-Bold 7 7 SUF
713.8 434 M
("cycles exist in ) s
402 426 M
(the graph") s
/F-gs-font 7 7 SF
444 426 M
(\);) s
415.6 418 M (73:) s
432.4 418 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 418 M
(if) s
/F-gs-font 7 7 SF
466 418 M
(\(visitedNodes[next]\) ) s
/Courier-Bold 7 7 SUF
554.2 418 M
(continue) s
/F-gs-font 7 7 SF
587.8 418 M
(;) s
415.6 410 M (74:) s
415.6 402 M (75:) s
432.4 402 M
(      DFS\(graph, visitedNodes, visitedEdges, next, result\);) s
415.6 394 M (76:) s
432.4 394 M
(    }) s
415.6 386 M (77:) s
415.6 378 M (78:) s
432.4 378 M
(    visitedEdges[curr] = ) s
/Courier-Bold 7 7 SUF
537.4 378 M
(false) s
/F-gs-font 7 7 SF
558.4 378 M
(;) s
415.6 370 M (79:) s
415.6 362 M (80:) s
432.4 362 M
(    result.add\(curr\);) s
415.6 354 M (81:) s
432.4 354 M
(  }) s
415.6 346 M (82:) s
415.6 338 M (83:) s
432.4 338 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 338 M
(private) s
/F-gs-font 7 7 SF
470.2 338 M
( ) s
/Courier-Bold 7 7 SUF
474.4 338 M
(class) s
/F-gs-font 7 7 SF
495.4 338 M
( GraphContainsCycleException ) s
/Courier-Bold 7 7 SUF
617.2 338 M
(extends) s
/F-gs-font 7 7 SF
646.6 338 M
( Exception {) s
415.6 330 M (84:) s
432.4 330 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 330 M
(public) s
/F-gs-font 7 7 SF
474.4 330 M
( GraphContainsCycleException\(String errorMessage\) {) s
415.6 322 M (85:) s
432.4 322 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 322 M
(super) s
/F-gs-font 7 7 SF
478.6 322 M
(\(errorMessage\);) s
415.6 314 M (86:) s
432.4 314 M
(    }) s
415.6 306 M (87:) s
432.4 306 M
(  }) s
415.6 298 M (88:) s
432.4 298 M
(}) s
_R
S
%%Page: (1) 125
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/FindRedundantConnection.java) def
/fdir (./graphs) def
/ftail (FindRedundantConnection.java) def
% User defined strings:
/fmodstr (Mon Feb 18 02:39:48 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindRedundantConnection.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  In this problem, a tree is an undirected graph that is connected and has no cycles) s
5 490 M
(.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  The given input is a graph that started as a tree with N nodes \(with distinct valu) s
5 466 M
(es 1, 2, ..., N\), with one additional edge added. The added edge has two different vertices ) s
5 458 M
(chosen from 1 to N, and was not an edge that already existed.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  The resulting graph is given as a 2D-array of edges. Each element of edges is a pa) s
5 434 M
(ir [u, v] with u < v, that represents an undirected edge connecting nodes u and v.) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Return an edge that can be removed so that the resulting graph is a tree of N node) s
5 410 M
(s. If there are multiple answers, return the answer that occurs last in the given 2D-array. ) s
5 402 M
(The answer edge [u, v] should be in the same format, with u < v.) s
/F-gs-font 7 7 SF
18.6 394 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 378 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: [[1,2], [1,3], [2,3]]) s
/F-gs-font 7 7 SF
18.6 370 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: [2,3]) s
/F-gs-font 7 7 SF
18.6 362 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Explanation: The given undirected graph will be like this:) s
/F-gs-font 7 7 SF
18.6 354 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  1) s
/F-gs-font 7 7 SF
18.6 346 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 338 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  2 - 3) s
/F-gs-font 7 7 SF
18.6 330 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 322 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Input: [[1,2], [2,3], [3,4], [1,4], [1,5]]) s
/F-gs-font 7 7 SF
18.6 314 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Output: [1,4]) s
/F-gs-font 7 7 SF
18.6 306 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Explanation: The given undirected graph will be like this:) s
/F-gs-font 7 7 SF
18.6 298 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  5 - 1 - 2) s
/F-gs-font 7 7 SF
18.6 290 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  |   |) s
/F-gs-font 7 7 SF
18.6 282 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  4 - 3) s
/F-gs-font 7 7 SF
18.6 274 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 266 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  The size of the input 2D-array will be between 3 and 1000.) s
/F-gs-font 7 7 SF
18.6 258 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  Every integer represented in the 2D-array will be between 1 and N, where N is the ) s
5 250 M
(size of the input array.) s
/F-gs-font 7 7 SF
18.6 242 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (30:) s
18.6 226 M (31:) s
/Courier-Bold 7 7 SUF
35.4 226 M
(class) s
/F-gs-font 7 7 SF
56.4 226 M
( Solution {) s
18.6 218 M (32:) s
35.4 218 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 218 M
(public) s
/F-gs-font 7 7 SF
69 218 M
( ) s
/Courier-Bold 7 7 SUF
73.2 218 M
(int) s
/F-gs-font 7 7 SF
85.8 218 M
([] findRedundantConnection\() s
/Courier-Bold 7 7 SUF
199.2 218 M
(int) s
/F-gs-font 7 7 SF
211.8 218 M
([][] edges\) {) s
18.6 210 M (33:) s
35.4 210 M
(    ArrayList<Integer>[] graph = ) s
/Courier-Bold 7 7 SUF
174 210 M
(new) s
/F-gs-font 7 7 SF
186.6 210 M
( ArrayList[edges.length];) s
18.6 202 M (34:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(for) s
/F-gs-font 7 7 SF
64.8 202 M
(\() s
/Courier-Bold 7 7 SUF
69 202 M
(int) s
/F-gs-font 7 7 SF
81.6 202 M
( i = 0; i < graph.length; i++\) graph[i] = ) s
/Courier-Bold 7 7 SUF
258 202 M
(new) s
/F-gs-font 7 7 SF
270.6 202 M
( ArrayList<Integer>\(\);) s
18.6 194 M (35:) s
18.6 186 M (36:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(int) s
/F-gs-font 7 7 SF
64.8 186 M
([] visited;) s
18.6 178 M (37:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
([] edge : edges\) {) s
18.6 170 M (38:) s
35.4 170 M
(      visited = ) s
/Courier-Bold 7 7 SUF
102.6 170 M
(new) s
/F-gs-font 7 7 SF
115.2 170 M
( ) s
/Courier-Bold 7 7 SUF
119.4 170 M
(int) s
/F-gs-font 7 7 SF
132 170 M
([edges.length];) s
18.6 162 M (39:) s
35.4 162 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 162 M
(if) s
/F-gs-font 7 7 SF
69 162 M
(\(!graph[edge[0] - 1].isEmpty\(\) && !graph[edge[1] - 1].isEmpty\(\)\) {) s
18.6 154 M (40:) s
35.4 154 M
(        ) s
/Courier-Bold 7 7 SUF
69 154 M
(if) s
/F-gs-font 7 7 SF
77.4 154 M
(\(detectCycle\(graph, edge[0], edge[1], visited\)\) ) s
/Courier-Bold 7 7 SUF
279 154 M
(return) s
/F-gs-font 7 7 SF
304.2 154 M
( edge;) s
18.6 146 M (41:) s
35.4 146 M
(      }) s
18.6 138 M (42:) s
18.6 130 M (43:) s
35.4 130 M
(      graph[edge[0] - 1].add\(edge[1]\);) s
18.6 122 M (44:) s
35.4 122 M
(      graph[edge[1] - 1].add\(edge[0]\);) s
18.6 114 M (45:) s
35.4 114 M
(    }) s
18.6 106 M (46:) s
18.6 98 M (47:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(return) s
/F-gs-font 7 7 SF
77.4 98 M
( ) s
/Courier-Bold 7 7 SUF
81.6 98 M
(new) s
/F-gs-font 7 7 SF
94.2 98 M
( ) s
/Courier-Bold 7 7 SUF
98.4 98 M
(int) s
/F-gs-font 7 7 SF
111 98 M
([2];) s
18.6 90 M (48:) s
35.4 90 M
(  }) s
18.6 82 M (49:) s
18.6 74 M (50:) s
35.4 74 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 74 M
(public) s
/F-gs-font 7 7 SF
69 74 M
( ) s
/Courier-Bold 7 7 SUF
73.2 74 M
(boolean) s
/F-gs-font 7 7 SF
102.6 74 M
( detectCycle\(ArrayList<Integer>[] graph, ) s
/Courier-Bold 7 7 SUF
274.8 74 M
(int) s
/F-gs-font 7 7 SF
287.4 74 M
( curr, ) s
/Courier-Bold 7 7 SUF
316.8 74 M
(int) s
/F-gs-font 7 7 SF
329.4 74 M
( target, ) s
/Courier-Bold 7 7 SUF
367.2 74 M
(int) s
/F-gs-font 7 7 SF
379.8 74 M
([]) s
5 66 M
( visited\) {) s
18.6 58 M (51:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(if) s
/F-gs-font 7 7 SF
60.6 58 M
(\(curr == target\) ) s
/Courier-Bold 7 7 SUF
132 58 M
(return) s
/F-gs-font 7 7 SF
157.2 58 M
( ) s
/Courier-Bold 7 7 SUF
161.4 58 M
(true) s
/F-gs-font 7 7 SF
178.2 58 M
(;) s
18.6 50 M (52:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(if) s
/F-gs-font 7 7 SF
60.6 50 M
(\(visited[curr - 1] > 0\) ) s
/Courier-Bold 7 7 SUF
161.4 50 M
(return) s
/F-gs-font 7 7 SF
186.6 50 M
( ) s
/Courier-Bold 7 7 SUF
190.8 50 M
(false) s
/F-gs-font 7 7 SF
211.8 50 M
(;) s
18.6 42 M (53:) s
18.6 34 M (54:) s
35.4 34 M
(    visited[curr - 1]++;) s
18.6 26 M (55:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(for) s
/F-gs-font 7 7 SF
64.8 26 M
(\() s
/Courier-Bold 7 7 SUF
69 26 M
(int) s
/F-gs-font 7 7 SF
81.6 26 M
( next : graph[curr - 1]\) {) s
18.6 18 M (56:) s
35.4 18 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 18 M
(if) s
/F-gs-font 7 7 SF
69 18 M
(\(detectCycle\(graph, next, target, visited\)\) ) s
/Courier-Bold 7 7 SUF
253.8 18 M
(return) s
/F-gs-font 7 7 SF
279 18 M
( ) s
/Courier-Bold 7 7 SUF
283.2 18 M
(true) s
/F-gs-font 7 7 SF
300 18 M
(;) s
18.6 10 M (57:) s
35.4 10 M
(    }) s
18.6 2 M (58:) s
415.6 522 M (59:) s
432.4 522 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 522 M
(return) s
/F-gs-font 7 7 SF
474.4 522 M
( ) s
/Courier-Bold 7 7 SUF
478.6 522 M
(false) s
/F-gs-font 7 7 SF
499.6 522 M
(;) s
415.6 514 M (60:) s
432.4 514 M
(  }) s
415.6 506 M (61:) s
432.4 506 M
(}) s
_R
S
%%Page: (1) 126
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/KeysAndRooms.java) def
/fdir (./graphs) def
/ftail (KeysAndRooms.java) def
% User defined strings:
/fmodstr (Tue Feb 19 23:00:38 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (KeysAndRooms.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  There are N rooms and you start in room 0.  Each room has a distinct number in 0, ) s
5 490 M
(1, 2, ..., N-1, and each room may have some keys to access the next room.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Formally, each room i has a list of keys rooms[i], and each key rooms[i][j] is an ) s
5 466 M
(integer in [0, 1, ..., N-1] where N = rooms.length.  A key rooms[i][j] = v opens the room wi) s
5 458 M
(th number v.) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 442 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  Initially, all the rooms start locked \(except for room 0\).) s
/F-gs-font 7 7 SF
22.8 434 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  You can walk back and forth between rooms freely.) s
/F-gs-font 7 7 SF
18.6 418 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 410 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  Return true if and only if you can enter every room.) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: [[1],[2],[3],[]]) s
/F-gs-font 7 7 SF
18.6 370 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 362 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Explanation:) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  We start in room 0, and pick up key 1.) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  We then go to room 1, and pick up key 2.) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  We then go to room 2, and pick up key 3.) s
/F-gs-font 7 7 SF
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  We then go to room 3.  Since we were able to go to every room, we return true.) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Input: [[1,3],[3,0,1],[2],[0]]) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  Explanation: We can't enter the room with number 2.) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  1 <= rooms.length <= 1000) s
/F-gs-font 7 7 SF
18.6 258 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  0 <= rooms[i].length <= 1000) s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  The number of keys in all rooms combined is at most 3000.) s
/F-gs-font 7 7 SF
18.6 242 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( */) s
/F-gs-font 7 7 SF
18.6 234 M (34:) s
18.6 226 M (35:) s
/Courier-Bold 7 7 SUF
35.4 226 M
(class) s
/F-gs-font 7 7 SF
56.4 226 M
( Solution {) s
18.6 218 M (36:) s
35.4 218 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 218 M
(public) s
/F-gs-font 7 7 SF
69 218 M
( ) s
/Courier-Bold 7 7 SUF
73.2 218 M
(boolean) s
/F-gs-font 7 7 SF
102.6 218 M
( canVisitAllRooms\(List<List<Integer>> rooms\) {) s
18.6 210 M (37:) s
35.4 210 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 210 M
(boolean) s
/F-gs-font 7 7 SF
81.6 210 M
([] visited = ) s
/Courier-Bold 7 7 SUF
136.2 210 M
(new) s
/F-gs-font 7 7 SF
148.8 210 M
( ) s
/Courier-Bold 7 7 SUF
153 210 M
(boolean) s
/F-gs-font 7 7 SF
182.4 210 M
([rooms.size\(\)];) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    DFS\(rooms, visited, 0\);) s
18.6 186 M (40:) s
18.6 178 M (41:) s
35.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 178 M
(for) s
/F-gs-font 7 7 SF
64.8 178 M
(\() s
/Courier-Bold 7 7 SUF
69 178 M
(int) s
/F-gs-font 7 7 SF
81.6 178 M
( i = 0; i < visited.length; i++\)) s
18.6 170 M (42:) s
35.4 170 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 170 M
(if) s
/F-gs-font 7 7 SF
69 170 M
(\(!visited[i]\)) s
18.6 162 M (43:) s
35.4 162 M
(        ) s
/Courier-Bold 7 7 SUF
69 162 M
(return) s
/F-gs-font 7 7 SF
94.2 162 M
( ) s
/Courier-Bold 7 7 SUF
98.4 162 M
(false) s
/F-gs-font 7 7 SF
119.4 162 M
(;) s
18.6 154 M (44:) s
18.6 146 M (45:) s
35.4 146 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 146 M
(return) s
/F-gs-font 7 7 SF
77.4 146 M
( ) s
/Courier-Bold 7 7 SUF
81.6 146 M
(true) s
/F-gs-font 7 7 SF
98.4 146 M
(;) s
18.6 138 M (46:) s
35.4 138 M
(  }) s
18.6 130 M (47:) s
18.6 122 M (48:) s
35.4 122 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 122 M
(public) s
/F-gs-font 7 7 SF
69 122 M
( ) s
/Courier-Bold 7 7 SUF
73.2 122 M
(void) s
/F-gs-font 7 7 SF
90 122 M
( DFS\(List<List<Integer>> rooms, ) s
/Courier-Bold 7 7 SUF
224.4 122 M
(boolean) s
/F-gs-font 7 7 SF
253.8 122 M
([] visited, ) s
/Courier-Bold 7 7 SUF
304.2 122 M
(int) s
/F-gs-font 7 7 SF
316.8 122 M
( curr\) {) s
18.6 114 M (49:) s
35.4 114 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 114 M
(if) s
/F-gs-font 7 7 SF
60.6 114 M
(\(visited[curr]\) ) s
/Courier-Bold 7 7 SUF
127.8 114 M
(return) s
/F-gs-font 7 7 SF
153 114 M
(;) s
18.6 106 M (50:) s
18.6 98 M (51:) s
35.4 98 M
(    visited[curr] = ) s
/Courier-Bold 7 7 SUF
119.4 98 M
(true) s
/F-gs-font 7 7 SF
136.2 98 M
(;) s
18.6 90 M (52:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(for) s
/F-gs-font 7 7 SF
64.8 90 M
(\() s
/Courier-Bold 7 7 SUF
69 90 M
(int) s
/F-gs-font 7 7 SF
81.6 90 M
( key : rooms.get\(curr\)\) {) s
18.6 82 M (53:) s
35.4 82 M
(      DFS\(rooms, visited, key\);) s
18.6 74 M (54:) s
35.4 74 M
(    }) s
18.6 66 M (55:) s
35.4 66 M
(  }) s
18.6 58 M (56:) s
35.4 58 M
(}) s
_R
S
%%Page: (1) 127
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/SatisfiabilityOfEqualityEquations.java) def
/fdir (./graphs) def
/ftail (SatisfiabilityOfEqualityEquations.java) def
% User defined strings:
/fmodstr (Wed Feb 20 23:57:56 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (SatisfiabilityOfEqualityEquations.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given an array equations of strings that represent relationships between variables) s
5 490 M
(, each string equations[i] has length 4 and takes one of two different forms: "a==b" or "a!=) s
5 482 M
(b".  Here, a and b are lowercase letters \(not necessarily different\) that represent one-lett) s
5 474 M
(er variable names.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Return true if and only if it is possible to assign integers to variable names so ) s
5 450 M
(as to satisfy all the given equations.) s
/F-gs-font 7 7 SF
22.8 442 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
( ) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 410 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: ["a==b","b!=a"]) s
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Explanation: If we assign say, a = 1 and b = 1, then the first equation is satisfi) s
5 378 M
(ed, but not the second.  There is no way to assign the variables to satisfy both equations.) s
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Input: ["b==a","a==b"]) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  Explanation: We could assign a = 1 and b = 1 to satisfy both equations.) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Example 3:) s
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Input: ["a==b","b==c","a==c"]) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Example 4:) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  Input: ["a==b","b!=c","c==a"]) s
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  Output: false) s
/F-gs-font 7 7 SF
18.6 266 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  Example 5:) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 250 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  Input: ["c==c","b==d","x!=z"]) s
/F-gs-font 7 7 SF
18.6 242 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  Output: true) s
/F-gs-font 7 7 SF
18.6 234 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( ) s
/F-gs-font 7 7 SF
18.6 226 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 218 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 210 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 202 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 202 M
(  1 <= equations.length <= 500) s
/F-gs-font 7 7 SF
18.6 194 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  equations[i].length == 4) s
/F-gs-font 7 7 SF
18.6 186 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 186 M
(  equations[i][0] and equations[i][3] are lowercase letters) s
/F-gs-font 7 7 SF
18.6 178 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 178 M
(  equations[i][1] is either '=' or '!') s
/F-gs-font 7 7 SF
18.6 170 M (40:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  equations[i][2] is '=') s
/F-gs-font 7 7 SF
18.6 162 M (41:) s
/Courier-Oblique 7 7 SUF
35.4 162 M
( */) s
/F-gs-font 7 7 SF
18.6 154 M (42:) s
18.6 146 M (43:) s
/Courier-Bold 7 7 SUF
35.4 146 M
(class) s
/F-gs-font 7 7 SF
56.4 146 M
( Solution {) s
18.6 138 M (44:) s
35.4 138 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 138 M
(public) s
/F-gs-font 7 7 SF
69 138 M
( ) s
/Courier-Bold 7 7 SUF
73.2 138 M
(boolean) s
/F-gs-font 7 7 SF
102.6 138 M
( equationsPossible\(String[] equations\) {) s
18.6 130 M (45:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(int) s
/F-gs-font 7 7 SF
64.8 130 M
([] subsets = ) s
/Courier-Bold 7 7 SUF
119.4 130 M
(new) s
/F-gs-font 7 7 SF
132 130 M
( ) s
/Courier-Bold 7 7 SUF
136.2 130 M
(int) s
/F-gs-font 7 7 SF
148.8 130 M
([26];) s
18.6 122 M (46:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(for) s
/F-gs-font 7 7 SF
64.8 122 M
(\() s
/Courier-Bold 7 7 SUF
69 122 M
(int) s
/F-gs-font 7 7 SF
81.6 122 M
( i = 0; i < 26; i++\) subsets[i] = i;) s
18.6 114 M (47:) s
18.6 106 M (48:) s
35.4 106 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 106 M
(// do all the equalities first) s
/F-gs-font 7 7 SF
18.6 98 M (49:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(for) s
/F-gs-font 7 7 SF
64.8 98 M
(\() s
/Courier-Bold 7 7 SUF
69 98 M
(int) s
/F-gs-font 7 7 SF
81.6 98 M
( i = 0; i < equations.length; i++\) {) s
18.6 90 M (50:) s
35.4 90 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 90 M
(if) s
/F-gs-font 7 7 SF
69 90 M
(\(equations[i].charAt\(1\) == ) s
/Courier-Bold 7 7 SUF
182.4 90 M
('!') s
/F-gs-font 7 7 SF
195 90 M
(\) ) s
/Courier-Bold 7 7 SUF
203.4 90 M
(continue) s
/F-gs-font 7 7 SF
237 90 M
(;) s
18.6 82 M (51:) s
18.6 74 M (52:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(int) s
/F-gs-font 7 7 SF
73.2 74 M
( x = equations[i].charAt\(0\) - ) s
/Courier-Bold 7 7 SUF
199.2 74 M
('a') s
/F-gs-font 7 7 SF
211.8 74 M
(;) s
18.6 66 M (53:) s
35.4 66 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 66 M
(int) s
/F-gs-font 7 7 SF
73.2 66 M
( y = equations[i].charAt\(3\) - ) s
/Courier-Bold 7 7 SUF
199.2 66 M
('a') s
/F-gs-font 7 7 SF
211.8 66 M
(;) s
18.6 58 M (54:) s
18.6 50 M (55:) s
35.4 50 M
(      union\(subsets, x, y\);) s
18.6 42 M (56:) s
35.4 42 M
(    }) s
18.6 34 M (57:) s
18.6 26 M (58:) s
35.4 26 M
(    ) s
/Courier-Oblique 7 7 SUF
52.2 26 M
(// check the inequalities if they belong to the same subset then return false) s
/F-gs-font 7 7 SF
18.6 18 M (59:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(for) s
/F-gs-font 7 7 SF
64.8 18 M
(\() s
/Courier-Bold 7 7 SUF
69 18 M
(int) s
/F-gs-font 7 7 SF
81.6 18 M
( i = 0; i < equations.length; i++\) {) s
18.6 10 M (60:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(if) s
/F-gs-font 7 7 SF
69 10 M
(\(equations[i].charAt\(1\) == ) s
/Courier-Bold 7 7 SUF
182.4 10 M
('=') s
/F-gs-font 7 7 SF
195 10 M
(\) ) s
/Courier-Bold 7 7 SUF
203.4 10 M
(continue) s
/F-gs-font 7 7 SF
237 10 M
(;) s
18.6 2 M (61:) s
415.6 522 M (62:) s
432.4 522 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 522 M
(int) s
/F-gs-font 7 7 SF
470.2 522 M
( x = equations[i].charAt\(0\) - ) s
/Courier-Bold 7 7 SUF
596.2 522 M
('a') s
/F-gs-font 7 7 SF
608.8 522 M
(;) s
415.6 514 M (63:) s
432.4 514 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 514 M
(int) s
/F-gs-font 7 7 SF
470.2 514 M
( y = equations[i].charAt\(3\) - ) s
/Courier-Bold 7 7 SUF
596.2 514 M
('a') s
/F-gs-font 7 7 SF
608.8 514 M
(;) s
415.6 506 M (64:) s
415.6 498 M (65:) s
432.4 498 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 498 M
(if) s
/F-gs-font 7 7 SF
466 498 M
(\(find\(subsets, x\) == find\(subsets, y\)\) ) s
/Courier-Bold 7 7 SUF
629.8 498 M
(return) s
/F-gs-font 7 7 SF
655 498 M
( ) s
/Courier-Bold 7 7 SUF
659.2 498 M
(false) s
/F-gs-font 7 7 SF
680.2 498 M
(;) s
415.6 490 M (66:) s
432.4 490 M
(    }) s
415.6 482 M (67:) s
415.6 474 M (68:) s
432.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(return) s
/F-gs-font 7 7 SF
474.4 474 M
( ) s
/Courier-Bold 7 7 SUF
478.6 474 M
(true) s
/F-gs-font 7 7 SF
495.4 474 M
(;) s
415.6 466 M (69:) s
432.4 466 M
(  }) s
415.6 458 M (70:) s
415.6 450 M (71:) s
432.4 450 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 450 M
(public) s
/F-gs-font 7 7 SF
466 450 M
( ) s
/Courier-Bold 7 7 SUF
470.2 450 M
(int) s
/F-gs-font 7 7 SF
482.8 450 M
( find\() s
/Courier-Bold 7 7 SUF
508 450 M
(int) s
/F-gs-font 7 7 SF
520.6 450 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
571 450 M
(int) s
/F-gs-font 7 7 SF
583.6 450 M
( x\) {) s
415.6 442 M (72:) s
432.4 442 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 442 M
(if) s
/F-gs-font 7 7 SF
457.6 442 M
(\(subsets[x] != x\) subsets[x] = find\(subsets, subsets[x]\);) s
415.6 434 M (73:) s
432.4 434 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 434 M
(return) s
/F-gs-font 7 7 SF
474.4 434 M
( subsets[x];) s
415.6 426 M (74:) s
432.4 426 M
(  }) s
415.6 418 M (75:) s
415.6 410 M (76:) s
432.4 410 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 410 M
(public) s
/F-gs-font 7 7 SF
466 410 M
( ) s
/Courier-Bold 7 7 SUF
470.2 410 M
(void) s
/F-gs-font 7 7 SF
487 410 M
( union\() s
/Courier-Bold 7 7 SUF
516.4 410 M
(int) s
/F-gs-font 7 7 SF
529 410 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
579.4 410 M
(int) s
/F-gs-font 7 7 SF
592 410 M
( x, ) s
/Courier-Bold 7 7 SUF
608.8 410 M
(int) s
/F-gs-font 7 7 SF
621.4 410 M
( y\) {) s
415.6 402 M (77:) s
432.4 402 M
(    subsets[find\(subsets, x\)] = find\(subsets, y\);) s
415.6 394 M (78:) s
432.4 394 M
(  }) s
415.6 386 M (79:) s
432.4 386 M
(}) s
_R
S
%%Page: (1) 128
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/MinimumHeightTrees.java) def
/fdir (./graphs) def
/ftail (MinimumHeightTrees.java) def
% User defined strings:
/fmodstr (Mon Feb 25 16:07:33 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MinimumHeightTrees.java Page 1 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  For an undirected graph with tree characteristics, we can choose any node as the r) s
5 490 M
(oot. The result graph is then a rooted tree. Among all possible rooted trees, those with min) s
5 482 M
(imum height are called minimum height trees \(MHTs\). Given such a graph, write a function to ) s
5 474 M
(find all the MHTs and return a list of their root labels.) s
/F-gs-font 7 7 SF
22.8 466 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Format) s
/F-gs-font 7 7 SF
22.8 450 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  The graph contains n nodes which are labeled from 0 to n - 1. You will be given th) s
5 442 M
(e number n and a list of undirected edges \(each edge is a pair of labels\).) s
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  You can assume that no duplicate edges will appear in edges. Since all edges are u) s
5 418 M
(ndirected, [0, 1] is the same as [1, 0] and thus will not appear together in edges.) s
/F-gs-font 7 7 SF
18.6 410 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 1 :) s
/F-gs-font 7 7 SF
18.6 394 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: n = 4, edges = [[1, 0], [1, 2], [1, 3]]) s
/F-gs-font 7 7 SF
18.6 378 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  0) s
/F-gs-font 7 7 SF
18.6 362 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  |) s
/F-gs-font 7 7 SF
18.6 354 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  1) s
/F-gs-font 7 7 SF
18.6 346 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  / \\) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  2   3) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Output: [1]) s
/F-gs-font 7 7 SF
18.6 314 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  Example 2 :) s
/F-gs-font 7 7 SF
18.6 306 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 298 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Input: n = 6, edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]) s
/F-gs-font 7 7 SF
18.6 290 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 282 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(  0  1  2) s
/F-gs-font 7 7 SF
18.6 274 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
(  \\ | /) s
/F-gs-font 7 7 SF
18.6 266 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
(  3) s
/F-gs-font 7 7 SF
18.6 258 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
(  |) s
/F-gs-font 7 7 SF
18.6 250 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
(  4) s
/F-gs-font 7 7 SF
18.6 242 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
(  |) s
/F-gs-font 7 7 SF
18.6 234 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
(  5) s
/F-gs-font 7 7 SF
18.6 226 M (33:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 218 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 218 M
(  Output: [3, 4]) s
/F-gs-font 7 7 SF
18.6 210 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 210 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 202 M (36:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 194 M (37:) s
/Courier-Oblique 7 7 SUF
35.4 194 M
(  According to the definition of tree on Wikipedia: \342\\200\\234a tree is an undirected) s
5 186 M
( graph in which any two vertices are connected by exactly one path. In other words, any conn) s
5 178 M
(ected graph without simple cycles is a tree.\342\\200\\235) s
/F-gs-font 7 7 SF
18.6 170 M (38:) s
/Courier-Oblique 7 7 SUF
35.4 170 M
(  The height of a rooted tree is the number of edges on the longest downward path be) s
5 162 M
(tween the root and a leaf.) s
/F-gs-font 7 7 SF
18.6 154 M (39:) s
/Courier-Oblique 7 7 SUF
35.4 154 M
( */) s
/F-gs-font 7 7 SF
18.6 146 M (40:) s
/Courier-Bold 7 7 SUF
35.4 146 M
(class) s
/F-gs-font 7 7 SF
56.4 146 M
( Solution {) s
18.6 138 M (41:) s
35.4 138 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 138 M
(// fastest) s
/F-gs-font 7 7 SF
18.6 130 M (42:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 130 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 130 M
(// approach: do BFS starting with the outermost layer where there is only 1 connec) s
5 122 M
(tion) s
/F-gs-font 7 7 SF
18.6 114 M (43:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 114 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 114 M
(//           iterate level per level with BFS and decrementing the degree of the n) s
5 106 M
(eighbors) s
/F-gs-font 7 7 SF
18.6 98 M (44:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 98 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 98 M
(public) s
/F-gs-font 7 7 SF
69 98 M
( List<Integer> findMinHeightTrees\() s
/Courier-Bold 7 7 SUF
211.8 98 M
(int) s
/F-gs-font 7 7 SF
224.4 98 M
( n, ) s
/Courier-Bold 7 7 SUF
241.2 98 M
(int) s
/F-gs-font 7 7 SF
253.8 98 M
([][] edges\) {) s
18.6 90 M (45:) s
35.4 90 M
(    List<List<Integer>> myGraph = ) s
/Courier-Bold 7 7 SUF
178.2 90 M
(new) s
/F-gs-font 7 7 SF
190.8 90 M
( ArrayList<List<Integer>>\(\);) s
18.6 82 M (46:) s
35.4 82 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 82 M
(new) s
/F-gs-font 7 7 SF
161.4 82 M
( ArrayList<Integer>\(\);) s
18.6 74 M (47:) s
18.6 66 M (48:) s
35.4 66 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 66 M
(if) s
/F-gs-font 7 7 SF
60.6 66 M
( \(n == 1\) {) s
18.6 58 M (49:) s
35.4 58 M
(      result.add\(0\);) s
18.6 50 M (50:) s
35.4 50 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 50 M
(return) s
/F-gs-font 7 7 SF
85.8 50 M
( result;) s
18.6 42 M (51:) s
35.4 42 M
(    }) s
18.6 34 M (52:) s
18.6 26 M (53:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(int) s
/F-gs-font 7 7 SF
64.8 26 M
([] degree = ) s
/Courier-Bold 7 7 SUF
115.2 26 M
(new) s
/F-gs-font 7 7 SF
127.8 26 M
( ) s
/Courier-Bold 7 7 SUF
132 26 M
(int) s
/F-gs-font 7 7 SF
144.6 26 M
([n];) s
18.6 18 M (54:) s
18.6 10 M (55:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(for) s
/F-gs-font 7 7 SF
64.8 10 M
(\() s
/Courier-Bold 7 7 SUF
69 10 M
(int) s
/F-gs-font 7 7 SF
81.6 10 M
( i=0; i<n; i++\) myGraph.add\() s
/Courier-Bold 7 7 SUF
199.2 10 M
(new) s
/F-gs-font 7 7 SF
211.8 10 M
( ArrayList<Integer>\(\)\);) s
18.6 2 M (56:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(for) s
/F-gs-font 7 7 SF
64.8 2 M
(\() s
/Courier-Bold 7 7 SUF
69 2 M
(int) s
/F-gs-font 7 7 SF
81.6 2 M
( i=0; i<edges.length; i++\) {) s
415.6 522 M (57:) s
432.4 522 M
(        myGraph.get\(edges[i][0]\).add\(edges[i][1]\);) s
415.6 514 M (58:) s
432.4 514 M
(        myGraph.get\(edges[i][1]\).add\(edges[i][0]\);) s
415.6 506 M (59:) s
432.4 506 M
(        degree[edges[i][0]]++;) s
415.6 498 M (60:) s
432.4 498 M
(        degree[edges[i][1]]++;) s
415.6 490 M (61:) s
432.4 490 M
(    }) s
415.6 482 M (62:) s
415.6 474 M (63:) s
432.4 474 M
(    Queue<Integer> q = ) s
/Courier-Bold 7 7 SUF
529 474 M
(new) s
/F-gs-font 7 7 SF
541.6 474 M
( ArrayDeque<Integer>\(\);) s
415.6 466 M (64:) s
415.6 458 M (65:) s
432.4 458 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 458 M
(for) s
/F-gs-font 7 7 SF
461.8 458 M
(\() s
/Courier-Bold 7 7 SUF
466 458 M
(int) s
/F-gs-font 7 7 SF
478.6 458 M
( i = 0; i < n; i++\) {) s
415.6 450 M (66:) s
432.4 450 M
(        ) s
/Courier-Bold 7 7 SUF
466 450 M
(if) s
/F-gs-font 7 7 SF
474.4 450 M
( \(degree[i] == 0\)) s
415.6 442 M (67:) s
432.4 442 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 442 M
(return) s
/F-gs-font 7 7 SF
524.8 442 M
( result;) s
415.6 434 M (68:) s
432.4 434 M
(        ) s
/Courier-Bold 7 7 SUF
466 434 M
(else) s
/F-gs-font 7 7 SF
482.8 434 M
( ) s
/Courier-Bold 7 7 SUF
487 434 M
(if) s
/F-gs-font 7 7 SF
495.4 434 M
( \(degree[i] == 1\)) s
415.6 426 M (69:) s
432.4 426 M
(                q.offer\(i\);) s
415.6 418 M (70:) s
432.4 418 M
(    }) s
415.6 410 M (71:) s
415.6 402 M (72:) s
432.4 402 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 402 M
(while) s
/F-gs-font 7 7 SF
470.2 402 M
(\(!q.isEmpty\(\)\) {) s
415.6 394 M (73:) s
432.4 394 M
(        result = ) s
/Courier-Bold 7 7 SUF
503.8 394 M
(new) s
/F-gs-font 7 7 SF
516.4 394 M
( ArrayList<Integer>\(\);) s
415.6 386 M (74:) s
432.4 386 M
(        ) s
/Courier-Bold 7 7 SUF
466 386 M
(int) s
/F-gs-font 7 7 SF
478.6 386 M
( count = q.size\(\);) s
415.6 378 M (75:) s
415.6 370 M (76:) s
432.4 370 M
(        ) s
/Courier-Bold 7 7 SUF
466 370 M
(for) s
/F-gs-font 7 7 SF
478.6 370 M
(\() s
/Courier-Bold 7 7 SUF
482.8 370 M
(int) s
/F-gs-font 7 7 SF
495.4 370 M
( i = 0; i < count; i++\){) s
415.6 362 M (77:) s
432.4 362 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 362 M
(int) s
/F-gs-font 7 7 SF
512.2 362 M
( curr = q.poll\(\);) s
415.6 354 M (78:) s
432.4 354 M
(                result.add\(curr\);) s
415.6 346 M (79:) s
432.4 346 M
(                degree[curr]--;) s
415.6 338 M (80:) s
415.6 330 M (81:) s
432.4 330 M
(                ) s
/Courier-Bold 7 7 SUF
499.6 330 M
(for) s
/F-gs-font 7 7 SF
512.2 330 M
(\() s
/Courier-Bold 7 7 SUF
516.4 330 M
(int) s
/F-gs-font 7 7 SF
529 330 M
( j = 0; j < myGraph.get\(curr\).size\(\); j++\) {) s
415.6 322 M (82:) s
432.4 322 M
(                        ) s
/Courier-Bold 7 7 SUF
533.2 322 M
(int) s
/F-gs-font 7 7 SF
545.8 322 M
( next = myGraph.get\(curr\).get\(k\);) s
415.6 314 M (83:) s
415.6 306 M (84:) s
432.4 306 M
(                        ) s
/Courier-Bold 7 7 SUF
533.2 306 M
(if) s
/F-gs-font 7 7 SF
541.6 306 M
( \(degree[next] == 0\) ) s
/Courier-Bold 7 7 SUF
629.8 306 M
(continue) s
/F-gs-font 7 7 SF
663.4 306 M
(;) s
415.6 298 M (85:) s
432.4 298 M
(                        ) s
/Courier-Bold 7 7 SUF
533.2 298 M
(if) s
/F-gs-font 7 7 SF
541.6 298 M
( \(degree[next] == 2\) q.offer\(next\);) s
415.6 290 M (86:) s
415.6 282 M (87:) s
432.4 282 M
(                                  degree[next]--;) s
415.6 274 M (88:) s
432.4 274 M
(                }) s
415.6 266 M (89:) s
432.4 266 M
(        }) s
415.6 258 M (90:) s
432.4 258 M
(    }) s
415.6 250 M (91:) s
415.6 242 M (92:) s
432.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 242 M
(return) s
/F-gs-font 7 7 SF
474.4 242 M
( result;) s
415.6 234 M (93:) s
432.4 234 M
(  }) s
415.6 226 M (94:) s
415.6 218 M (95:) s
432.4 218 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 218 M
(// slower) s
/F-gs-font 7 7 SF
415.6 210 M (96:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 210 M
(  ) s
/Courier-Oblique 7 7 SUF
440.8 210 M
(// approach: use cached DFS to get the minimum depth per node) s
/F-gs-font 7 7 SF
415.6 202 M (97:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
432.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 202 M
(public) s
/F-gs-font 7 7 SF
466 202 M
( List<Integer> findMinHeightTrees\() s
/Courier-Bold 7 7 SUF
608.8 202 M
(int) s
/F-gs-font 7 7 SF
621.4 202 M
( n, ) s
/Courier-Bold 7 7 SUF
638.2 202 M
(int) s
/F-gs-font 7 7 SF
650.8 202 M
([][] edges\) {) s
415.6 194 M (98:) s
432.4 194 M
(    List<List<Integer>> graph = ) s
/Courier-Bold 7 7 SUF
566.8 194 M
(new) s
/F-gs-font 7 7 SF
579.4 194 M
( ArrayList<>\(\);) s
415.6 186 M (99:) s
411.4 178 M (100:) s
432.4 178 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 178 M
(for) s
/F-gs-font 7 7 SF
461.8 178 M
(\() s
/Courier-Bold 7 7 SUF
466 178 M
(int) s
/F-gs-font 7 7 SF
478.6 178 M
( i = 0; i < n; i++\) graph.add\() s
/Courier-Bold 7 7 SUF
604.6 178 M
(new) s
/F-gs-font 7 7 SF
617.2 178 M
( ArrayList<Integer>\(\)\);) s
411.4 170 M (101:) s
432.4 170 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 170 M
(for) s
/F-gs-font 7 7 SF
461.8 170 M
(\() s
/Courier-Bold 7 7 SUF
466 170 M
(int) s
/F-gs-font 7 7 SF
478.6 170 M
( i = 0; i < edges.length; i++\) {) s
411.4 162 M (102:) s
432.4 162 M
(      graph.get\(edges[i][0]\).add\(edges[i][1]\);) s
411.4 154 M (103:) s
432.4 154 M
(      graph.get\(edges[i][1]\).add\(edges[i][0]\);) s
411.4 146 M (104:) s
432.4 146 M
(    }) s
411.4 138 M (105:) s
411.4 130 M (106:) s
432.4 130 M
(    HashMap<String, Integer> map = ) s
/Courier-Bold 7 7 SUF
579.4 130 M
(new) s
/F-gs-font 7 7 SF
592 130 M
( HashMap<>\(\);) s
411.4 122 M (107:) s
432.4 122 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
545.8 122 M
(new) s
/F-gs-font 7 7 SF
558.4 122 M
( ArrayList<Integer>\(\);) s
411.4 114 M (108:) s
411.4 106 M (109:) s
432.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 106 M
(int) s
/F-gs-font 7 7 SF
461.8 106 M
( minDepth = Integer.MAX_VALUE;) s
411.4 98 M (110:) s
432.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 98 M
(for) s
/F-gs-font 7 7 SF
461.8 98 M
(\() s
/Courier-Bold 7 7 SUF
466 98 M
(int) s
/F-gs-font 7 7 SF
478.6 98 M
( i = 0; i < n; i++\) {) s
411.4 90 M (111:) s
432.4 90 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 90 M
(int) s
/F-gs-font 7 7 SF
470.2 90 M
( verticeDepth = getMaxDepth\(graph, map, i, -1\);) s
411.4 82 M (112:) s
432.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 82 M
(if) s
/F-gs-font 7 7 SF
466 82 M
(\(minDepth == verticeDepth\) {) s
411.4 74 M (113:) s
432.4 74 M
(        result.add\(i\);) s
411.4 66 M (114:) s
432.4 66 M
(      } ) s
/Courier-Bold 7 7 SUF
466 66 M
(else) s
/F-gs-font 7 7 SF
482.8 66 M
( ) s
/Courier-Bold 7 7 SUF
487 66 M
(if) s
/F-gs-font 7 7 SF
495.4 66 M
(\(minDepth > verticeDepth\) {) s
411.4 58 M (115:) s
432.4 58 M
(        result.clear\(\);) s
411.4 50 M (116:) s
432.4 50 M
(        result.add\(i\);) s
411.4 42 M (117:) s
432.4 42 M
(      }) s
411.4 34 M (118:) s
432.4 34 M
(      minDepth = Math.min\(minDepth, verticeDepth\);) s
411.4 26 M (119:) s
432.4 26 M
(    }) s
411.4 18 M (120:) s
411.4 10 M (121:) s
432.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 10 M
(return) s
/F-gs-font 7 7 SF
474.4 10 M
( result;) s
411.4 2 M (122:) s
432.4 2 M
(  }) s
_R
S
%%Page: (2) 129
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (./graphs/MinimumHeightTrees.java) def
/fdir (./graphs) def
/ftail (MinimumHeightTrees.java) def
% User defined strings:
/fmodstr (Mon Feb 25 16:07:33 2019) def
/pagenumstr (2) def
/user_header_p true def
/user_header_left_str (MinimumHeightTrees.java Page 2 of 2) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
14.4 522 M (123:) s
14.4 514 M (124:) s
35.4 514 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 514 M
(public) s
/F-gs-font 7 7 SF
69 514 M
( ) s
/Courier-Bold 7 7 SUF
73.2 514 M
(int) s
/F-gs-font 7 7 SF
85.8 514 M
( getMaxDepth\(List<List<Integer>> graph, HashMap<String, Integer> map, ) s
/Courier-Bold 7 7 SUF
379.8 514 M
(in) s
5 506 M
(t) s
/F-gs-font 7 7 SF
9.2 506 M
( curr, ) s
/Courier-Bold 7 7 SUF
38.6 506 M
(int) s
/F-gs-font 7 7 SF
51.2 506 M
( prev\) {) s
14.4 498 M (125:) s
35.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 498 M
(if) s
/F-gs-font 7 7 SF
60.6 498 M
(\(graph.get\(curr\).size\(\) == 0\) ) s
/Courier-Bold 7 7 SUF
186.6 498 M
(return) s
/F-gs-font 7 7 SF
211.8 498 M
( 1;) s
14.4 490 M (126:) s
35.4 490 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 490 M
(if) s
/F-gs-font 7 7 SF
60.6 490 M
(\(map.containsKey\(curr + ) s
/Courier-Bold 7 7 SUF
161.4 490 M
(" ") s
/F-gs-font 7 7 SF
174 490 M
( + prev\)\) ) s
/Courier-Bold 7 7 SUF
216 490 M
(return) s
/F-gs-font 7 7 SF
241.2 490 M
( map.get\(curr + ) s
/Courier-Bold 7 7 SUF
308.4 490 M
(" ") s
/F-gs-font 7 7 SF
321 490 M
( + prev\);) s
14.4 482 M (127:) s
14.4 474 M (128:) s
35.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 474 M
(int) s
/F-gs-font 7 7 SF
64.8 474 M
( maxDepth = 0;) s
14.4 466 M (129:) s
35.4 466 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 466 M
(for) s
/F-gs-font 7 7 SF
64.8 466 M
(\() s
/Courier-Bold 7 7 SUF
69 466 M
(int) s
/F-gs-font 7 7 SF
81.6 466 M
( i = 0; i < graph.get\(curr\).size\(\); i++\) {) s
14.4 458 M (130:) s
35.4 458 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 458 M
(if) s
/F-gs-font 7 7 SF
69 458 M
(\(graph.get\(curr\).get\(i\) == prev\) ) s
/Courier-Bold 7 7 SUF
207.6 458 M
(continue) s
/F-gs-font 7 7 SF
241.2 458 M
(;) s
14.4 450 M (131:) s
14.4 442 M (132:) s
35.4 442 M
(      maxDepth = Math.max\(maxDepth, getMaxDepth\(graph, map, graph.get\(curr\).get\(i\), ) s
5 434 M
(curr\) + 1\);) s
14.4 426 M (133:) s
35.4 426 M
(    }) s
14.4 418 M (134:) s
14.4 410 M (135:) s
35.4 410 M
(    map.put\(curr + ) s
/Courier-Bold 7 7 SUF
115.2 410 M
(" ") s
/F-gs-font 7 7 SF
127.8 410 M
( + prev, maxDepth\);) s
14.4 402 M (136:) s
14.4 394 M (137:) s
35.4 394 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 394 M
(return) s
/F-gs-font 7 7 SF
77.4 394 M
( maxDepth;) s
14.4 386 M (138:) s
35.4 386 M
(  }) s
14.4 378 M (139:) s
35.4 378 M
(}) s
_R
S
%%Page: (1) 130
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/CloneGraph.java) def
/fdir (./graphs) def
/ftail (CloneGraph.java) def
% User defined strings:
/fmodstr (Fri Feb 15 17:30:25 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (CloneGraph.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given the head of a graph, return a deep copy \(clone\) of the graph. Each node in t) s
5 490 M
(he graph contains a label \(int\) and a list \(List[UndirectedGraphNode]\) of its neighbors. The) s
5 482 M
(re is an edge between the given node and each of the nodes in its neighbors.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
( */) s
/F-gs-font 7 7 SF
22.8 466 M (6:) s
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(/**) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
( * Definition for undirected graph.) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
( * class UndirectedGraphNode {) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
( *     int label;) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
( *     List<UndirectedGraphNode> neighbors;) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
( *     UndirectedGraphNode\(int x\) { label = x; neighbors = new ArrayList<UndirectedG) s
5 410 M
(raphNode>\(\); }) s
/F-gs-font 7 7 SF
18.6 402 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( * };) s
/F-gs-font 7 7 SF
18.6 394 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( */) s
/F-gs-font 7 7 SF
18.6 386 M (15:) s
/Courier-Bold 7 7 SUF
35.4 386 M
(public) s
/F-gs-font 7 7 SF
60.6 386 M
( ) s
/Courier-Bold 7 7 SUF
64.8 386 M
(class) s
/F-gs-font 7 7 SF
85.8 386 M
( Solution {) s
18.6 378 M (16:) s
35.4 378 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 378 M
(public) s
/F-gs-font 7 7 SF
69 378 M
( UndirectedGraphNode cloneGraph\(UndirectedGraphNode node\) {) s
18.6 370 M (17:) s
35.4 370 M
(    HashMap<UndirectedGraphNode, UndirectedGraphNode> lookup = ) s
/Courier-Bold 7 7 SUF
300 370 M
(new) s
/F-gs-font 7 7 SF
312.6 370 M
( HashMap<>\(\);) s
18.6 362 M (18:) s
18.6 354 M (19:) s
35.4 354 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 354 M
(return) s
/F-gs-font 7 7 SF
77.4 354 M
( cloneGraphNode\(node, lookup\);) s
18.6 346 M (20:) s
35.4 346 M
(  }) s
18.6 338 M (21:) s
18.6 330 M (22:) s
35.4 330 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 330 M
(public) s
/F-gs-font 7 7 SF
69 330 M
( UndirectedGraphNode cloneGraphNode\() s
18.6 322 M (23:) s
35.4 322 M
(    UndirectedGraphNode node,) s
18.6 314 M (24:) s
35.4 314 M
(    HashMap<UndirectedGraphNode, UndirectedGraphNode> lookup) s
18.6 306 M (25:) s
35.4 306 M
(  \) {) s
18.6 298 M (26:) s
35.4 298 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 298 M
(if) s
/F-gs-font 7 7 SF
60.6 298 M
(\(node == ) s
/Courier-Bold 7 7 SUF
98.4 298 M
(null) s
/F-gs-font 7 7 SF
115.2 298 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 298 M
(return) s
/F-gs-font 7 7 SF
148.8 298 M
( node;) s
18.6 290 M (27:) s
35.4 290 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 290 M
(if) s
/F-gs-font 7 7 SF
60.6 290 M
(\(lookup.containsKey\(node\)\) ) s
/Courier-Bold 7 7 SUF
174 290 M
(return) s
/F-gs-font 7 7 SF
199.2 290 M
( lookup.get\(node\);) s
18.6 282 M (28:) s
18.6 274 M (29:) s
35.4 274 M
(    UndirectedGraphNode newNode = ) s
/Courier-Bold 7 7 SUF
178.2 274 M
(new) s
/F-gs-font 7 7 SF
190.8 274 M
( UndirectedGraphNode\(node.label\);) s
18.6 266 M (30:) s
35.4 266 M
(    lookup.put\(node, newNode\);) s
18.6 258 M (31:) s
18.6 250 M (32:) s
35.4 250 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 250 M
(for) s
/F-gs-font 7 7 SF
64.8 250 M
(\(UndirectedGraphNode neighbor : node.neighbors\) {) s
18.6 242 M (33:) s
35.4 242 M
(      newNode.neighbors.add\(cloneGraphNode\(neighbor, lookup\)\);) s
18.6 234 M (34:) s
35.4 234 M
(    }) s
18.6 226 M (35:) s
18.6 218 M (36:) s
35.4 218 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 218 M
(return) s
/F-gs-font 7 7 SF
77.4 218 M
( newNode;) s
18.6 210 M (37:) s
35.4 210 M
(  }) s
18.6 202 M (38:) s
35.4 202 M
(}) s
_R
S
%%Page: (1) 131
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/RegionsCutBySlashes.java) def
/fdir (./graphs) def
/ftail (RegionsCutBySlashes.java) def
% User defined strings:
/fmodstr (Tue Feb 19 23:50:28 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (RegionsCutBySlashes.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  In a N x N grid composed of 1 x 1 squares, each 1 x 1 square consists of a /, \\, o) s
5 490 M
(r blank space.  These characters divide the square into contiguous regions.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  \(Note that backslash characters are escaped, so a \\ is represented as "\\\\".\)) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Return the number of regions.) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
( */) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
18.6 434 M (11:) s
/Courier-Bold 7 7 SUF
35.4 434 M
(class) s
/F-gs-font 7 7 SF
56.4 434 M
( Solution {) s
18.6 426 M (12:) s
35.4 426 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 426 M
(public) s
/F-gs-font 7 7 SF
69 426 M
( ) s
/Courier-Bold 7 7 SUF
73.2 426 M
(int) s
/F-gs-font 7 7 SF
85.8 426 M
( regionsBySlashes\(String[] grid\) {) s
18.6 418 M (13:) s
35.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 418 M
(int) s
/F-gs-font 7 7 SF
64.8 418 M
( size = grid.length;) s
18.6 410 M (14:) s
35.4 410 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 410 M
(int) s
/F-gs-font 7 7 SF
64.8 410 M
([] subsets = ) s
/Courier-Bold 7 7 SUF
119.4 410 M
(new) s
/F-gs-font 7 7 SF
132 410 M
( ) s
/Courier-Bold 7 7 SUF
136.2 410 M
(int) s
/F-gs-font 7 7 SF
148.8 410 M
([4 * size * size];) s
18.6 402 M (15:) s
35.4 402 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 402 M
(for) s
/F-gs-font 7 7 SF
64.8 402 M
(\() s
/Courier-Bold 7 7 SUF
69 402 M
(int) s
/F-gs-font 7 7 SF
81.6 402 M
( i = 0; i < subsets.length; i++\) subsets[i] = i;) s
18.6 394 M (16:) s
18.6 386 M (17:) s
35.4 386 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 386 M
(for) s
/F-gs-font 7 7 SF
64.8 386 M
(\() s
/Courier-Bold 7 7 SUF
69 386 M
(int) s
/F-gs-font 7 7 SF
81.6 386 M
( i = 0; i < size; i++\) {) s
18.6 378 M (18:) s
35.4 378 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 378 M
(for) s
/F-gs-font 7 7 SF
73.2 378 M
(\() s
/Courier-Bold 7 7 SUF
77.4 378 M
(int) s
/F-gs-font 7 7 SF
90 378 M
( j = 0; j < size; j++\) {) s
18.6 370 M (19:) s
35.4 370 M
(        ) s
/Courier-Bold 7 7 SUF
69 370 M
(int) s
/F-gs-font 7 7 SF
81.6 370 M
( root = \(i * size + j\) * 4;) s
18.6 362 M (20:) s
35.4 362 M
(        ) s
/Courier-Bold 7 7 SUF
69 362 M
(char) s
/F-gs-font 7 7 SF
85.8 362 M
( c = grid[i].charAt\(j\);) s
18.6 354 M (21:) s
18.6 346 M (22:) s
35.4 346 M
(        ) s
/Courier-Bold 7 7 SUF
69 346 M
(if) s
/F-gs-font 7 7 SF
77.4 346 M
(\(c == ) s
/Courier-Bold 7 7 SUF
102.6 346 M
('\\\\') s
/F-gs-font 7 7 SF
119.4 346 M
(\) {) s
18.6 338 M (23:) s
35.4 338 M
(          union\(subsets, root + 0, root + 1\);) s
18.6 330 M (24:) s
35.4 330 M
(          union\(subsets, root + 2, root + 3\);) s
18.6 322 M (25:) s
35.4 322 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 322 M
(else) s
/F-gs-font 7 7 SF
94.2 322 M
( ) s
/Courier-Bold 7 7 SUF
98.4 322 M
(if) s
/F-gs-font 7 7 SF
106.8 322 M
(\(c == ) s
/Courier-Bold 7 7 SUF
132 322 M
('/') s
/F-gs-font 7 7 SF
144.6 322 M
(\) {) s
18.6 314 M (26:) s
35.4 314 M
(          union\(subsets, root + 0, root + 3\);) s
18.6 306 M (27:) s
35.4 306 M
(          union\(subsets, root + 1, root + 2\);) s
18.6 298 M (28:) s
35.4 298 M
(        } ) s
/Courier-Bold 7 7 SUF
77.4 298 M
(else) s
/F-gs-font 7 7 SF
94.2 298 M
( {) s
18.6 290 M (29:) s
35.4 290 M
(          union\(subsets, root + 0, root + 1\);) s
18.6 282 M (30:) s
35.4 282 M
(          union\(subsets, root + 1, root + 2\);) s
18.6 274 M (31:) s
35.4 274 M
(          union\(subsets, root + 2, root + 3\);) s
18.6 266 M (32:) s
35.4 266 M
(        }) s
18.6 258 M (33:) s
18.6 250 M (34:) s
35.4 250 M
(        ) s
/Courier-Oblique 7 7 SUF
69 250 M
(// connect up) s
/F-gs-font 7 7 SF
18.6 242 M (35:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 242 M
(        ) s
/Courier-Bold 7 7 SUF
69 242 M
(if) s
/F-gs-font 7 7 SF
77.4 242 M
(\(i - 1 >= 0\)) s
18.6 234 M (36:) s
35.4 234 M
(          union\(subsets, \(\(i - 1\) * size + j\) * 4 + 2, root + 0\);) s
18.6 226 M (37:) s
18.6 218 M (38:) s
35.4 218 M
(        ) s
/Courier-Oblique 7 7 SUF
69 218 M
(// connect down) s
/F-gs-font 7 7 SF
18.6 210 M (39:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 210 M
(        ) s
/Courier-Bold 7 7 SUF
69 210 M
(if) s
/F-gs-font 7 7 SF
77.4 210 M
(\(i + 1 < grid.length\)) s
18.6 202 M (40:) s
35.4 202 M
(          union\(subsets, \(\(i + 1\) * size + j\) * 4 + 0, root + 2\);) s
18.6 194 M (41:) s
18.6 186 M (42:) s
35.4 186 M
(        ) s
/Courier-Oblique 7 7 SUF
69 186 M
(// connect left) s
/F-gs-font 7 7 SF
18.6 178 M (43:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 178 M
(        ) s
/Courier-Bold 7 7 SUF
69 178 M
(if) s
/F-gs-font 7 7 SF
77.4 178 M
(\(j - 1 >= 0\)) s
18.6 170 M (44:) s
35.4 170 M
(          union\(subsets, \(i * size + j - 1\) * 4 + 1, root + 3\);) s
18.6 162 M (45:) s
18.6 154 M (46:) s
35.4 154 M
(        ) s
/Courier-Oblique 7 7 SUF
69 154 M
(// connect right) s
/F-gs-font 7 7 SF
18.6 146 M (47:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 146 M
(        ) s
/Courier-Bold 7 7 SUF
69 146 M
(if) s
/F-gs-font 7 7 SF
77.4 146 M
(\(j + 1 < grid.length\)) s
18.6 138 M (48:) s
35.4 138 M
(          union\(subsets, \(i * size + j + 1\) * 4 + 3, root + 1\);) s
18.6 130 M (49:) s
35.4 130 M
(      }) s
18.6 122 M (50:) s
35.4 122 M
(    }) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(    System.out.println\(Arrays.toString\(subsets\)\);) s
18.6 98 M (53:) s
18.6 90 M (54:) s
35.4 90 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 90 M
(int) s
/F-gs-font 7 7 SF
64.8 90 M
( counter = 0;) s
18.6 82 M (55:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(for) s
/F-gs-font 7 7 SF
64.8 82 M
(\() s
/Courier-Bold 7 7 SUF
69 82 M
(int) s
/F-gs-font 7 7 SF
81.6 82 M
( i = 0; i < subsets.length; i++\)) s
18.6 74 M (56:) s
35.4 74 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 74 M
(if) s
/F-gs-font 7 7 SF
69 74 M
(\(subsets[i] == i\)) s
18.6 66 M (57:) s
35.4 66 M
(        counter++;) s
18.6 58 M (58:) s
18.6 50 M (59:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(return) s
/F-gs-font 7 7 SF
77.4 50 M
( counter;) s
18.6 42 M (60:) s
35.4 42 M
(  }) s
18.6 34 M (61:) s
18.6 26 M (62:) s
35.4 26 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 26 M
(public) s
/F-gs-font 7 7 SF
69 26 M
( ) s
/Courier-Bold 7 7 SUF
73.2 26 M
(int) s
/F-gs-font 7 7 SF
85.8 26 M
( find\() s
/Courier-Bold 7 7 SUF
111 26 M
(int) s
/F-gs-font 7 7 SF
123.6 26 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
174 26 M
(int) s
/F-gs-font 7 7 SF
186.6 26 M
( x\) {) s
18.6 18 M (63:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(if) s
/F-gs-font 7 7 SF
60.6 18 M
(\(subsets[x] != x\) subsets[x] = find\(subsets, subsets[x]\);) s
18.6 10 M (64:) s
35.4 10 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 10 M
(return) s
/F-gs-font 7 7 SF
77.4 10 M
( subsets[x];) s
18.6 2 M (65:) s
35.4 2 M
(  }) s
415.6 522 M (66:) s
415.6 514 M (67:) s
432.4 514 M
(  ) s
/Courier-Bold 7 7 SUF
440.8 514 M
(public) s
/F-gs-font 7 7 SF
466 514 M
( ) s
/Courier-Bold 7 7 SUF
470.2 514 M
(void) s
/F-gs-font 7 7 SF
487 514 M
( union\() s
/Courier-Bold 7 7 SUF
516.4 514 M
(int) s
/F-gs-font 7 7 SF
529 514 M
([] subsets, ) s
/Courier-Bold 7 7 SUF
579.4 514 M
(int) s
/F-gs-font 7 7 SF
592 514 M
( x, ) s
/Courier-Bold 7 7 SUF
608.8 514 M
(int) s
/F-gs-font 7 7 SF
621.4 514 M
( y\) {) s
415.6 506 M (68:) s
432.4 506 M
(    subsets[find\(subsets, x\)] = find\(subsets, y\);) s
415.6 498 M (69:) s
432.4 498 M
(  }) s
415.6 490 M (70:) s
432.4 490 M
(}) s
_R
S
%%Page: (1) 132
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/FindEventualSafeStates.java) def
/fdir (./graphs) def
/ftail (FindEventualSafeStates.java) def
% User defined strings:
/fmodstr (Wed Feb 20 00:55:34 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindEventualSafeStates.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  In a directed graph, we start at some node and every turn, walk along a directed e) s
5 490 M
(dge of the graph.  If we reach a node that is terminal \(that is, it has no outgoing directed) s
5 482 M
( edges\), we stop.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Now, say our starting node is eventually safe if and only if we must eventually wa) s
5 458 M
(lk to a terminal node.  More specifically, there exists a natural number K so that for any c) s
5 450 M
(hoice of where to walk, we must have stopped at a terminal node in less than K steps.) s
/F-gs-font 7 7 SF
22.8 442 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 434 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Which nodes are eventually safe?  Return them as an array in sorted order.) s
/F-gs-font 7 7 SF
22.8 426 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  The directed graph has N nodes with labels 0, 1, ..., N-1, where N is the length o) s
5 410 M
(f graph.  The graph is given in the following form: graph[i] is a list of labels j such that) s
5 402 M
( \(i, j\) is a directed edge of the graph.) s
/F-gs-font 7 7 SF
18.6 394 M (11:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 378 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Input: graph = [[1,2],[2,3],[5],[0],[5],[],[]]) s
/F-gs-font 7 7 SF
18.6 370 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Output: [2,4,5,6]) s
/F-gs-font 7 7 SF
18.6 362 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  Here is a diagram of the above graph.) s
/F-gs-font 7 7 SF
18.6 354 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 346 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  Illustration of graph) s
/F-gs-font 7 7 SF
18.6 338 M (18:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 330 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 322 M (20:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 314 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
(  graph will have length at most 10000.) s
/F-gs-font 7 7 SF
18.6 306 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  The number of edges in the graph will not exceed 32000.) s
/F-gs-font 7 7 SF
18.6 298 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
(  Each graph[i] will be a sorted list of different integers, chosen within the range) s
5 290 M
( [0, graph.length - 1].) s
/F-gs-font 7 7 SF
18.6 282 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( */) s
/F-gs-font 7 7 SF
18.6 274 M (25:) s
18.6 266 M (26:) s
/Courier-Bold 7 7 SUF
35.4 266 M
(class) s
/F-gs-font 7 7 SF
56.4 266 M
( Solution {) s
18.6 258 M (27:) s
35.4 258 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 258 M
(public) s
/F-gs-font 7 7 SF
69 258 M
( List<Integer> eventualSafeNodes\() s
/Courier-Bold 7 7 SUF
207.6 258 M
(int) s
/F-gs-font 7 7 SF
220.2 258 M
([][] graph\) {) s
18.6 250 M (28:) s
35.4 250 M
(    List<Integer> result = ) s
/Courier-Bold 7 7 SUF
148.8 250 M
(new) s
/F-gs-font 7 7 SF
161.4 250 M
( ArrayList<>\(\);) s
18.6 242 M (29:) s
18.6 234 M (30:) s
35.4 234 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 234 M
(int) s
/F-gs-font 7 7 SF
64.8 234 M
([] visitedNode = ) s
/Courier-Bold 7 7 SUF
136.2 234 M
(new) s
/F-gs-font 7 7 SF
148.8 234 M
( ) s
/Courier-Bold 7 7 SUF
153 234 M
(int) s
/F-gs-font 7 7 SF
165.6 234 M
([graph.length];) s
18.6 226 M (31:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(boolean) s
/F-gs-font 7 7 SF
81.6 226 M
([] visitedEdge = ) s
/Courier-Bold 7 7 SUF
153 226 M
(new) s
/F-gs-font 7 7 SF
165.6 226 M
( ) s
/Courier-Bold 7 7 SUF
169.8 226 M
(boolean) s
/F-gs-font 7 7 SF
199.2 226 M
([graph.length];) s
18.6 218 M (32:) s
18.6 210 M (33:) s
35.4 210 M
(    List<Integer>[] g = ) s
/Courier-Bold 7 7 SUF
136.2 210 M
(new) s
/F-gs-font 7 7 SF
148.8 210 M
( ArrayList[graph.length];) s
18.6 202 M (34:) s
18.6 194 M (35:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(for) s
/F-gs-font 7 7 SF
64.8 194 M
(\() s
/Courier-Bold 7 7 SUF
69 194 M
(int) s
/F-gs-font 7 7 SF
81.6 194 M
( i = 0; i < graph.length; i++\) g[i] = ) s
/Courier-Bold 7 7 SUF
241.2 194 M
(new) s
/F-gs-font 7 7 SF
253.8 194 M
( ArrayList<>\(\);) s
18.6 186 M (36:) s
35.4 186 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 186 M
(for) s
/F-gs-font 7 7 SF
64.8 186 M
(\() s
/Courier-Bold 7 7 SUF
69 186 M
(int) s
/F-gs-font 7 7 SF
81.6 186 M
( i = 0; i < graph.length; i++\) {) s
18.6 178 M (37:) s
35.4 178 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 178 M
(for) s
/F-gs-font 7 7 SF
73.2 178 M
(\() s
/Courier-Bold 7 7 SUF
77.4 178 M
(int) s
/F-gs-font 7 7 SF
90 178 M
( j = 0; j < graph[i].length; j++\) {) s
18.6 170 M (38:) s
35.4 170 M
(        g[i].add\(graph[i][j]\);) s
18.6 162 M (39:) s
35.4 162 M
(      }) s
18.6 154 M (40:) s
35.4 154 M
(    }) s
18.6 146 M (41:) s
18.6 138 M (42:) s
35.4 138 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 138 M
(for) s
/F-gs-font 7 7 SF
64.8 138 M
(\() s
/Courier-Bold 7 7 SUF
69 138 M
(int) s
/F-gs-font 7 7 SF
81.6 138 M
( i = 0; i < graph.length; i++\) {) s
18.6 130 M (43:) s
35.4 130 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 130 M
(if) s
/F-gs-font 7 7 SF
69 130 M
(\(DFS\(g, visitedNode, visitedEdge, i, result\)\)) s
18.6 122 M (44:) s
35.4 122 M
(        result.add\(i\);) s
18.6 114 M (45:) s
35.4 114 M
(    }) s
18.6 106 M (46:) s
18.6 98 M (47:) s
35.4 98 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 98 M
(return) s
/F-gs-font 7 7 SF
77.4 98 M
( result;) s
18.6 90 M (48:) s
35.4 90 M
(  }) s
18.6 82 M (49:) s
18.6 74 M (50:) s
35.4 74 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 74 M
(public) s
/F-gs-font 7 7 SF
69 74 M
( ) s
/Courier-Bold 7 7 SUF
73.2 74 M
(boolean) s
/F-gs-font 7 7 SF
102.6 74 M
( DFS\(List<Integer>[] g, ) s
/Courier-Bold 7 7 SUF
203.4 74 M
(int) s
/F-gs-font 7 7 SF
216 74 M
([] visitedNode, ) s
/Courier-Bold 7 7 SUF
283.2 74 M
(boolean) s
/F-gs-font 7 7 SF
312.6 74 M
([] visitedEdge, ) s
/Courier-Bold 7 7 SUF
379.8 74 M
(in) s
5 66 M
(t) s
/F-gs-font 7 7 SF
9.2 66 M
( curr, List<Integer> result\) {) s
18.6 58 M (51:) s
35.4 58 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 58 M
(if) s
/F-gs-font 7 7 SF
60.6 58 M
(\(visitedNode[curr] > 0\) ) s
/Courier-Bold 7 7 SUF
161.4 58 M
(return) s
/F-gs-font 7 7 SF
186.6 58 M
( visitedNode[curr] == 1;) s
18.6 50 M (52:) s
18.6 42 M (53:) s
35.4 42 M
(    visitedEdge[curr] = ) s
/Courier-Bold 7 7 SUF
136.2 42 M
(true) s
/F-gs-font 7 7 SF
153 42 M
(;) s
18.6 34 M (54:) s
18.6 26 M (55:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(boolean) s
/F-gs-font 7 7 SF
81.6 26 M
( returnValue = ) s
/Courier-Bold 7 7 SUF
144.6 26 M
(true) s
/F-gs-font 7 7 SF
161.4 26 M
(;) s
18.6 18 M (56:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(for) s
/F-gs-font 7 7 SF
64.8 18 M
(\() s
/Courier-Bold 7 7 SUF
69 18 M
(int) s
/F-gs-font 7 7 SF
81.6 18 M
( next : g[curr]\) {) s
18.6 10 M (57:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(if) s
/F-gs-font 7 7 SF
69 10 M
(\(visitedEdge[next]\) ) s
/Courier-Bold 7 7 SUF
153 10 M
(return) s
/F-gs-font 7 7 SF
178.2 10 M
( ) s
/Courier-Bold 7 7 SUF
182.4 10 M
(false) s
/F-gs-font 7 7 SF
203.4 10 M
(;) s
18.6 2 M (58:) s
415.6 522 M (59:) s
432.4 522 M
(      returnValue &= DFS\(g, visitedNode, visitedEdge, next, result\);) s
415.6 514 M (60:) s
432.4 514 M
(    }) s
415.6 506 M (61:) s
415.6 498 M (62:) s
432.4 498 M
(    visitedEdge[curr] = ) s
/Courier-Bold 7 7 SUF
533.2 498 M
(false) s
/F-gs-font 7 7 SF
554.2 498 M
(;) s
415.6 490 M (63:) s
415.6 482 M (64:) s
432.4 482 M
(    visitedNode[curr] = returnValue ? 1 : 2;) s
415.6 474 M (65:) s
432.4 474 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 474 M
(return) s
/F-gs-font 7 7 SF
474.4 474 M
( returnValue;) s
415.6 466 M (66:) s
432.4 466 M
(  }) s
415.6 458 M (67:) s
432.4 458 M
(}) s
_R
S
%%Page: (1) 133
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./graphs/EvaluateDivision.java) def
/fdir (./graphs) def
/ftail (EvaluateDivision.java) def
% User defined strings:
/fmodstr (Sun Feb 17 21:24:58 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (EvaluateDivision.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Equations are given in the format A / B = k, where A and B are variables represent) s
5 490 M
(ed as strings, and k is a real number \(floating point number\). Given some queries, return th) s
5 482 M
(e answers. If the answer does not exist, return -1.0.) s
/F-gs-font 7 7 SF
22.8 474 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  Example:) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  Given a / b = 2.0, b / c = 3.0.) s
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  queries are: a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ? .) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(  return [6.0, 0.5, -1.0, 1.0, -1.0 ].) s
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  The input is: vector<pair<string, string>> equations, vector<double>& values, vect) s
5 418 M
(or<pair<string, string>> queries , where equations.size\(\) == values.size\(\), and the values a) s
5 410 M
(re positive. This represents the equations. Return vector<double>.) s
/F-gs-font 7 7 SF
18.6 402 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 394 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  According to the example above:) s
/F-gs-font 7 7 SF
18.6 386 M (14:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 378 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  equations = [ ["a", "b"], ["b", "c"] ],) s
/F-gs-font 7 7 SF
18.6 370 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  values = [2.0, 3.0],) s
/F-gs-font 7 7 SF
18.6 362 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  queries = [ ["a", "c"], ["b", "a"], ["a", "e"], ["a", "a"], ["x", "x"] ].) s
/F-gs-font 7 7 SF
18.6 354 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  The input is always valid. You may assume that evaluating the queries will result ) s
5 346 M
(in no division by zero and there is no contradiction.) s
/F-gs-font 7 7 SF
18.6 338 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( */) s
/F-gs-font 7 7 SF
18.6 330 M (20:) s
18.6 322 M (21:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( Solution {) s
18.6 314 M (22:) s
35.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 314 M
(public) s
/F-gs-font 7 7 SF
69 314 M
( ) s
/Courier-Bold 7 7 SUF
73.2 314 M
(double) s
/F-gs-font 7 7 SF
98.4 314 M
([] calcEquation\(String[][] equations, ) s
/Courier-Bold 7 7 SUF
258 314 M
(double) s
/F-gs-font 7 7 SF
283.2 314 M
([] values, String[][] que) s
5 306 M
(ries\) {) s
18.6 298 M (23:) s
35.4 298 M
(    HashMap<String, HashMap<String, Double>> graph = ) s
/Courier-Bold 7 7 SUF
258 298 M
(new) s
/F-gs-font 7 7 SF
270.6 298 M
( HashMap<>\(\);) s
18.6 290 M (24:) s
35.4 290 M
(    HashSet<String> visited = ) s
/Courier-Bold 7 7 SUF
161.4 290 M
(new) s
/F-gs-font 7 7 SF
174 290 M
( HashSet<>\(\);) s
18.6 282 M (25:) s
18.6 274 M (26:) s
35.4 274 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 274 M
(for) s
/F-gs-font 7 7 SF
64.8 274 M
(\() s
/Courier-Bold 7 7 SUF
69 274 M
(int) s
/F-gs-font 7 7 SF
81.6 274 M
( i = 0; i < equations.length; i++\) {) s
18.6 266 M (27:) s
35.4 266 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 266 M
(if) s
/F-gs-font 7 7 SF
69 266 M
(\(!graph.containsKey\(equations[i][0]\)\) graph.put\(equations[i][0], ) s
/Courier-Bold 7 7 SUF
342 266 M
(new) s
/F-gs-font 7 7 SF
354.6 266 M
( HashMap) s
5 258 M
(<>\(\)\);) s
18.6 250 M (28:) s
35.4 250 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 250 M
(if) s
/F-gs-font 7 7 SF
69 250 M
(\(!graph.containsKey\(equations[i][1]\)\) graph.put\(equations[i][1], ) s
/Courier-Bold 7 7 SUF
342 250 M
(new) s
/F-gs-font 7 7 SF
354.6 250 M
( HashMap) s
5 242 M
(<>\(\)\);) s
18.6 234 M (29:) s
35.4 234 M
(      graph.get\(equations[i][0]\).put\(equations[i][1], values[i]\);) s
18.6 226 M (30:) s
35.4 226 M
(      graph.get\(equations[i][1]\).put\(equations[i][0], 1.0/values[i]\);) s
18.6 218 M (31:) s
35.4 218 M
(    }) s
18.6 210 M (32:) s
18.6 202 M (33:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(double) s
/F-gs-font 7 7 SF
77.4 202 M
([] result = ) s
/Courier-Bold 7 7 SUF
127.8 202 M
(new) s
/F-gs-font 7 7 SF
140.4 202 M
( ) s
/Courier-Bold 7 7 SUF
144.6 202 M
(double) s
/F-gs-font 7 7 SF
169.8 202 M
([queries.length];) s
18.6 194 M (34:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(for) s
/F-gs-font 7 7 SF
64.8 194 M
(\() s
/Courier-Bold 7 7 SUF
69 194 M
(int) s
/F-gs-font 7 7 SF
81.6 194 M
( i = 0; i < queries.length; i++\) {) s
18.6 186 M (35:) s
35.4 186 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 186 M
(if) s
/F-gs-font 7 7 SF
69 186 M
(\(!graph.containsKey\(queries[i][0]\) || !graph.containsKey\(queries[i][1]\)\) {) s
18.6 178 M (36:) s
35.4 178 M
(        result[i] = -1.0;) s
18.6 170 M (37:) s
35.4 170 M
(      } ) s
/Courier-Bold 7 7 SUF
69 170 M
(else) s
/F-gs-font 7 7 SF
85.8 170 M
( {) s
18.6 162 M (38:) s
35.4 162 M
(        result[i] = DFS\(graph, queries[i][0], queries[i][1], visited\);) s
18.6 154 M (39:) s
35.4 154 M
(      }) s
18.6 146 M (40:) s
35.4 146 M
(      visited.clear\(\);) s
18.6 138 M (41:) s
35.4 138 M
(    }) s
18.6 130 M (42:) s
18.6 122 M (43:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( result;) s
18.6 114 M (44:) s
35.4 114 M
(  }) s
18.6 106 M (45:) s
18.6 98 M (46:) s
35.4 98 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 98 M
(public) s
/F-gs-font 7 7 SF
69 98 M
( ) s
/Courier-Bold 7 7 SUF
73.2 98 M
(double) s
/F-gs-font 7 7 SF
98.4 98 M
( DFS\() s
18.6 90 M (47:) s
35.4 90 M
(    HashMap<String, HashMap<String, Double>> graph,) s
18.6 82 M (48:) s
35.4 82 M
(    String curr,) s
18.6 74 M (49:) s
35.4 74 M
(    String end,) s
18.6 66 M (50:) s
35.4 66 M
(    HashSet<String> visited) s
18.6 58 M (51:) s
35.4 58 M
(  \) {) s
18.6 50 M (52:) s
35.4 50 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 50 M
(if) s
/F-gs-font 7 7 SF
60.6 50 M
(\(graph.get\(curr\).containsKey\(end\)\) ) s
/Courier-Bold 7 7 SUF
207.6 50 M
(return) s
/F-gs-font 7 7 SF
232.8 50 M
( graph.get\(curr\).get\(end\);) s
18.6 42 M (53:) s
18.6 34 M (54:) s
35.4 34 M
(    visited.add\(curr\);) s
18.6 26 M (55:) s
18.6 18 M (56:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(for) s
/F-gs-font 7 7 SF
64.8 18 M
(\(Map.Entry<String, Double> entry : graph.get\(curr\).entrySet\(\)\) {) s
18.6 10 M (57:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(if) s
/F-gs-font 7 7 SF
69 10 M
(\(!visited.contains\(entry.getKey\(\)\)\) {) s
18.6 2 M (58:) s
35.4 2 M
(        ) s
/Courier-Bold 7 7 SUF
69 2 M
(double) s
/F-gs-font 7 7 SF
94.2 2 M
( nextDFSResult = DFS\(graph, entry.getKey\(\), end, visited\);) s
415.6 522 M (59:) s
432.4 522 M
(        ) s
/Courier-Bold 7 7 SUF
466 522 M
(if) s
/F-gs-font 7 7 SF
474.4 522 M
(\(nextDFSResult != -1.0\) ) s
/Courier-Bold 7 7 SUF
575.2 522 M
(return) s
/F-gs-font 7 7 SF
600.4 522 M
( entry.getValue\(\) * nextDFSResult;) s
415.6 514 M (60:) s
432.4 514 M
(      }) s
415.6 506 M (61:) s
432.4 506 M
(    }) s
415.6 498 M (62:) s
432.4 498 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 498 M
(return) s
/F-gs-font 7 7 SF
474.4 498 M
( -1.0;) s
415.6 490 M (63:) s
432.4 490 M
(  }) s
415.6 482 M (64:) s
432.4 482 M
(}) s
_R
S
%%Page: (1) 134
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./heaps/FindMedianFromDataStream.java) def
/fdir (./heaps) def
/ftail (FindMedianFromDataStream.java) def
% User defined strings:
/fmodstr (Tue Feb 26 00:29:50 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (FindMedianFromDataStream.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Hard) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Median is the middle value in an ordered integer list. If the size of the list is ) s
5 490 M
(even, there is no middle value. So the median is the mean of the two middle value.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  For example,) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(  [2,3,4], the median is 3) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  [2,3], the median is \(2 + 3\) / 2 = 2.5) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Design a data structure that supports the following two operations:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  void addNum\(int num\) - Add a integer number from the data stream to the data struc) s
5 410 M
(ture.) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  double findMedian\(\) - Return the median of all elements so far.) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Example:) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  addNum\(1\)) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  addNum\(2\)) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  findMedian\(\) -> 1.5) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
(  addNum\(3\)) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  findMedian\(\) -> 2) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  Follow up:) s
/F-gs-font 7 7 SF
18.6 314 M (25:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  If all integer numbers from the stream are between 0 and 100, how would you optimi) s
5 298 M
(ze it?) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
(  If 99% of all integer numbers from the stream are between 0 and 100, how would you) s
5 282 M
( optimize it?) s
/F-gs-font 7 7 SF
18.6 274 M (28:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 266 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( */) s
/F-gs-font 7 7 SF
18.6 258 M (30:) s
18.6 250 M (31:) s
/Courier-Bold 7 7 SUF
35.4 250 M
(class) s
/F-gs-font 7 7 SF
56.4 250 M
( MedianFinder {) s
18.6 242 M (32:) s
35.4 242 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 242 M
(/** initialize your data structure here. */) s
/F-gs-font 7 7 SF
18.6 234 M (33:) s
35.4 234 M
(  PriorityQueue<Integer> qLow;) s
18.6 226 M (34:) s
35.4 226 M
(  PriorityQueue<Integer> qHigh;) s
18.6 218 M (35:) s
18.6 210 M (36:) s
35.4 210 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 210 M
(public) s
/F-gs-font 7 7 SF
69 210 M
( MedianFinder\(\) {) s
18.6 202 M (37:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(this) s
/F-gs-font 7 7 SF
69 202 M
(.qLow = ) s
/Courier-Bold 7 7 SUF
102.6 202 M
(new) s
/F-gs-font 7 7 SF
115.2 202 M
( PriorityQueue<Integer>\(Collections.reverseOrder\(\)\);) s
18.6 194 M (38:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(this) s
/F-gs-font 7 7 SF
69 194 M
(.qHigh = ) s
/Courier-Bold 7 7 SUF
106.8 194 M
(new) s
/F-gs-font 7 7 SF
119.4 194 M
( PriorityQueue<Integer>\(\);) s
18.6 186 M (39:) s
35.4 186 M
(  }) s
18.6 178 M (40:) s
18.6 170 M (41:) s
35.4 170 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 170 M
(public) s
/F-gs-font 7 7 SF
69 170 M
( ) s
/Courier-Bold 7 7 SUF
73.2 170 M
(void) s
/F-gs-font 7 7 SF
90 170 M
( addNum\() s
/Courier-Bold 7 7 SUF
123.6 170 M
(int) s
/F-gs-font 7 7 SF
136.2 170 M
( num\) {) s
18.6 162 M (42:) s
35.4 162 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 162 M
(if) s
/F-gs-font 7 7 SF
60.6 162 M
(\(qHigh.isEmpty\(\)\) {) s
18.6 154 M (43:) s
35.4 154 M
(      qHigh.add\(num\);) s
18.6 146 M (44:) s
35.4 146 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 146 M
(else) s
/F-gs-font 7 7 SF
77.4 146 M
( ) s
/Courier-Bold 7 7 SUF
81.6 146 M
(if) s
/F-gs-font 7 7 SF
90 146 M
(\(qLow.size\(\) == qHigh.size\(\)\) {) s
18.6 138 M (45:) s
35.4 138 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 138 M
(if) s
/F-gs-font 7 7 SF
69 138 M
(\(num < qLow.peek\(\)\) {) s
18.6 130 M (46:) s
35.4 130 M
(        qLow.add\(num\);) s
18.6 122 M (47:) s
35.4 122 M
(        qHigh.add\(qLow.poll\(\)\);) s
18.6 114 M (48:) s
35.4 114 M
(      } ) s
/Courier-Bold 7 7 SUF
69 114 M
(else) s
/F-gs-font 7 7 SF
85.8 114 M
( {) s
18.6 106 M (49:) s
35.4 106 M
(        qHigh.add\(num\);) s
18.6 98 M (50:) s
35.4 98 M
(      }) s
18.6 90 M (51:) s
35.4 90 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 90 M
(else) s
/F-gs-font 7 7 SF
77.4 90 M
( {) s
18.6 82 M (52:) s
35.4 82 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 82 M
(if) s
/F-gs-font 7 7 SF
69 82 M
(\(num > qHigh.peek\(\)\) {) s
18.6 74 M (53:) s
35.4 74 M
(        qHigh.add\(num\);) s
18.6 66 M (54:) s
35.4 66 M
(        qLow.add\(qHigh.poll\(\)\);) s
18.6 58 M (55:) s
35.4 58 M
(      } ) s
/Courier-Bold 7 7 SUF
69 58 M
(else) s
/F-gs-font 7 7 SF
85.8 58 M
( {) s
18.6 50 M (56:) s
35.4 50 M
(        qLow.add\(num\);) s
18.6 42 M (57:) s
35.4 42 M
(      }) s
18.6 34 M (58:) s
35.4 34 M
(    }) s
18.6 26 M (59:) s
35.4 26 M
(  }) s
18.6 18 M (60:) s
18.6 10 M (61:) s
35.4 10 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 10 M
(public) s
/F-gs-font 7 7 SF
69 10 M
( ) s
/Courier-Bold 7 7 SUF
73.2 10 M
(double) s
/F-gs-font 7 7 SF
98.4 10 M
( findMedian\(\) {) s
18.6 2 M (62:) s
35.4 2 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 2 M
(if) s
/F-gs-font 7 7 SF
60.6 2 M
(\(qHigh.size\(\) == qLow.size\(\)\) {) s
415.6 522 M (63:) s
432.4 522 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 522 M
(return) s
/F-gs-font 7 7 SF
482.8 522 M
( \(qHigh.peek\(\) + qLow.peek\(\)\) / 2.0;) s
415.6 514 M (64:) s
432.4 514 M
(    } ) s
/Courier-Bold 7 7 SUF
457.6 514 M
(else) s
/F-gs-font 7 7 SF
474.4 514 M
( {) s
415.6 506 M (65:) s
432.4 506 M
(      ) s
/Courier-Bold 7 7 SUF
457.6 506 M
(return) s
/F-gs-font 7 7 SF
482.8 506 M
( qHigh.peek\(\);) s
415.6 498 M (66:) s
432.4 498 M
(    }) s
415.6 490 M (67:) s
432.4 490 M
(  }) s
415.6 482 M (68:) s
432.4 482 M
(}) s
415.6 474 M (69:) s
415.6 466 M (70:) s
/Courier-Oblique 7 7 SUF
432.4 466 M
(/**) s
/F-gs-font 7 7 SF
415.6 458 M (71:) s
/Courier-Oblique 7 7 SUF
432.4 458 M
( * Your MedianFinder object will be instantiated and called as such:) s
/F-gs-font 7 7 SF
415.6 450 M (72:) s
/Courier-Oblique 7 7 SUF
432.4 450 M
( * MedianFinder obj = new MedianFinder\(\);) s
/F-gs-font 7 7 SF
415.6 442 M (73:) s
/Courier-Oblique 7 7 SUF
432.4 442 M
( * obj.addNum\(num\);) s
/F-gs-font 7 7 SF
415.6 434 M (74:) s
/Courier-Oblique 7 7 SUF
432.4 434 M
( * double param_2 = obj.findMedian\(\);) s
/F-gs-font 7 7 SF
415.6 426 M (75:) s
/Courier-Oblique 7 7 SUF
432.4 426 M
( */) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 135
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./linkedlists/MergeTwoSortedLists.java) def
/fdir (./linkedlists) def
/ftail (MergeTwoSortedLists.java) def
% User defined strings:
/fmodstr (Wed Dec 12 23:38:47 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (MergeTwoSortedLists.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(        Merge two sorted linked lists and return it as a new list. The new list shou) s
5 490 M
(ld be made by splicing together the nodes of the first two lists.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(        Example:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(        Input: 1->2->4, 1->3->4) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Output: 1->1->2->3->4->4) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
( */) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(/**) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
( * Definition for singly-linked list.) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
( * public class ListNode {) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
( *     ListNode next;) s
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
( *     ListNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( * }) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( */) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Bold 7 7 SUF
35.4 362 M
(class) s
/F-gs-font 7 7 SF
56.4 362 M
( MergeTwoSortedLists {) s
18.6 354 M (21:) s
35.4 354 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 354 M
(public) s
/F-gs-font 7 7 SF
69 354 M
( ListNode mergeTwoLists\(ListNode l1, ListNode l2\) {) s
18.6 346 M (22:) s
35.4 346 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 346 M
(if) s
/F-gs-font 7 7 SF
60.6 346 M
(\(l1 == ) s
/Courier-Bold 7 7 SUF
90 346 M
(null) s
/F-gs-font 7 7 SF
106.8 346 M
(\) ) s
/Courier-Bold 7 7 SUF
115.2 346 M
(return) s
/F-gs-font 7 7 SF
140.4 346 M
( l2;) s
18.6 338 M (23:) s
35.4 338 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 338 M
(if) s
/F-gs-font 7 7 SF
60.6 338 M
(\(l2 == ) s
/Courier-Bold 7 7 SUF
90 338 M
(null) s
/F-gs-font 7 7 SF
106.8 338 M
(\) ) s
/Courier-Bold 7 7 SUF
115.2 338 M
(return) s
/F-gs-font 7 7 SF
140.4 338 M
( l1;) s
18.6 330 M (24:) s
18.6 322 M (25:) s
35.4 322 M
(    ListNode head = ) s
/Courier-Bold 7 7 SUF
119.4 322 M
(null) s
/F-gs-font 7 7 SF
136.2 322 M
(;) s
18.6 314 M (26:) s
18.6 306 M (27:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(if) s
/F-gs-font 7 7 SF
60.6 306 M
(\(l1.val < l2.val\) {) s
18.6 298 M (28:) s
35.4 298 M
(      head = l1;) s
18.6 290 M (29:) s
35.4 290 M
(      l1 = l1.next;) s
18.6 282 M (30:) s
35.4 282 M
(    } ) s
/Courier-Bold 7 7 SUF
60.6 282 M
(else) s
/F-gs-font 7 7 SF
77.4 282 M
( {) s
18.6 274 M (31:) s
35.4 274 M
(      head = l2;) s
18.6 266 M (32:) s
35.4 266 M
(      l2 = l2.next;) s
18.6 258 M (33:) s
35.4 258 M
(    }) s
18.6 250 M (34:) s
18.6 242 M (35:) s
35.4 242 M
(    ListNode curr = head;) s
18.6 234 M (36:) s
18.6 226 M (37:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(while) s
/F-gs-font 7 7 SF
73.2 226 M
(\(l1 != ) s
/Courier-Bold 7 7 SUF
102.6 226 M
(null) s
/F-gs-font 7 7 SF
119.4 226 M
( && l2 != ) s
/Courier-Bold 7 7 SUF
161.4 226 M
(null) s
/F-gs-font 7 7 SF
178.2 226 M
(\) {) s
18.6 218 M (38:) s
35.4 218 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 218 M
(if) s
/F-gs-font 7 7 SF
69 218 M
(\(l1.val < l2.val\) {) s
18.6 210 M (39:) s
35.4 210 M
(        curr.next = l1;) s
18.6 202 M (40:) s
35.4 202 M
(        l1 = l1.next;) s
18.6 194 M (41:) s
35.4 194 M
(      } ) s
/Courier-Bold 7 7 SUF
69 194 M
(else) s
/F-gs-font 7 7 SF
85.8 194 M
( {) s
18.6 186 M (42:) s
35.4 186 M
(        curr.next = l2;) s
18.6 178 M (43:) s
35.4 178 M
(        l2 = l2.next;) s
18.6 170 M (44:) s
35.4 170 M
(      }) s
18.6 162 M (45:) s
18.6 154 M (46:) s
35.4 154 M
(      curr = curr.next;) s
18.6 146 M (47:) s
35.4 146 M
(    }) s
18.6 138 M (48:) s
18.6 130 M (49:) s
35.4 130 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 130 M
(if) s
/F-gs-font 7 7 SF
60.6 130 M
(\(l1 != ) s
/Courier-Bold 7 7 SUF
90 130 M
(null) s
/F-gs-font 7 7 SF
106.8 130 M
(\) curr.next = l1;) s
18.6 122 M (50:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(else) s
/F-gs-font 7 7 SF
69 122 M
( ) s
/Courier-Bold 7 7 SUF
73.2 122 M
(if) s
/F-gs-font 7 7 SF
81.6 122 M
(\(l2 != ) s
/Courier-Bold 7 7 SUF
111 122 M
(null) s
/F-gs-font 7 7 SF
127.8 122 M
(\) curr.next = l2;) s
18.6 114 M (51:) s
18.6 106 M (52:) s
35.4 106 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 106 M
(return) s
/F-gs-font 7 7 SF
77.4 106 M
( head;) s
18.6 98 M (53:) s
35.4 98 M
(  }) s
18.6 90 M (54:) s
35.4 90 M
(}) s
_R
S
%%Page: (1) 136
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./linkedlists/ReverseLinkedList.java) def
/fdir (./linkedlists) def
/ftail (ReverseLinkedList.java) def
% User defined strings:
/fmodstr (Mon Dec 10 21:51:11 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (ReverseLinkedList.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(        Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
35.4 506 M
(        Runtime: 0 ms, faster than 100.00% of Java online submissions for Reverse Li) s
5 498 M
(nked List.) s
/F-gs-font 7 7 SF
22.8 490 M (4:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
35.4 482 M
(        Reverse a singly linked list.) s
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
35.4 466 M
(        Example:) s
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(        Input: 1->2->3->4->5->NULL) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 442 M
(        Output: 5->4->3->2->1->NULL) s
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(        Follow up:) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(        A linked list can be reversed either iteratively or recursively. Could you i) s
5 410 M
(mplement both?) s
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
( */) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(/**) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
( * Definition for singly-linked list.) s
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
( * public class ListNode {) s
/F-gs-font 7 7 SF
18.6 362 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 354 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
( *     ListNode next;) s
/F-gs-font 7 7 SF
18.6 346 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( *     ListNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 338 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
( * }) s
/F-gs-font 7 7 SF
18.6 330 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
( */) s
/F-gs-font 7 7 SF
18.6 322 M (24:) s
/Courier-Bold 7 7 SUF
35.4 322 M
(class) s
/F-gs-font 7 7 SF
56.4 322 M
( ReverseLinkedList {) s
18.6 314 M (25:) s
35.4 314 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 314 M
(public) s
/F-gs-font 7 7 SF
69 314 M
( ListNode reverseList\(ListNode head\) {) s
18.6 306 M (26:) s
35.4 306 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 306 M
(if) s
/F-gs-font 7 7 SF
60.6 306 M
(\(head == ) s
/Courier-Bold 7 7 SUF
98.4 306 M
(null) s
/F-gs-font 7 7 SF
115.2 306 M
( || head.next == ) s
/Courier-Bold 7 7 SUF
186.6 306 M
(null) s
/F-gs-font 7 7 SF
203.4 306 M
(\) ) s
/Courier-Bold 7 7 SUF
211.8 306 M
(return) s
/F-gs-font 7 7 SF
237 306 M
( head;) s
18.6 298 M (27:) s
18.6 290 M (28:) s
35.4 290 M
(    ListNode new_head = head;) s
18.6 282 M (29:) s
35.4 282 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 282 M
(while) s
/F-gs-font 7 7 SF
73.2 282 M
(\(head.next != ) s
/Courier-Bold 7 7 SUF
132 282 M
(null) s
/F-gs-font 7 7 SF
148.8 282 M
(\) {) s
18.6 274 M (30:) s
35.4 274 M
(      ListNode temp = head.next;) s
18.6 266 M (31:) s
35.4 266 M
(      head.next = temp.next;) s
18.6 258 M (32:) s
35.4 258 M
(      temp.next = new_head;) s
18.6 250 M (33:) s
35.4 250 M
(      new_head = temp;) s
18.6 242 M (34:) s
35.4 242 M
(    }) s
18.6 234 M (35:) s
18.6 226 M (36:) s
35.4 226 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 226 M
(return) s
/F-gs-font 7 7 SF
77.4 226 M
( new_head;) s
18.6 218 M (37:) s
35.4 218 M
(  }) s
18.6 210 M (38:) s
18.6 202 M (39:) s
35.4 202 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 202 M
(public) s
/F-gs-font 7 7 SF
69 202 M
( ListNode reverseList2\(ListNode head\) {) s
18.6 194 M (40:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(if) s
/F-gs-font 7 7 SF
60.6 194 M
(\(head == ) s
/Courier-Bold 7 7 SUF
98.4 194 M
(null) s
/F-gs-font 7 7 SF
115.2 194 M
( || head.next == ) s
/Courier-Bold 7 7 SUF
186.6 194 M
(null) s
/F-gs-font 7 7 SF
203.4 194 M
(\) ) s
/Courier-Bold 7 7 SUF
211.8 194 M
(return) s
/F-gs-font 7 7 SF
237 194 M
( head;) s
18.6 186 M (41:) s
18.6 178 M (42:) s
35.4 178 M
(    ListNode temp = reverseList2\(head.next\);) s
18.6 170 M (43:) s
35.4 170 M
(    head.next.next = head;) s
18.6 162 M (44:) s
35.4 162 M
(    head.next = ) s
/Courier-Bold 7 7 SUF
102.6 162 M
(null) s
/F-gs-font 7 7 SF
119.4 162 M
(;) s
18.6 154 M (45:) s
35.4 154 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 154 M
(return) s
/F-gs-font 7 7 SF
77.4 154 M
( temp;) s
18.6 146 M (46:) s
35.4 146 M
(  }) s
18.6 138 M (47:) s
35.4 138 M
(}) s
_R
S
%%Page: (1) 137
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./linkedlists/DeleteNodeInALinkedList.java) def
/fdir (./linkedlists) def
/ftail (DeleteNodeInALinkedList.java) def
% User defined strings:
/fmodstr (Sun Dec 16 21:40:44 2018) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (DeleteNodeInALinkedList.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Easy) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Write a function to delete a node \(except the tail\) in a singly linked list, given) s
5 490 M
( only access to that node.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  Given linked list -- head = [4,5,1,9], which looks like following:) s
/F-gs-font 7 7 SF
22.8 466 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 458 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 458 M
(  4 -> 5 -> 1 -> 9) s
/F-gs-font 7 7 SF
22.8 450 M (9:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
18.6 442 M (10:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: head = [4,5,1,9], node = 5) s
/F-gs-font 7 7 SF
18.6 426 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: [4,1,9]) s
/F-gs-font 7 7 SF
18.6 418 M (13:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Explanation: You are given the second node with value 5, the linked list) s
/F-gs-font 7 7 SF
18.6 410 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 410 M
(  should become 4 -> 1 -> 9 after calling your function.) s
/F-gs-font 7 7 SF
18.6 402 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 394 M (16:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 386 M (17:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Input: head = [4,5,1,9], node = 1) s
/F-gs-font 7 7 SF
18.6 378 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 378 M
(  Output: [4,5,9]) s
/F-gs-font 7 7 SF
18.6 370 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  Explanation: You are given the third node with value 1, the linked list) s
/F-gs-font 7 7 SF
18.6 362 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 362 M
(  should become 4 -> 5 -> 9 after calling your function.) s
/F-gs-font 7 7 SF
18.6 354 M (21:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 346 M (22:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 338 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 338 M
(  The linked list will have at least two elements.) s
/F-gs-font 7 7 SF
18.6 330 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(  All of the nodes' values will be unique.) s
/F-gs-font 7 7 SF
18.6 322 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
(  The given node will not be the tail and it will always be a valid node of the link) s
5 314 M
(ed list.) s
/F-gs-font 7 7 SF
18.6 306 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
(  Do not return anything from your function.) s
/F-gs-font 7 7 SF
18.6 298 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( */) s
/F-gs-font 7 7 SF
18.6 290 M (28:) s
18.6 282 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
(/**) s
/F-gs-font 7 7 SF
18.6 274 M (30:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( * Definition for singly-linked list.) s
/F-gs-font 7 7 SF
18.6 266 M (31:) s
/Courier-Oblique 7 7 SUF
35.4 266 M
( * public class ListNode {) s
/F-gs-font 7 7 SF
18.6 258 M (32:) s
/Courier-Oblique 7 7 SUF
35.4 258 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 250 M (33:) s
/Courier-Oblique 7 7 SUF
35.4 250 M
( *     ListNode next;) s
/F-gs-font 7 7 SF
18.6 242 M (34:) s
/Courier-Oblique 7 7 SUF
35.4 242 M
( *     ListNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 234 M (35:) s
/Courier-Oblique 7 7 SUF
35.4 234 M
( * }) s
/F-gs-font 7 7 SF
18.6 226 M (36:) s
/Courier-Oblique 7 7 SUF
35.4 226 M
( */) s
/F-gs-font 7 7 SF
18.6 218 M (37:) s
/Courier-Bold 7 7 SUF
35.4 218 M
(class) s
/F-gs-font 7 7 SF
56.4 218 M
( DeleteNodeInALinkedList {) s
18.6 210 M (38:) s
35.4 210 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 210 M
(public) s
/F-gs-font 7 7 SF
69 210 M
( ) s
/Courier-Bold 7 7 SUF
73.2 210 M
(void) s
/F-gs-font 7 7 SF
90 210 M
( deleteNode\(ListNode node\) {) s
18.6 202 M (39:) s
35.4 202 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 202 M
(if) s
/F-gs-font 7 7 SF
60.6 202 M
(\(node.next == ) s
/Courier-Bold 7 7 SUF
119.4 202 M
(null) s
/F-gs-font 7 7 SF
136.2 202 M
(\) ) s
/Courier-Bold 7 7 SUF
144.6 202 M
(return) s
/F-gs-font 7 7 SF
169.8 202 M
(;) s
18.6 194 M (40:) s
18.6 186 M (41:) s
35.4 186 M
(    node.val = node.next.val;) s
18.6 178 M (42:) s
35.4 178 M
(    node.next = node.next.next;) s
18.6 170 M (43:) s
35.4 170 M
(  }) s
18.6 162 M (44:) s
35.4 162 M
(}) s
_R
S
%%Page: (1) 138
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (./linkedlists/OddEvenLinkedList.java) def
/fdir (./linkedlists) def
/ftail (OddEvenLinkedList.java) def
% User defined strings:
/fmodstr (Sun Apr 07 00:27:56 2019) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (OddEvenLinkedList.java Page 1 of 1) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
22.8 522 M (1:) s
/Courier-Oblique 7 7 SUF
35.4 522 M
(/*) s
/F-gs-font 7 7 SF
22.8 514 M (2:) s
/Courier-Oblique 7 7 SUF
35.4 514 M
(  Difficulty: Medium) s
/F-gs-font 7 7 SF
22.8 506 M (3:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 498 M (4:) s
/Courier-Oblique 7 7 SUF
35.4 498 M
(  Given a singly linked list, group all odd nodes together followed by the even node) s
5 490 M
(s. Please note here we are talking about the node number and not the value in the nodes.) s
/F-gs-font 7 7 SF
22.8 482 M (5:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 474 M (6:) s
/Courier-Oblique 7 7 SUF
35.4 474 M
(  You should try to do it in place. The program should run in O\(1\) space complexity ) s
5 466 M
(and O\(nodes\) time complexity.) s
/F-gs-font 7 7 SF
22.8 458 M (7:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
22.8 450 M (8:) s
/Courier-Oblique 7 7 SUF
35.4 450 M
(  Example 1:) s
/F-gs-font 7 7 SF
22.8 442 M (9:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 434 M (10:) s
/Courier-Oblique 7 7 SUF
35.4 434 M
(  Input: 1->2->3->4->5->NULL) s
/F-gs-font 7 7 SF
18.6 426 M (11:) s
/Courier-Oblique 7 7 SUF
35.4 426 M
(  Output: 1->3->5->2->4->NULL) s
/F-gs-font 7 7 SF
18.6 418 M (12:) s
/Courier-Oblique 7 7 SUF
35.4 418 M
(  Example 2:) s
/F-gs-font 7 7 SF
18.6 410 M (13:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 402 M (14:) s
/Courier-Oblique 7 7 SUF
35.4 402 M
(  Input: 2->1->3->5->6->4->7->NULL) s
/F-gs-font 7 7 SF
18.6 394 M (15:) s
/Courier-Oblique 7 7 SUF
35.4 394 M
(  Output: 2->3->6->7->1->5->4->NULL) s
/F-gs-font 7 7 SF
18.6 386 M (16:) s
/Courier-Oblique 7 7 SUF
35.4 386 M
(  Note:) s
/F-gs-font 7 7 SF
18.6 378 M (17:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
18.6 370 M (18:) s
/Courier-Oblique 7 7 SUF
35.4 370 M
(  The relative order inside both the even and odd groups should remain as it was in ) s
5 362 M
(the input.) s
/F-gs-font 7 7 SF
18.6 354 M (19:) s
/Courier-Oblique 7 7 SUF
35.4 354 M
(  The first node is considered odd, the second node even and so on ...) s
/F-gs-font 7 7 SF
18.6 346 M (20:) s
/Courier-Oblique 7 7 SUF
35.4 346 M
( */) s
/F-gs-font 7 7 SF
18.6 338 M (21:) s
18.6 330 M (22:) s
/Courier-Oblique 7 7 SUF
35.4 330 M
(/**) s
/F-gs-font 7 7 SF
18.6 322 M (23:) s
/Courier-Oblique 7 7 SUF
35.4 322 M
( * Definition for singly-linked list.) s
/F-gs-font 7 7 SF
18.6 314 M (24:) s
/Courier-Oblique 7 7 SUF
35.4 314 M
( * public class ListNode {) s
/F-gs-font 7 7 SF
18.6 306 M (25:) s
/Courier-Oblique 7 7 SUF
35.4 306 M
( *     int val;) s
/F-gs-font 7 7 SF
18.6 298 M (26:) s
/Courier-Oblique 7 7 SUF
35.4 298 M
( *     ListNode next;) s
/F-gs-font 7 7 SF
18.6 290 M (27:) s
/Courier-Oblique 7 7 SUF
35.4 290 M
( *     ListNode\(int x\) { val = x; }) s
/F-gs-font 7 7 SF
18.6 282 M (28:) s
/Courier-Oblique 7 7 SUF
35.4 282 M
( * }) s
/F-gs-font 7 7 SF
18.6 274 M (29:) s
/Courier-Oblique 7 7 SUF
35.4 274 M
( */) s
/F-gs-font 7 7 SF
18.6 266 M (30:) s
/Courier-Bold 7 7 SUF
35.4 266 M
(class) s
/F-gs-font 7 7 SF
56.4 266 M
( Solution {) s
18.6 258 M (31:) s
35.4 258 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 258 M
(// 1: without counter) s
/F-gs-font 7 7 SF
18.6 250 M (32:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 250 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 250 M
(public) s
/F-gs-font 7 7 SF
69 250 M
( ListNode oddEvenList\(ListNode head\) {) s
18.6 242 M (33:) s
35.4 242 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 242 M
(if) s
/F-gs-font 7 7 SF
60.6 242 M
(\(head == ) s
/Courier-Bold 7 7 SUF
98.4 242 M
(null) s
/F-gs-font 7 7 SF
115.2 242 M
(\) ) s
/Courier-Bold 7 7 SUF
123.6 242 M
(return) s
/F-gs-font 7 7 SF
148.8 242 M
( ) s
/Courier-Bold 7 7 SUF
153 242 M
(null) s
/F-gs-font 7 7 SF
169.8 242 M
(;) s
18.6 234 M (34:) s
18.6 226 M (35:) s
35.4 226 M
(    ListNode odd = head;) s
18.6 218 M (36:) s
35.4 218 M
(    ListNode evenHead = head.next;) s
18.6 210 M (37:) s
35.4 210 M
(    ListNode even = head.next;) s
18.6 202 M (38:) s
18.6 194 M (39:) s
35.4 194 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 194 M
(while) s
/F-gs-font 7 7 SF
73.2 194 M
(\(even != ) s
/Courier-Bold 7 7 SUF
111 194 M
(null) s
/F-gs-font 7 7 SF
127.8 194 M
( && even.next != ) s
/Courier-Bold 7 7 SUF
199.2 194 M
(null) s
/F-gs-font 7 7 SF
216 194 M
(\) {) s
18.6 186 M (40:) s
35.4 186 M
(      odd.next = even.next;) s
18.6 178 M (41:) s
35.4 178 M
(      odd = odd.next;) s
18.6 170 M (42:) s
18.6 162 M (43:) s
35.4 162 M
(      even.next = odd.next;) s
18.6 154 M (44:) s
35.4 154 M
(      even = even.next;) s
18.6 146 M (45:) s
35.4 146 M
(    }) s
18.6 138 M (46:) s
35.4 138 M
(    odd.next = evenHead;) s
18.6 130 M (47:) s
18.6 122 M (48:) s
35.4 122 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 122 M
(return) s
/F-gs-font 7 7 SF
77.4 122 M
( head;) s
18.6 114 M (49:) s
35.4 114 M
(  }) s
18.6 106 M (50:) s
18.6 98 M (51:) s
35.4 98 M
(  ) s
/Courier-Oblique 7 7 SUF
43.8 98 M
(// 2: with counter and current Node) s
/F-gs-font 7 7 SF
18.6 90 M (52:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
35.4 90 M
(  ) s
/Courier-Bold 7 7 SUF
43.8 90 M
(public) s
/F-gs-font 7 7 SF
69 90 M
( ListNode oddEvenList\(ListNode head\) {) s
18.6 82 M (53:) s
35.4 82 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 82 M
(if) s
/F-gs-font 7 7 SF
60.6 82 M
(\(head.next == ) s
/Courier-Bold 7 7 SUF
119.4 82 M
(null) s
/F-gs-font 7 7 SF
136.2 82 M
(\) ) s
/Courier-Bold 7 7 SUF
144.6 82 M
(return) s
/F-gs-font 7 7 SF
169.8 82 M
( head;) s
18.6 74 M (54:) s
18.6 66 M (55:) s
35.4 66 M
(    ListNode odd = head;) s
18.6 58 M (56:) s
35.4 58 M
(    ListNode evenHead = head.next;) s
18.6 50 M (57:) s
35.4 50 M
(    ListNode even = head.next;) s
18.6 42 M (58:) s
35.4 42 M
(    ListNode curr = head.next.next;) s
18.6 34 M (59:) s
18.6 26 M (60:) s
35.4 26 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 26 M
(int) s
/F-gs-font 7 7 SF
64.8 26 M
( count = 1;) s
18.6 18 M (61:) s
35.4 18 M
(    ) s
/Courier-Bold 7 7 SUF
52.2 18 M
(while) s
/F-gs-font 7 7 SF
73.2 18 M
(\(curr != ) s
/Courier-Bold 7 7 SUF
111 18 M
(null) s
/F-gs-font 7 7 SF
127.8 18 M
(\) {) s
18.6 10 M (62:) s
35.4 10 M
(      ) s
/Courier-Bold 7 7 SUF
60.6 10 M
(if) s
/F-gs-font 7 7 SF
69 10 M
(\(count % 2 == 0\) {) s
18.6 2 M (63:) s
35.4 2 M
(        even.next = curr;) s
415.6 522 M (64:) s
432.4 522 M
(        even = even.next;) s
415.6 514 M (65:) s
432.4 514 M
(      } ) s
/Courier-Bold 7 7 SUF
466 514 M
(else) s
/F-gs-font 7 7 SF
482.8 514 M
( {) s
415.6 506 M (66:) s
432.4 506 M
(        odd.next = curr;) s
415.6 498 M (67:) s
432.4 498 M
(        odd = odd.next;) s
415.6 490 M (68:) s
432.4 490 M
(      }) s
415.6 482 M (69:) s
415.6 474 M (70:) s
432.4 474 M
(      count++;) s
415.6 466 M (71:) s
432.4 466 M
(      curr = curr.next;) s
415.6 458 M (72:) s
432.4 458 M
(    }) s
415.6 450 M (73:) s
432.4 450 M
(    even.next = ) s
/Courier-Bold 7 7 SUF
499.6 450 M
(null) s
/F-gs-font 7 7 SF
516.4 450 M
(; ) s
/Courier-Oblique 7 7 SUF
524.8 450 M
(// make the tail.next = null) s
/F-gs-font 7 7 SF
415.6 442 M (74:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
415.6 434 M (75:) s
432.4 434 M
(    odd.next = evenHead; ) s
/Courier-Oblique 7 7 SUF
537.4 434 M
(// join odd and even) s
/F-gs-font 7 7 SF
415.6 426 M (76:) s
/Courier-Oblique 7 7 SUF
/F-gs-font 7 7 SF
415.6 418 M (77:) s
432.4 418 M
(    ) s
/Courier-Bold 7 7 SUF
449.2 418 M
(return) s
/F-gs-font 7 7 SF
474.4 418 M
( head;) s
415.6 410 M (78:) s
432.4 410 M
(  }) s
415.6 402 M (79:) s
432.4 402 M
(}) s
_R
S
%%Trailer
%%Pages: 138
%%DocumentNeededResources: font Courier-Oblique Courier-Bold Courier 
%%EOF
